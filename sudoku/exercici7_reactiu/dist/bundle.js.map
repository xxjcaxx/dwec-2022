{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,WAAW,QAAQ;AACnB,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA,WAAW,iBAAiB;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA,uBAAuB,iBAAiB;;AAExC;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACnHA,yFAAsC;;;;;;;;;;;ACAtC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,eAAe;;AAEf;AACA;AACA;;AAEA,8GAAmD;;AAEnD;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,iEAAc;;AAEjC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa,MAAM;AACnB;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,6DAAe;AACpC,cAAc;;AAEd;AACA;AACA;;AAEA,gBAAgB,mBAAO,CAAC,mEAAkB;AAC1C;;AAEA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,+EAAwB;AAC3C;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,iFAAyB;AAC9C;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,iFAAyB;AAC9C;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,iFAAyB;AAC9C;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,wDAAU;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,iBAAiB;AAC9B,aAAa,iBAAiB;AAC9B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;AC9KA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,KAAK;AAClE,iBAAiB,KAAK,iBAAiB,KAAK;AAC5C,iBAAiB,KAAK,gBAAgB,KAAK;AAC3C;AACA,8DAA8D,KAAK;AACnE,kBAAkB,KAAK,oBAAoB,KAAK;AAChD,kBAAkB,KAAK,mBAAmB,KAAK;AAC/C;AACA,kEAAkE,KAAK;AACvE,iBAAiB,IAAI,MAAM,mBAAmB,IAAI,MAAM;AACxD,iBAAiB,IAAI,MAAM,kBAAkB,IAAI,MAAM;AACvD;AACA,gEAAgE,KAAK;AACrE,kBAAkB,KAAK,0BAA0B,KAAK;AACtD,kBAAkB,KAAK,yBAAyB,KAAK;AACrD;AACA,2DAA2D,KAAK;AAChE,0BAA0B,KAAK,wBAAwB,KAAK;AAC5D,0BAA0B,KAAK,uBAAuB,KAAK;AAC3D;AACA,sEAAsE,KAAK;AAC3E,iBAAiB,IAAI,MAAM,8BAA8B,KAAK;AAC9D,iBAAiB,IAAI,MAAM,6BAA6B,KAAK;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI,eAAe;AACpC,iBAAiB,IAAI,eAAe,qBAAqB,cAAc;AACvE;AACA;AACA;AACA;AACA,iBAAiB,OAAO,YAAY;AACpC,iBAAiB,OAAO,YAAY,qBAAqB,oBAAoB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB;AACA,iBAAiB,KAAK,kBAAkB,KAAK;AAC7C,iBAAiB,KAAK,cAAc,KAAK,uBAAuB,KAAK;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB,cAAc,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,KAAK;AACnE,kBAAkB,KAAK,oBAAoB,KAAK;AAChD,kBAAkB,KAAK,mBAAmB,KAAK;AAC/C;AACA,kEAAkE,KAAK;AACvE,iBAAiB,IAAI,MAAM,mBAAmB,IAAI,MAAM;AACxD,iBAAiB,IAAI,MAAM,kBAAkB,IAAI,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,kBAAkB,KAAK;AAC7C,iBAAiB,KAAK,cAAc,KAAK,uBAAuB,KAAK;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI,MAAM,uBAAuB,IAAI,MAAM;AAC5D;AACA;AACA;AACA;AACA,iBAAiB,IAAI,eAAe,qBAAqB,cAAc;AACvE;AACA;AACA;AACA;AACA,iBAAiB,OAAO,UAAU,qBAAqB,kBAAkB;AACzE;AACA;AACA;AACA,iBAAiB,IAAI,KAAK,KAAK,GAAG,0BAA0B,WAAW,MAAM;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,kCAAkC;AACxD,iBAAiB,KAAK,kBAAkB,WAAW,GAAG;AACtD;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW,cAAc,WAAW,GAAG;AACxD,iBAAiB,WAAW,kBAAkB,WAAW,GAAG;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B;AACA,kCAAkC;AAClC,gCAAgC;AAChC;AACA;AACA;AACA,gCAAgC;AAChC,iCAAiC;AACjC;AACA,oCAAoC;AACpC,qCAAqC;AACrC;AACA,kCAAkC;AAClC,oCAAoC;AACpC;AACA,4CAA4C;AAC5C,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,uCAAuC;AACvC;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,uCAAuC;AACvC;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,sBAAsB,MAAM;AAC5B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,6BAA6B;AAC7B;AACA,gCAAgC;AAChC,6BAA6B;AAC7B;AACA;AACA;AACA,kCAAkC;AAClC,oCAAoC;AACpC;AACA,4CAA4C;AAC5C,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,4CAA4C;AAC5C;AACA,iEAAiE;AACjE,qDAAqD;AACrD;AACA,6BAA6B,KAAK,wBAAwB;AAC1D,iBAAiB,KAAK,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,4CAA4C;AAC5C;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,KAAK;AAClE,iBAAiB,KAAK,iBAAiB,KAAK;AAC5C,iBAAiB,KAAK,gBAAgB,KAAK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,sBAAsB,MAAM,WAAW,IAAI;AAC3C,sBAAsB,MAAM,eAAe,IAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,iBAAiB,KAAK,UAAU,KAAK,iBAAiB,KAAK;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,UAAU,KAAK,GAAG;AACxC,iBAAiB,KAAK,cAAc,KAAK,GAAG;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,UAAU,KAAK;AACrC,iBAAiB,KAAK,6BAA6B,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,MAAM,kBAAkB,IAAI;AAChD,oBAAoB,MAAM,sBAAsB,IAAI;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,kDAAkD;AAClD;AACA,gDAAgD;AAChD,sDAAsD;AACtD;AACA;AACA;AACA,gCAAgC;AAChC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,MAAM,qCAAqC,KAAK,UAAU,IAAI;AACpF,sBAAsB,MAAM,yCAAyC,IAAI;AACzE;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,sBAAsB,MAAM,cAAc,IAAI;AAC9C,sBAAsB,MAAM,gBAAgB,IAAI;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,qDAAqD;AACrD;AACA,gDAAgD;AAChD,yDAAyD;AACzD;AACA;AACA;AACA,gCAAgC;AAChC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,MAAM,wCAAwC,KAAK,UAAU,IAAI;AACvF,sBAAsB,MAAM,qCAAqC,IAAI;AACrE;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,sBAAsB,MAAM,iBAAiB,IAAI;AACjD,sBAAsB,MAAM,cAAc,IAAI;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,mCAAmC;AACnC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,kDAAkD;AAClD;AACA,8CAA8C;AAC9C,sDAAsD;AACtD;AACA;AACA;AACA,gCAAgC;AAChC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,MAAM,qCAAqC,KAAK,UAAU,IAAI;AACpF,sBAAsB,MAAM,yCAAyC,IAAI;AACzE;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,sBAAsB,MAAM,cAAc,IAAI;AAC9C,sBAAsB,MAAM,iBAAiB,IAAI;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,qCAAqC;AACrC,qCAAqC;AACrC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,oDAAoD;AACpD;AACA,gDAAgD;AAChD,wDAAwD;AACxD;AACA;AACA;AACA,gCAAgC;AAChC,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,MAAM,uCAAuC,KAAK,UAAU,IAAI;AACtF,sBAAsB,MAAM,qCAAqC,IAAI;AACrE;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,sBAAsB,MAAM,gBAAgB,IAAI;AAChD,sBAAsB,MAAM,cAAc,IAAI;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,uCAAuC;AACvC,uCAAuC;AACvC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,sDAAsD;AACtD;AACA,gDAAgD;AAChD,0DAA0D;AAC1D;AACA;AACA;AACA,gCAAgC;AAChC,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,sBAAsB,MAAM;AAC5B;AACA,MAAM;AACN;AACA;AACA,sBAAsB,MAAM;AAC5B,sBAAsB,MAAM;AAC5B;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,sEAAsE,KAAK;AAC3E,iBAAiB,IAAI,MAAM,8BAA8B,KAAK;AAC9D,iBAAiB,IAAI,MAAM,6BAA6B,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,iBAAiB,IAAI,MAAM,kCAAkC,KAAK;AAClE;AACA;AACA;AACA;AACA,iBAAiB,IAAI,eAAe;AACpC,iBAAiB,IAAI,eAAe;AACpC;AACA;AACA;AACA;AACA,iBAAiB,OAAO,YAAY;AACpC;AACA;AACA;AACA,iBAAiB,IAAI,KAAK,KAAK,GAAG;AAClC,oDAAoD,KAAK;AACzD;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,6BAA6B;AACnD,iBAAiB,KAAK,gCAAgC;AACtD;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK,4BAA4B;AAClD,iBAAiB,KAAK,gCAAgC;AACtD;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,sBAAsB,MAAM;AAC5B;;AAEA;AACA;AACA;AACA,sBAAsB,MAAM,kDAAkD,IAAI,YAAY,IAAI;AAClG,sBAAsB,MAAM,sDAAsD,IAAI;AACtF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,MAAM;AACvF,iFAAiF,MAAM;AACvF;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,sBAAsB,MAAM;AAC5B,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE,mDAAmD;AACnD;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM,kCAAkC,KAAK,UAAU,IAAI;AAC/E,oBAAoB,MAAM,sCAAsC,IAAI;AACpE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,iBAAiB,WAAW,oBAAoB,WAAW,GAAG;AAC9D,8CAA8C,WAAW,GAAG;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,KAAK;AAChE,0BAA0B,KAAK,4BAA4B,KAAK;AAChE,0BAA0B,KAAK,2BAA2B,KAAK;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB,WAAW;AAC5B;AACA,6BAA6B;AAC7B;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB,WAAW;AAC5B;AACA,6BAA6B;AAC7B;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW,8BAA8B;AAC1D,iBAAiB,WAAW,0BAA0B;AACtD;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,kBAAkB;;AAE1D;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,sDAAsD;AACtD,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA,8BAA8B,SAAS,eAAe;AACtD,sDAAsD;AACtD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,8BAA8B,aAAa,eAAe;AAC1D,0DAA0D;AAC1D,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC,QAAQ;AACR;AACA;;AAEA;AACA;AACA,sBAAsB,MAAM;AAC5B,sBAAsB,MAAM,4BAA4B,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,4BAA4B,MAAM,WAAW,KAAK,MAAM,KAAK;AAC7D,4BAA4B,MAAM,eAAe,IAAI,oCAAoC,KAAK;AAC9F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,0BAA0B,MAAM,WAAW,KAAK,MAAM,KAAK;AAC3D,0BAA0B,MAAM,eAAe,IAAI,yBAAyB,KAAK;AACjF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,0BAA0B,MAAM,qCAAqC,KAAK,UAAU,IAAI;AACxF,0BAA0B,MAAM,yCAAyC,IAAI;AAC7E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,MAAM,WAAW,KAAK,MAAM,KAAK;AACvD,sBAAsB,MAAM,eAAe,IAAI,yBAAyB,KAAK;AAC7E;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,KAAK;AACrE,kBAAkB,KAAK,0BAA0B,KAAK;AACtD,kBAAkB,KAAK,yBAAyB,KAAK;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,KAAK,GAAG,KAAK,GAAG,KAAK;AACvC,8CAA8C,KAAK,GAAG,KAAK;AAC3D,mDAAmD,KAAK,GAAG,KAAK;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,4BAA4B,MAAM,2BAA2B,IAAI;AACjE,kCAAkC,MAAM,+BAA+B,IAAI;AAC3E,MAAM;AACN;AACA,4BAA4B,MAAM,sCAAsC,IAAI;AAC5E,kCAAkC,MAAM,0CAA0C,IAAI;AACtF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,2CAA2C;AACrF,sBAAsB,MAAM,oBAAoB,IAAI;AACpD,sBAAsB,MAAM,wBAAwB,IAAI;AACxD;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,4CAA4C,qCAAqC;AACjF,wBAAwB,MAAM,yBAAyB,IAAI;AAC3D,wBAAwB,MAAM,yBAAyB,IAAI;AAC3D;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,wBAAwB,MAAM,eAAe,IAAI;AACjD,wBAAwB,MAAM,mBAAmB,IAAI;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC,yCAAyC;AACzC;AACA,yDAAyD;AACzD,uDAAuD;AACvD;AACA,8DAA8D;AAC9D,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA,mDAAmD;AACnD,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC;AACA,yDAAyD;AACzD,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,yCAAyC;AACzC;AACA,8DAA8D;AAC9D,4DAA4D;AAC5D;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,mDAAmD;AACnD,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,oCAAoC;AACpC;AACA,wDAAwD;AACxD,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,yCAAyC;AACzC;AACA,8DAA8D;AAC9D,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC;AACA,yDAAyD;AACzD,uDAAuD;AACvD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,mDAAmD;AACnD,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC,yCAAyC;AACzC;AACA,yDAAyD;AACzD,uDAAuD;AACvD;AACA,8DAA8D;AAC9D,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,8DAA8D;AAC9D,0CAA0C;AAC1C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,yCAAyC;AACzC;AACA;AACA;AACA;AACA,gCAAgC;AAChC,uCAAuC;AACvC;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,gDAAgD;AAChD,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM;AAC1B,oBAAoB,MAAM;AAC1B;AACA,GAAG;AACH;;;;;;;;;;;AC5wHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM,WAAW,IAAI;AACzC,oBAAoB,MAAM,eAAe,IAAI;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,MAAM,eAAe,IAAI;AAC7C,oBAAoB,MAAM,WAAW,IAAI;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,cAAc,IAAI,cAAc;AAC5D;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B,cAAc,IAAI,gBAAgB;AACjE;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,+BAA+B,IAAI,YAAY;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA,yBAAyB,qBAAqB,GAAG,UAAU;AAC3D,yBAAyB,qBAAqB,GAAG,qBAAqB;AACtE;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+BAA+B,IAAI,YAAY;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB,0CAA0C,KAAK;AAC/C,4BAA4B,qBAAqB,GAAG,MAAM,MAAM;AAChE,4BAA4B,qBAAqB,GAAG,iBAAiB,MAAM;AAC3E;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB,2CAA2C,KAAK;AAChD,6BAA6B,qBAAqB,GAAG,MAAM,MAAM;AACjE,6BAA6B,qBAAqB,GAAG,MAAM,KAAK,QAAQ,MAAM;AAC9E;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB,8CAA8C,KAAK;AACnD,gCAAgC,qBAAqB,GAAG,MAAM,MAAM;AACpE,gCAAgC,qBAAqB,GAAG,MAAM,KAAK,QAAQ,MAAM;AACjF;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO,UAAU,GAAG,gBAAgB;AACnE,+BAA+B,MAAM,YAAY,GAAG,iBAAiB;AACrE;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO,UAAU,GAAG,cAAc;AACpE,kCAAkC,MAAM,YAAY,GAAG,iBAAiB;AACxE;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI,KAAK,KAAK,GAAG,GAAG,WAAW,MAAM;AACxE,mCAAmC,OAAO,QAAQ,OAAO,GAAG,iBAAiB,MAAM;AACnF;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,IAAI,KAAK,KAAK,GAAG,GAAG,WAAW,MAAM;AAC3E,sCAAsC,OAAO,QAAQ,OAAO,GAAG,iBAAiB,MAAM;AACtF;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,MAAM,IAAI,MAAM;AAC7C;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,MAAM,IAAI,MAAM;AAChD;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,IAAI,MAAM,GAAG,IAAI,MAAM;AACxD;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI,MAAM,GAAG,IAAI,MAAM;AAC3D;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO,kBAAkB;AACpD,2BAA2B,OAAO,kBAAkB;AACpD;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,kBAAkB;AACvD;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,iCAAiC,gBAAgB;AACjD;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO,mBAAmB,WAAW,iBAAiB;AACxF;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO,mBAAmB,WAAW,iBAAiB;AAC3F,qCAAqC,OAAO,mBAAmB,WAAW,iBAAiB;AAC3F,qCAAqC,OAAO,mBAAmB,cAAc,iBAAiB;AAC9F;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,kBAAkB;AACvD;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO,kBAAkB;AAC1D,iCAAiC;AACjC;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kBAAkB;AACnD;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD,oCAAoC;AACpC;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,OAAO,mBAAmB,WAAW,iBAAiB;AAC3F;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO,mBAAmB,WAAW,iBAAiB;AAC9F,wCAAwC,OAAO,mBAAmB,WAAW,iBAAiB;AAC9F,wCAAwC,OAAO,mBAAmB,cAAc,iBAAiB;AACjG,wCAAwC;AACxC;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO,kBAAkB;AAC1D;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO,kBAAkB;AAC7D;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO,kBAAkB;AAC7D;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,OAAO,kBAAkB;AAChE,uCAAuC,OAAO,kBAAkB;AAChE;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO,SAAS,mBAAmB,iBAAiB,eAAe;AAC3G;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO,SAAS,mBAAmB,iBAAiB,eAAe;AAC9G,2CAA2C,OAAO,SAAS,mBAAmB,iBAAiB,gBAAgB;AAC/G,2CAA2C,OAAO,SAAS,mBAAmB,iBAAiB,eAAe;AAC9G;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD,4BAA4B,uBAAuB,GAAG,mCAAmC;AACzF,sCAAsC,OAAO,gCAAgC,OAAO;AACpF,qCAAqC,WAAW,oBAAoB,WAAW;AAC/E;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD,4BAA4B,uBAAuB,GAAG;AACtD,sCAAsC,OAAO,gCAAgC,OAAO;AACpF,qCAAqC,WAAW,mBAAmB,WAAW;AAC9E;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uBAAuB;AACxD,iCAAiC,uBAAuB;AACxD,iCAAiC,uBAAuB,GAAG,mBAAmB;AAC9E,iCAAiC,uBAAuB,GAAG,4BAA4B;AACvF,2CAA2C,OAAO,gCAAgC,OAAO;AACzF,2CAA2C,OAAO,gCAAgC,OAAO;AACzF,0CAA0C,WAAW,mBAAmB,WAAW;AACnF,0CAA0C,WAAW,mBAAmB,WAAW;AACnF;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uBAAuB;AAC3D,oCAAoC,uBAAuB,GAAG,+BAA+B;AAC7F,8CAA8C,OAAO,gCAAgC,WAAW;AAChG,6CAA6C,WAAW,mBAAmB,WAAW;AACtF;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uBAAuB;AAC3D,oCAAoC,uBAAuB,GAAG,+BAA+B;AAC7F,8CAA8C,OAAO,gCAAgC,WAAW;AAChG,6CAA6C,WAAW,mBAAmB,WAAW;AACtF;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW,0BAA0B,WAAW;AAC1F,0CAA0C,WAAW,2BAA2B,WAAW,GAAG,WAAW;AACzG,0CAA0C,WAAW,iBAAiB,WAAW,mBAAmB,WAAW,GAAG,WAAW;AAC7H,yCAAyC,WAAW,GAAG,WAAW,KAAK,WAAW;AAClF,yCAAyC,WAAW,GAAG,WAAW,MAAM,WAAW,GAAG,eAAe;AACrG,yCAAyC,WAAW,GAAG,WAAW,MAAM,WAAW,GAAG,WAAW;AACjG;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW,kBAAkB,WAAW;AAClF,0CAA0C,WAAW,iBAAiB,WAAW,mBAAmB,WAAW,GAAG,WAAW;AAC7H,yCAAyC,WAAW,KAAK,WAAW;AACpE,yCAAyC,WAAW,GAAG,WAAW,MAAM,WAAW,GAAG,WAAW;AACjG;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW,0BAA0B,WAAW;AAC/F,+CAA+C,WAAW,iBAAiB,WAAW,mBAAmB,WAAW,GAAG,WAAW;AAClI,8CAA8C,WAAW,GAAG,WAAW,KAAK,WAAW;AACvF,8CAA8C,WAAW,GAAG,WAAW,MAAM,WAAW,GAAG,WAAW;AACtG;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,WAAW,0BAA0B,qBAAqB;AAC5G,kDAAkD,WAAW,iBAAiB,WAAW,mBAAmB,iBAAiB,GAAG,eAAe;AAC/I,iDAAiD,WAAW,GAAG,WAAW,KAAK,iBAAiB;AAChG,iDAAiD,WAAW,GAAG,WAAW,MAAM,iBAAiB,GAAG,eAAe;AACnH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,WAAW,0BAA0B,qBAAqB;AAC5G,kDAAkD,WAAW,iBAAiB,WAAW,mBAAmB,iBAAiB,GAAG,WAAW;AAC3I,iDAAiD,WAAW,GAAG,WAAW,KAAK,iBAAiB;AAChG,iDAAiD,WAAW,GAAG,WAAW,MAAM,WAAW,GAAG,eAAe;AAC7G;AACA;AACA,aAAa,OAAO;AACpB,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,wBAAwB;AACrC,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,kBAAkB;AAC/B,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,MAAM,IAAI,MAAM,IAAI,OAAO,MAAM,MAAM,IAAI,MAAM,IAAI,MAAM;AAC/F;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,MAAM,IAAI,MAAM,IAAI,OAAO,MAAM,MAAM,IAAI,MAAM,IAAI,MAAM;AAClG;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,MAAM,IAAI,OAAO;AACxG;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,MAAM,IAAI,OAAO;AAC3G,8CAA8C,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,MAAM,IAAI,OAAO;AAC3G;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,MAAM,IAAI,OAAO;AACpG;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,OAAO;AAC7F;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,OAAO;AACjG;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,OAAO;AACpG,iDAAiD,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,OAAO;AACpG,iDAAiD,MAAM,IAAI,MAAM,IAAI,OAAO,OAAO,MAAM,IAAI,OAAO;AACpG;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,0CAA0C;AAC1C,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxiGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,kBAAkB;AACjC,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC1NA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,mBAAO,CAAC,8EAAkB;AAC/C,WAAW,mBAAO,CAAC,mDAAY;AAC/B,WAAW,mBAAO,CAAC,0DAAQ;AAC3B,cAAc,mBAAO,CAAC,gEAAW;AACjC,oBAAoB,mBAAO,CAAC,4EAAiB;;AAE7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;ACvJA,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAO,CAAC,8EAAkB;AAC/C,WAAW,mBAAO,CAAC,mDAAY;AAC/B,WAAW,mBAAO,CAAC,0DAAQ;AAC3B,cAAc,mBAAO,CAAC,gEAAW;AACjC,oBAAoB,mBAAO,CAAC,4EAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,mDAAY;AAC/B,WAAW,mBAAO,CAAC,0DAAQ;AAC3B,qBAAqB,mBAAO,CAAC,8EAAkB;AAC/C,oBAAoB,mBAAO,CAAC,4EAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;AACA,iDAAiD;;AAEjD;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,gEAAW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ,kCAAkC;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAO,CAAC,gEAAiB;AAC9C,WAAW,mBAAO,CAAC,0DAAQ;AAC3B,WAAW,mBAAO,CAAC,8DAAa;;AAEhC;AACA;AACA;;AAEA;;AAEA;AACA,mCAAmC,yBAAyB;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA,wCAAwC,8BAA8B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,gCAAgC;AAChC;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,0DAAQ;AAC3B,gBAAgB,mBAAO,CAAC,oEAAa;AACrC,iBAAiB,mBAAO,CAAC,sEAAc;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,KAAK;AACb,QAAQ,IAAI;AACZ,QAAQ,IAAI;AACZ;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,MAAM,kBAAkB,yBAAyB;AAClE,iBAAiB,KAAK,kBAAkB,4BAA4B;AACpE,iBAAiB,KAAK,kBAAkB,8BAA8B;;AAEtE;AACA;;;;;;;;;;;ACjDA,WAAW,mBAAO,CAAC,8DAAa;;AAEhC,WAAW,mBAAO,CAAC,0DAAQ;;AAE3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,mBAAO,CAAC,gHAAmC;;AAEjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;AACA;;AAEA,8FAAgC;;AAEhC;AACA;AACA;;AAEA,kGAAqC;;AAErC;AACA;AACA;AACA,mHAA8C;;AAE9C;AACA;AACA;;AAEA,gHAA4C;;AAE5C;AACA;AACA;;AAEA,6GAA0C;;AAE1C;AACA;AACA;;AAEA,uGAAsC;;AAEtC;AACA;AACA;;AAEA,gHAA4C;;AAE5C;AACA;AACA;;AAEA,8FAAgC;;AAEhC;AACA;AACA;;AAEA,yHAAkD;;AAElD;AACA;AACA;;AAEA,qFAAiC;;AAEjC;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;;AAEA,mGAA0C;;AAE1C;AACA;AACA;;AAEA,mHAA8C;;AAE9C;AACA;AACA;;AAEA,6GAA0C;;AAE1C;AACA;AACA;;AAEA,qIAA0D;;AAE1D;AACA;AACA;;AAEA,+HAAsD;;AAEtD;AACA;AACA;;AAEA,wIAA4D;;AAE5D;AACA;AACA;;AAEA,0JAAwE;;AAExE;AACA;AACA;;AAEA,kIAAwD;;AAExD;AACA;AACA;;AAEA,+KAAsF;;AAEtF;AACA;AACA;;AAEA,gKAA4E;;AAE5E;AACA;AACA;;AAEA,kGAA2C;;AAE3C;AACA;AACA;;AAEA,uGAAsC;;AAEtC;AACA;AACA;;AAEA,4HAAoD;;AAEpD;AACA;AACA;;AAEA,4HAAoD;;AAEpD;AACA;AACA;;AAEA,iGAAkC;;AAElC;AACA;AACA;;AAEA,mHAA8C;;;;;;;;;;ACjL9C;AACA;;AAEA,cAAc,mBAAO,CAAC,4DAAe;AACrC,oBAAoB,mBAAO,CAAC,4EAAiB;AAC7C,8BAA8B,mBAAO,CAAC,gGAA2B;AACjE,aAAa,mBAAO,CAAC,yDAAW;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,KAAK;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA,WAAW;AACX;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC1XA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACzBA,aAAa,mBAAO,CAAC,yDAAW;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,gEAAW;AACjC,aAAa,mBAAO,CAAC,yDAAW;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,mDAAY;AAC/B,oBAAoB,mBAAO,CAAC,4EAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mBAAO,CAAC,8EAAkB;AAC/C,WAAW,mBAAO,CAAC,mDAAY;AAC/B,WAAW,mBAAO,CAAC,0DAAQ;AAC3B,cAAc,mBAAO,CAAC,gEAAW;AACjC,oBAAoB,mBAAO,CAAC,4EAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,mDAAY;AAC/B,WAAW,mBAAO,CAAC,0DAAQ;AAC3B,qBAAqB,mBAAO,CAAC,8EAAkB;AAC/C,oBAAoB,mBAAO,CAAC,4EAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;AC3FA,aAAa,mBAAO,CAAC,yDAAW;AAChC,WAAW,mBAAO,CAAC,0DAAQ;AAC3B,oBAAoB,mBAAO,CAAC,4EAAiB;AAC7C,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,0DAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,QAAQ,4CAA4C;AAC/D,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5Ca;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,wBAAwB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,wBAAwB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,eAAe;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ,wDAAwD;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC3KA;AAC6F;AACjB;AAC5E,8BAA8B,sEAA2B,CAAC,+EAAqC;AAC/F;AACA,6DAA6D,UAAU,aAAa,GAAG,YAAY,oEAAoE,sBAAsB,GAAG,2BAA2B,cAAc,eAAe,GAAG,eAAe,qBAAqB,GAAG,2BAA2B,cAAc,GAAG,eAAe,qBAAqB,mBAAmB,qBAAqB,GAAG,iBAAiB,0BAA0B,mBAAmB,GAAG,uBAAuB,+BAA+B,GAAG,6BAA6B,kBAAkB,oBAAoB,GAAG,oBAAoB,kBAAkB,GAAG,eAAe,oBAAoB,wBAAwB,oBAAoB,GAAG,mBAAmB,sBAAsB,GAAG,kBAAkB,sBAAsB,qBAAqB,GAAG,0CAA0C,yBAAyB,mCAAmC,GAAG,wCAAwC,wBAAwB,GAAG,sCAAsC,wBAAwB,GAAG,+BAA+B,iBAAiB,oBAAoB,mBAAmB,gBAAgB,sBAAsB,mBAAmB,GAAG,iCAAiC,mBAAmB,qBAAqB,qBAAqB,gBAAgB,uDAAuD,oDAAoD,+CAA+C,+BAA+B,4BAA4B,2BAA2B,0BAA0B,uBAAuB,GAAG,sCAAsC,kBAAkB,GAAG,0BAA0B,mBAAmB,GAAG,kCAAkC,iBAAiB,mBAAmB,GAAG,uBAAuB,gBAAgB,GAAG,2BAA2B,iBAAiB,GAAG,+BAA+B,iBAAiB,oBAAoB,mBAAmB,gBAAgB,sBAAsB,gBAAgB,GAAG,4BAA4B,gBAAgB,sBAAsB,mBAAmB,GAAG,8BAA8B,mBAAmB,iBAAiB,mBAAmB,gBAAgB,gBAAgB,qCAAqC,gBAAgB,kBAAkB,2BAA2B,oBAAoB,gDAAgD,sCAAsC,kCAAkC,6BAA6B,0BAA0B,8BAA8B,uCAAuC,oCAAoC,+BAA+B,+BAA+B,4BAA4B,uBAAuB,GAAG,wCAAwC,iBAAiB,6BAA6B,0BAA0B,qBAAqB,0BAA0B,uBAAuB,kBAAkB,eAAe,cAAc,qBAAqB,qBAAqB,GAAG,wKAAwK,mBAAmB,gBAAgB,gBAAgB,qCAAqC,gBAAgB,kBAAkB,2BAA2B,oBAAoB,gDAAgD,sCAAsC,kCAAkC,iCAAiC,8BAA8B,uCAAuC,oCAAoC,+BAA+B,+BAA+B,4BAA4B,uBAAuB,GAAG,qBAAqB,uBAAuB,GAAG,2BAA2B,uBAAuB,aAAa,aAAa,0BAA0B,2BAA2B,mBAAmB,gBAAgB,iBAAiB,sBAAsB,uBAAuB,qBAAqB,oBAAoB,gCAAgC,6BAA6B,wBAAwB,qCAAqC,kCAAkC,gCAAgC,8BAA8B,iBAAiB,gBAAgB,GAAG,iCAAiC,eAAe,GAAG,mCAAmC,kBAAkB,GAAG,mCAAmC,kBAAkB,GAAG,yEAAyE,kBAAkB,GAAG,4CAA4C,mBAAmB,GAAG,kBAAkB,gBAAgB,qBAAqB,qBAAqB,wBAAwB,GAAG,kBAAkB,oBAAoB,cAAc,gBAAgB,oBAAoB,cAAc,gBAAgB,eAAe,GAAG,4BAA4B,iBAAiB,mBAAmB,kOAAkO,6BAA6B,0BAA0B,qBAAqB,8BAA8B,GAAG,qBAAqB,iBAAiB,GAAG,oBAAoB,0BAA0B,mBAAmB,GAAG,0BAA0B,kCAAkC,GAAG,qBAAqB,0BAA0B,kBAAkB,qBAAqB,sBAAsB,GAAG,yBAAyB,gBAAgB,iBAAiB,GAAG,2BAA2B,cAAc,sBAAsB,iBAAiB,wBAAwB,iBAAiB,yBAAyB,iBAAiB,wBAAwB,iBAAiB,iDAAiD,YAAY,uBAAuB,KAAK,qBAAqB,yBAAyB,KAAK,GAAG,SAAS,uGAAuG,MAAM,UAAU,MAAM,KAAK,YAAY,aAAa,OAAO,MAAM,UAAU,UAAU,MAAM,KAAK,YAAY,OAAO,MAAM,UAAU,MAAM,KAAK,YAAY,WAAW,YAAY,OAAO,KAAK,YAAY,WAAW,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,UAAU,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,YAAY,WAAW,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU,UAAU,UAAU,UAAU,YAAY,WAAW,OAAO,KAAK,UAAU,YAAY,aAAa,WAAW,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,OAAO,KAAK,UAAU,UAAU,OAAO,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,UAAU,UAAU,UAAU,YAAY,WAAW,MAAM,KAAK,UAAU,YAAY,WAAW,OAAO,KAAK,UAAU,UAAU,UAAU,UAAU,UAAU,YAAY,WAAW,UAAU,YAAY,qBAAqB,aAAa,aAAa,uBAAuB,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,aAAa,aAAa,WAAW,UAAU,UAAU,YAAY,aAAa,OAAO,QAAQ,KAAK,KAAK,UAAU,UAAU,UAAU,YAAY,WAAW,UAAU,YAAY,qBAAqB,aAAa,aAAa,uBAAuB,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,WAAW,UAAU,YAAY,aAAa,WAAW,UAAU,UAAU,YAAY,aAAa,aAAa,WAAW,YAAY,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,WAAW,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,KAAK,UAAU,MAAM,MAAM,UAAU,KAAK,KAAK,UAAU,OAAO,KAAK,UAAU,YAAY,aAAa,aAAa,OAAO,KAAK,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,MAAM,KAAK,UAAU,WAAW,QAAQ,KAAK,UAAU,YAAY,aAAa,aAAa,aAAa,OAAO,KAAK,UAAU,MAAM,KAAK,YAAY,WAAW,OAAO,KAAK,YAAY,OAAO,KAAK,YAAY,WAAW,YAAY,aAAa,OAAO,KAAK,UAAU,UAAU,MAAM,sBAAsB,uBAAuB,uBAAuB,uBAAuB,wBAAwB,MAAM,KAAK,YAAY,OAAO,KAAK,YAAY,MAAM,4CAA4C,UAAU,aAAa,GAAG,YAAY,oEAAoE,sBAAsB,GAAG,2BAA2B,cAAc,eAAe,GAAG,eAAe,qBAAqB,GAAG,2BAA2B,cAAc,GAAG,eAAe,qBAAqB,mBAAmB,qBAAqB,GAAG,iBAAiB,0BAA0B,mBAAmB,GAAG,uBAAuB,+BAA+B,GAAG,6BAA6B,kBAAkB,oBAAoB,GAAG,oBAAoB,kBAAkB,GAAG,eAAe,oBAAoB,wBAAwB,oBAAoB,GAAG,mBAAmB,sBAAsB,GAAG,kBAAkB,sBAAsB,qBAAqB,GAAG,0CAA0C,yBAAyB,mCAAmC,GAAG,wCAAwC,wBAAwB,GAAG,sCAAsC,wBAAwB,GAAG,+BAA+B,iBAAiB,oBAAoB,mBAAmB,gBAAgB,sBAAsB,mBAAmB,GAAG,iCAAiC,mBAAmB,qBAAqB,qBAAqB,gBAAgB,uDAAuD,oDAAoD,+CAA+C,+BAA+B,4BAA4B,2BAA2B,0BAA0B,uBAAuB,GAAG,sCAAsC,kBAAkB,GAAG,0BAA0B,mBAAmB,GAAG,kCAAkC,iBAAiB,mBAAmB,GAAG,uBAAuB,gBAAgB,GAAG,2BAA2B,iBAAiB,GAAG,+BAA+B,iBAAiB,oBAAoB,mBAAmB,gBAAgB,sBAAsB,gBAAgB,GAAG,4BAA4B,gBAAgB,sBAAsB,mBAAmB,GAAG,8BAA8B,mBAAmB,iBAAiB,mBAAmB,gBAAgB,gBAAgB,qCAAqC,gBAAgB,kBAAkB,2BAA2B,oBAAoB,gDAAgD,sCAAsC,kCAAkC,6BAA6B,0BAA0B,8BAA8B,uCAAuC,oCAAoC,+BAA+B,+BAA+B,4BAA4B,uBAAuB,GAAG,wCAAwC,iBAAiB,6BAA6B,0BAA0B,qBAAqB,0BAA0B,uBAAuB,kBAAkB,eAAe,cAAc,qBAAqB,qBAAqB,GAAG,wKAAwK,mBAAmB,gBAAgB,gBAAgB,qCAAqC,gBAAgB,kBAAkB,2BAA2B,oBAAoB,gDAAgD,sCAAsC,kCAAkC,iCAAiC,8BAA8B,uCAAuC,oCAAoC,+BAA+B,+BAA+B,4BAA4B,uBAAuB,GAAG,qBAAqB,uBAAuB,GAAG,2BAA2B,uBAAuB,aAAa,aAAa,0BAA0B,2BAA2B,mBAAmB,gBAAgB,iBAAiB,sBAAsB,uBAAuB,qBAAqB,oBAAoB,gCAAgC,6BAA6B,wBAAwB,qCAAqC,kCAAkC,gCAAgC,8BAA8B,iBAAiB,gBAAgB,GAAG,iCAAiC,eAAe,GAAG,mCAAmC,kBAAkB,GAAG,mCAAmC,kBAAkB,GAAG,yEAAyE,kBAAkB,GAAG,4CAA4C,mBAAmB,GAAG,kBAAkB,gBAAgB,qBAAqB,qBAAqB,wBAAwB,GAAG,kBAAkB,oBAAoB,cAAc,gBAAgB,oBAAoB,cAAc,gBAAgB,eAAe,GAAG,4BAA4B,iBAAiB,mBAAmB,kOAAkO,6BAA6B,0BAA0B,qBAAqB,8BAA8B,GAAG,qBAAqB,iBAAiB,GAAG,oBAAoB,0BAA0B,mBAAmB,GAAG,0BAA0B,kCAAkC,GAAG,qBAAqB,0BAA0B,kBAAkB,qBAAqB,sBAAsB,GAAG,yBAAyB,gBAAgB,iBAAiB,GAAG,2BAA2B,cAAc,sBAAsB,iBAAiB,wBAAwB,iBAAiB,yBAAyB,iBAAiB,wBAAwB,iBAAiB,iDAAiD,YAAY,uBAAuB,KAAK,qBAAqB,yBAAyB,KAAK,GAAG,qBAAqB;AACx1c;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;ACPvC;AAC0G;AACjB;AACzF,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F;AACA,iDAAiD,gCAAgC,GAAG,eAAe,6BAA6B,GAAG,cAAc,6BAA6B,GAAG,QAAQ,kBAAkB,mBAAmB,mBAAmB,6BAA6B,0BAA0B,6BAA6B,qBAAqB,gDAAgD,GAAG,uCAAuC,6BAA6B,oBAAoB,0BAA0B,mBAAmB,GAAG,gBAAgB,6BAA6B,GAAG,UAAU,6BAA6B,GAAG,kBAAkB,6BAA6B,GAAG,kBAAkB,mCAAmC,GAAG,gBAAgB,oCAAoC,GAAG,cAAc,kBAAkB,GAAG,cAAc,yBAAyB,kBAAkB,oBAAoB,6BAA6B,yBAAyB,6BAA6B,oBAAoB,sBAAsB,GAAG,iBAAiB,4BAA4B,2BAA2B,sBAAsB,6BAA6B,6BAA6B,yBAAyB,kBAAkB,GAAG,OAAO,gFAAgF,YAAY,OAAO,KAAK,YAAY,MAAM,KAAK,YAAY,OAAO,KAAK,UAAU,UAAU,UAAU,YAAY,aAAa,aAAa,WAAW,YAAY,OAAO,KAAK,YAAY,WAAW,YAAY,WAAW,OAAO,KAAK,YAAY,MAAM,KAAK,YAAY,MAAM,KAAK,YAAY,OAAO,KAAK,YAAY,MAAM,KAAK,YAAY,OAAO,KAAK,UAAU,MAAM,KAAK,YAAY,WAAW,UAAU,YAAY,aAAa,aAAa,WAAW,UAAU,MAAM,KAAK,YAAY,aAAa,WAAW,YAAY,aAAa,aAAa,WAAW,gCAAgC,gCAAgC,GAAG,eAAe,6BAA6B,GAAG,cAAc,6BAA6B,GAAG,QAAQ,kBAAkB,mBAAmB,mBAAmB,6BAA6B,0BAA0B,6BAA6B,qBAAqB,gDAAgD,GAAG,uCAAuC,6BAA6B,oBAAoB,0BAA0B,mBAAmB,GAAG,gBAAgB,6BAA6B,GAAG,UAAU,6BAA6B,GAAG,kBAAkB,6BAA6B,GAAG,kBAAkB,mCAAmC,GAAG,gBAAgB,oCAAoC,GAAG,cAAc,kBAAkB,GAAG,cAAc,yBAAyB,kBAAkB,oBAAoB,6BAA6B,yBAAyB,6BAA6B,oBAAoB,sBAAsB,GAAG,iBAAiB,4BAA4B,2BAA2B,sBAAsB,6BAA6B,6BAA6B,yBAAyB,kBAAkB,GAAG,mBAAmB;AACnhG;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;ACP1B;;AAEb;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;;AAEA;AACA,gDAAgD;AAChD;;AAEA;AACA,qFAAqF;AACrF;;AAEA;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,qBAAqB;AACrB;;AAEA;AACA,KAAK;AACL,KAAK;;;AAGL;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sFAAsF,qBAAqB;AAC3G;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,iDAAiD,qBAAqB;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,sDAAsD,qBAAqB;AAC3E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACrGa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;;;;;;;;;;ACrBa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,mBAAO,CAAC,8DAAa;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,YAAY;AACvB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;;;;;;;;;;;ACtca;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;AC3CA;AACA;AACA,EAAE,KAA4D;AAC9D,EAAE,CACoG;AACtG,CAAC,uBAAuB;;AAExB;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA,yDAAyD;;AAEzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB;AACtB;AACA;AACA,GAAG,qBAAqB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wHAAwH,qBAAM,mBAAmB,qBAAM;;AAEvJ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,kBAAkB;AAClB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,gCAAgC;;AAEhC;AACA,6CAA6C,UAAU;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;;AAEtB;AACA;AACA;AACA,WAAW,WAAW;;AAEtB;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,WAAW,WAAW;;AAEtB;AACA;AACA,WAAW,UAAU;;AAErB;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,wBAAwB;AACxB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,2BAA2B,QAAQ;AACnC;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,MAAM;AACN;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,YAAY;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;AACA,GAAG,mBAAmB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,0BAA0B,SAAS;AACnC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,KAAK;;AAEnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA,aAAa;AACb;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,gCAAgC;;AAEhC;AACA,6CAA6C,UAAU;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;;AAEtB;AACA;AACA;AACA,WAAW,WAAW;;AAEtB;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA,WAAW,WAAW;;AAEtB;AACA;AACA,WAAW,UAAU;;AAErB;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,wBAAwB;AACxB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,2BAA2B,QAAQ;AACnC;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA,MAAM;AACN;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,YAAY;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;;AAExC;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,UAAU;AACjC;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,8EAA8E;;AAE9E;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA,qDAAqD,iEAAiE;AACtH;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA,yCAAyC;AACzC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;;AAEA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oDAAoD;;AAEpD;;AAEA,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO,EAAE;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO,IAAI;AACX;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC,8BAA8B;AACrE;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;;AAEA;AACA,aAAa,UAAU;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,sBAAsB;AACxD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;;AAEA;AACA,eAAe,KAAuB;AACtC,mCAAmC,gCAAgC;AACnE,MAAM,CAGC;AACP;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY;AACZ;AACA;AACA,UAAU;;;AAGV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG;;AAEZ;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;;;AAGV;AACA,mDAAmD,4BAA4B;AAC/E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;;AAGA;AACA;AACA;AACA,cAAc;AACd,kCAAkC;;AAElC;AACA;AACA;;AAEA,wFAAwF;;AAExF;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,6BAA6B;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY;AACZ;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA,UAAU;AACV;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oDAAoD,eAAe;;AAEnE,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA,QAAQ;;;AAGR,sBAAsB,6BAA6B;AACnD;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,8BAA8B,EAAE;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,SAAS;;AAEtD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,gBAAgB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;;AAE1B;AACA,iCAAiC;;AAEjC;AACA;AACA,YAAY;;;AAGZ;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;;AAGA;AACA,gCAAgC;;AAEhC;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;;;AAGV;AACA;AACA;;AAEA;AACA;AACA,UAAU;;;AAGV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAQ;;;AAGR,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;;;AAGA;AACA,QAAQ;;;AAGR;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;;AAEA,wBAAwB,wBAAwB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,GAAG;;AAEV;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;;;AAGZ;AACA;AACA,WAAW,KAAK;;;AAGhB;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,iBAAiB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,uBAAuB;AAC7C,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,wCAAwC;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;;;AAGR;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU;AACV;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,sBAAsB,WAAW;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC,+BAA+B;AAC/B,+BAA+B;AAC/B,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,aAAa;;AAEhE,GAAG;AACH,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,8iBAA8iB,wZAAwZ,WAAW;;AAEr+B;AACA;AACA,gBAAgB;AAChB,eAAe;AACf,iBAAiB;AACjB,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA,0xfAA0xf,inBAAinB,6BAA6B,yBAAyB;AACj8gB,oBAAoB,4teAA4te,wKAAwK,2uZAA2uZ,wKAAwK,6gFAA6gF;AACxz9B,0BAA0B;AAC1B,2BAA2B;AAC3B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D;AAC5D;;AAEA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC,qBAAqB,iBAAiB;AACtC,uBAAuB,MAAM,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,0CAA0C,GAAG;AAC7C,OAAO;AACP;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,yCAAyC;AACzC,MAAM;AACN,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO;AACZ;AACA;;AAEA,GAAG;AACH,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,QAAQ;;;;;AAKjB;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA,aAAa,UAAU;AACvB,cAAc,WAAW;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc;AACd;AACA;AACA,oCAAoC,0BAA0B;AAC9D;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG;AACrB;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iBAAiB,yBAAyB,iBAAiB;AAC3G;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,aAAa,GAAG;AAChB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,eAAe,QAAQ;AACvB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,eAAe,QAAQ;AACvB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0BAA0B;AAClC,wCAAwC,4BAA4B;AACpE;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA8C;AAC9C,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa,GAAG;AAChB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,gDAAgD,YAAY,GAAG;AAC/D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,GAAG;AAChB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,aAAa,MAAM;AACnB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,wCAAwC;AAChE;AACA;AACA,WAAW;AACX,aAAa,MAAM;AACnB,eAAe,QAAQ;AACvB,cAAc,WAAW;AACzB;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,aAAa,GAAG;AAChB,eAAe;AACf;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,eAAe;AAC7B;AACA;AACA;AACA;;AAEA,oBAAoB,sBAAsB;AAC1C;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;;AAEA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,YAAY;;AAErB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH,SAAS,QAAQ;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrkFAAkF,mBAAmB;AACrG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,sCAAsC;AACjE;AACA,aAAa,QAAQ;AACrB,aAAa,wBAAwB;AACrC,aAAa,QAAQ;AACrB;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,kBAAkB;AAC/B;AACA,eAAe,OAAO,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,kBAAkB;AAC/B,aAAa,GAAG;AAChB;AACA,eAAe,OAAO,iBAAiB;AACvC;AACA;AACA;AACA,KAAK,uBAAuB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,OAAO,iBAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa,eAAe;AAC5B,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,kBAAkB;AAClB,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F;AAC7F;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA,4BAA4B,GAAG,mEAAmE;AAClG;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,eAAe;AACvB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,GAAG;AAChB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,kCAAkC;AAC3C,SAAS,0CAA0C;;AAEnD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS,cAAc;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;;AAIA,SAAS,oBAAoB;;AAE7B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sCAAsC;AACnE;AACA;;AAEA;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,aAAa;AACrB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,YAAY,mCAAmC,oBAAoB,KAAK,iBAAiB;AACnI;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,gBAAgB;AAC/B,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,eAAe;AAC3G;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,UAAU;AACV;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,cAAc;AAC3B,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C,mBAAmB,EAAE,eAAe;AAChF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,YAAY;AACZ;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,0BAA0B,oBAAoB,OAAO,2BAA2B;AAChF,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ,+CAA+C,KAAK;AACpD;AACA,0BAA0B,oBAAoB,MAAM,YAAY;AAChE;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,sBAAsB,kBAAkB;AACxC;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,mGAAmG;AACnG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,yDAAyD;AACzD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,cAAc,oCAAoC;AAClD,eAAe,QAAQ;AACvB;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,iBAAiB;AAC5B,kCAAkC;AAClC;AACA;AACA,aAAa,QAAQ,sBAAsB;AAC3C,eAAe,iBAAiB;AAChC;AACA,+DAA+D;AAC/D;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,GAAG;AAChB,cAAc;AACd;AACA;AACA;AACA,aAAa,0BAA0B,EAAE;AACzC;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,+BAA+B;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,WAAW;AACnC;AACA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,aAAa;AAC5B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,8CAA8C,gBAAgB;AAC9D;AACA,UAAU;AACV;AACA,eAAe,kBAAkB,6BAA6B,OAAO,YAAY,YAAY;AAC7F;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,0BAA0B;AACvC,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;AACpD,sDAAsD;AACtD;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,EAAE;AACxB;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,gEAAgE;AAChE,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B,aAAa;AACzC,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,wCAAwC,sBAAsB;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,MAAM;AACtB,gBAAgB,MAAM;AACtB,gBAAgB,QAAQ;AACxB;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA,SAAS,oBAAoB;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,sCAAsC;AACtC;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,wCAAwC;AACxC;AACA;AACA,mBAAmB,QAAQ;AAC3B,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,mBAAmB,UAAU;AAC7B,mBAAmB,SAAS;AAC5B,mBAAmB,QAAQ;AAC3B,mBAAmB,SAAS;AAC5B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,UAAU;AAC7B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,UAAU;AACvB,aAAa,eAAe;AAC5B,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB,aAAa,oBAAoB;AACjC,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,aAAa,qBAAqB;AAClC,aAAa,UAAU;AACvB,aAAa,SAAS;AACtB;AACA,6BAA6B;AAC7B,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA,6CAA6C,gBAAgB;AAC7D,QAAQ,cAAc,gBAAgB;AACtC;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,uBAAuB;AACtD,QAAQ,gBAAgB;AACxB,QAAQ,uBAAuB,MAAM,2BAA2B;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,+BAA+B,uCAAuC;AACtE;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,2BAA2B,aAAa;AACxC;AACA,wBAAwB,aAAa,mCAAmC,UAAU;AAClF;AACA;AACA,YAAY;AACZ,qBAAqB,aAAa,mCAAmC,UAAU;AAC/E;AACA;AACA;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,eAAe,OAAO;AACtB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,kEAAkE,GAAG;AACrE;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,WAAW;AACX,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,WAAW;AACX,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa,QAAQ;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,aAAa,eAAe;AAC5B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,2CAA2C,IAAI;AAC/C;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,cAAc,SAAS;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,aAAa,iBAAiB;AAC9B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,eAAe;AAC5B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,WAAW;AACX,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,UAAU;AACV;AACA;AACA;AACA,aAAa,SAAS,8BAA8B;AACpD;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,uBAAuB,IAAI,gBAAgB;AAC3E;AACA,4DAA4D;AAC5D;AACA,aAAa,SAAS;AACtB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yCAAyC;AACtD,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,yCAAyC;AACtD,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,iBAAiB,iDAAiD,KAAK,8BAA8B;AAC7I;AACA,2EAA2E,8BAA8B;AACzG,aAAa,QAAQ;AACrB;AACA,eAAe,iBAAiB;AAChC;AACA,6EAA6E;AAC7E,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,iBAAiB,oDAAoD,KAAK,iCAAiC;AACnJ;AACA,uDAAuD,2BAA2B;AAClF,aAAa,QAAQ;AACrB;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC,aAAa,QAAQ;AACrB,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,qBAAqB;AACrC,gBAAgB,qBAAqB;AACrC,gBAAgB,qBAAqB;AACrC,gBAAgB,qBAAqB;AACrC;;AAEA;AACA,iCAAiC,0BAA0B;AAC3D;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,iBAAiB;AACjC,gBAAgB,iBAAiB;AACjC;;AAEA;AACA;AACA;AACA,mBAAmB,uBAAuB;;AAE1C;AACA,aAAa,GAAG;AAChB,YAAY;AACZ,eAAe;AACf;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe;AACf;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,aAAa;;;;;;AAMjD;AACA;AACA;AACA,cAAc;AACd;;AAEA,2BAA2B,iBAAiB;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;AAEA,CAAC;;;;;;;;;;;;ACp1mBY;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,yCAAyC;AACzC,iCAAiC;AACjC;AACA,uCAAuC;AACvC,iCAAiC;AACjC,iCAAiC;AACjC;AACA,wCAAwC;AACxC,iCAAiC;AACjC,iCAAiC;AACjC;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,MAAM;AACN,iBAAiB;AACjB;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,kBAAkB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,0CAA0C;AAC1C,iDAAiD;AACjD;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mBAAmB;AACzE;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3SA,MAAkF;AAClF,MAAwE;AACxE,MAA+E;AAC/E,MAAkG;AAClG,MAA2F;AAC3F,MAA2F;AAC3F,MAAsF;AACtF;AACA;;AAEA;;AAEA,4BAA4B,wFAAmB;AAC/C,wBAAwB,qGAAa;;AAErC,uBAAuB,0FAAa;AACpC;AACA,iBAAiB,kFAAM;AACvB,6BAA6B,yFAAkB;;AAE/C,aAAa,6FAAG,CAAC,yEAAO;;;;AAIgC;AACxD,OAAO,iEAAe,yEAAO,IAAI,gFAAc,GAAG,gFAAc,YAAY,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB7E,MAA+F;AAC/F,MAAqF;AACrF,MAA4F;AAC5F,MAA+G;AAC/G,MAAwG;AACxG,MAAwG;AACxG,MAAmG;AACnG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,sFAAO;;;;AAI6C;AACrE,OAAO,iEAAe,sFAAO,IAAI,6FAAc,GAAG,6FAAc,YAAY,EAAC;;;;;;;;;;;;AC1BhE;;AAEb;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,6BAA6B;AAClD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACvGa;;AAEb;AACA;;AAEA;AACA;AACA,sDAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACtCa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACVa;;AAEb;AACA;AACA,cAAc,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEjF;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACXa;;AAEb;AACA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;;AAEA;AACA,iFAAiF;AACjF;;AAEA;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACfA;AACA,CAAC,KAA4D;AAC7D,CAAC,CAC+B;AAChC,CAAC,sBAAsB;;AAEvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD,qBAAM,EAAE;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpnYoB;;AAEY;;;AAGG;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA,0BAA0B,EAAE,GAAG,EAAE;AACjC;AACA;AACA;AACA,iCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sEAAsE;AACtE;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA,oBAAoB,qBAAqB;AACzC;AACA,4BAA4B;AAC5B,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,MAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA,kDAAkD,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,KAAK,GAAG,KAAK;AAC1D;AACA,0BAA0B,cAAc;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,wBAAwB,cAAc,EAAE,KAAK;AAC7C;AACA,MAAM;AACN,8CAA8C,KAAK;AACnD;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B,MAAM,iDAAO;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,CAAC;;AAED,GAAG;;;;;;;;;;;;;;;;;;;;;ACvPsB;AACc;AACf;AACmC;;AAE3D,aAAa,mDAAW;;AAEjB;AACP;;AAEA,EAAE,+DAAW;;AAEb;AACA;AACA;AACA;AACA,eAAe,0DAAc;AAC7B,OAAO;AACP;AACA,eAAe,0DAAc;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,eAAe,wDAAY;AAC3B;AACA;AACA,OAAO;AACP;AACA,eAAe,wDAAY;AAC3B,OAAO;AACP;AACA,eAAe,wDAAY;AAC3B;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH,EAAE,6DAAS;AACX;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5C8B;;AAEvB,eAAe,6CAAW;AAC1B,gBAAgB,8CAAY;AAC5B,kBAAkB,gDAAc;AAChC,uBAAuB,qDAAmB;AAC1C,aAAa,2CAAS;AACtB,eAAe,6CAAW;AAC1B,YAAY,0CAAQ;AACpB,eAAe,6CAAW;AAC1B,eAAe,6CAAW;AAC1B,aAAa,2CAAS;;AAE7B,iEAAe,sCAAI,EAAC;;;;;;;UCbpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://sudoku/./node_modules/assertion-error/index.js","webpack://sudoku/./node_modules/chai/index.js","webpack://sudoku/./node_modules/chai/lib/chai.js","webpack://sudoku/./node_modules/chai/lib/chai/assertion.js","webpack://sudoku/./node_modules/chai/lib/chai/config.js","webpack://sudoku/./node_modules/chai/lib/chai/core/assertions.js","webpack://sudoku/./node_modules/chai/lib/chai/interface/assert.js","webpack://sudoku/./node_modules/chai/lib/chai/interface/expect.js","webpack://sudoku/./node_modules/chai/lib/chai/interface/should.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/addChainableMethod.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/addLengthGuard.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/addMethod.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/addProperty.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/compareByInspect.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/expectTypes.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/flag.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/getActual.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/getEnumerableProperties.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/getMessage.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/getOperator.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/getProperties.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/index.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/inspect.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/isNaN.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/isProxyEnabled.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/objDisplay.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/overwriteMethod.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/overwriteProperty.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/proxify.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/test.js","webpack://sudoku/./node_modules/chai/lib/chai/utils/transferFlags.js","webpack://sudoku/./node_modules/check-error/index.js","webpack://sudoku/./node_modules/mocha/mocha.css","webpack://sudoku/./src/style.css","webpack://sudoku/./node_modules/css-loader/dist/runtime/api.js","webpack://sudoku/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://sudoku/./node_modules/deep-eql/index.js","webpack://sudoku/./node_modules/get-func-name/index.js","webpack://sudoku/./node_modules/mocha/mocha-es2018.js","webpack://sudoku/./node_modules/pathval/index.js","webpack://sudoku/./node_modules/mocha/mocha.css?45c2","webpack://sudoku/./src/style.css?7163","webpack://sudoku/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://sudoku/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://sudoku/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://sudoku/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://sudoku/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://sudoku/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://sudoku/./node_modules/type-detect/type-detect.js","webpack://sudoku/./src/sudoku.js","webpack://sudoku/./src/test.js","webpack://sudoku/./node_modules/chai/index.mjs","webpack://sudoku/webpack/bootstrap","webpack://sudoku/webpack/runtime/compat get default export","webpack://sudoku/webpack/runtime/define property getters","webpack://sudoku/webpack/runtime/global","webpack://sudoku/webpack/runtime/hasOwnProperty shorthand","webpack://sudoku/webpack/runtime/make namespace object","webpack://sudoku/webpack/before-startup","webpack://sudoku/webpack/startup","webpack://sudoku/webpack/after-startup"],"sourcesContent":["/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","module.exports = require('./lib/chai');\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = [];\n\n/*!\n * Chai version\n */\n\nexports.version = '4.3.3';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion (obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      var assertionErrorObjectProperties = {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      };\n\n      var operator = util.getOperator(this, arguments);\n      if (operator) {\n        assertionErrorObjectProperties.operator = operator;\n      }\n\n      throw new AssertionError(\n        msg,\n        assertionErrorObjectProperties,\n        (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , AssertionError = chai.AssertionError\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   * - still\n   * - also\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been', 'is'\n  , 'and', 'has', 'have', 'with'\n  , 'that', 'which', 'at', 'of'\n  , 'same', 'but', 'does', 'still', \"also\" ].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions.\n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj).toLowerCase()\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   *\n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return (_.isNaN(a) && _.isNaN(b)) || a === b;\n  }\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate')\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(\n            flagMsg + 'unable to use .deep.include with WeakSet',\n            undefined,\n            ssfi\n          );\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          })\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + 'the given combination of arguments ('\n            + objType + ' and '\n            + _.type(val).toLowerCase() + ')'\n            + ' is invalid for this assertion. '\n            + 'You can use an array, a map, an object, a set, a string, '\n            + 'or a weakset instead of a '\n            + _.type(val).toLowerCase(),\n            undefined,\n            ssfi\n          );\n        }\n\n        var props = Object.keys(val)\n          , firstErr = null\n          , numErrs = 0;\n\n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n          _.transferFlags(this, propAssertion, true);\n          flag(propAssertion, 'lockSsfi', true);\n\n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n\n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this);\n\n        // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n        return;\n    }\n\n    // Assert inclusion in collection or substring in a string.\n    this.assert(\n      included\n      , 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val)\n      , 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is a truthy value (considered `true` in boolean context).\n   * However, it's often best to assert that the target is strictly (`===`) or\n   * deeply equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , flag(this, 'negate') ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , flag(this, 'negate') ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        _.isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * The alias `.exists` can be used interchangeably with `.exist`.\n   *\n   * @name exist\n   * @alias exists\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertExist () {\n    var val = flag(this, 'object');\n    this.assert(\n        val !== null && val !== undefined\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  }\n\n  Assertion.addProperty('exist', assertExist);\n  Assertion.addProperty('exists', assertExist);\n\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , itemsCount;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(\n          flagMsg + '.empty was passed a weak collection',\n          undefined,\n          ssfi\n        );\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + '.empty was passed non-string primitive ' + _.inspect(val),\n            undefined,\n            ssfi\n          );\n        }\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(\n        0 === itemsCount\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that it’s not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = _.type(obj);\n    this.assert(\n        'Arguments' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   *\n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      var prevLockSsfi = flag(this, 'lockSsfi');\n      flag(this, 'lockSsfi', true);\n      this.eql(val);\n      flag(this, 'lockSsfi', prevLockSsfi);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount > n\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above #{exp}'\n        , 'expected #{this} to be at most #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The aliases `.gte` and `.greaterThanOrEqual` can be used interchangeably with\n   * `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @alias greaterThanOrEqual\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= n\n        , 'expected #{this} to have a ' + descriptor + ' at least #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least #{exp}'\n        , 'expected #{this} to be below #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n  Assertion.addMethod('greaterThanOrEqual', assertLeast);\n\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount < n\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below #{exp}'\n        , 'expected #{this} to be at least #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The aliases `.lte` and `.lessThanOrEqual` can be used interchangeably with\n   * `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @alias lessThanOrEqual\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount <= n\n        , 'expected #{this} to have a ' + descriptor + ' at most #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most #{exp}'\n        , 'expected #{this} to be above #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n  Assertion.addMethod('lessThanOrEqual', assertMost);\n\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `start`, and less\n   * than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , startType = _.type(start).toLowerCase()\n      , finishType = _.type(finish).toLowerCase()\n      , errorMessage\n      , shouldThrow = true\n      , range = (startType === 'date' && finishType === 'date')\n          ? start.toUTCString() + '..' + finish.toUTCString()\n          : start + '..' + finish;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && (startType !== 'date' || finishType !== 'date'))) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= start && itemsCount <= finish\n        , 'expected #{this} to have a ' + descriptor + ' within ' + range\n        , 'expected #{this} to not have a ' + descriptor + ' within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var target = flag(this, 'object')\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(\n          flagMsg + 'The instanceof assertion needs a constructor but '\n            + _.type(constructor) + ' was given.',\n          undefined,\n          ssfi\n        );\n      }\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(\n        isInstanceOf\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   *\n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested')\n      , isOwn = flag(this, 'own')\n      , flagMsg = flag(this, 'message')\n      , obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , nameType = typeof name;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    if (isNested) {\n      if (nameType !== 'string') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string when using nested syntax',\n          undefined,\n          ssfi\n        );\n      }\n    } else {\n      if (nameType !== 'string' && nameType !== 'number' && nameType !== 'symbol') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string, number, or symbol',\n          undefined,\n          ssfi\n        );\n      }\n    }\n\n    if (isNested && isOwn) {\n      throw new AssertionError(\n        flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    if (obj === null || obj === undefined) {\n      throw new AssertionError(\n        flagMsg + 'Target cannot be null or undefined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    var isDeep = flag(this, 'deep')\n      , negate = flag(this, 'negate')\n      , pathInfo = isNested ? _.getPathInfo(obj, name) : null\n      , value = isNested ? pathInfo.value : obj[name];\n\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);\n    else if (isNested) hasProperty = pathInfo.exists;\n    else hasProperty = _.hasProperty(obj, name);\n\n    // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n    if (!negate || arguments.length === 1) {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          hasProperty && (isDeep ? _.eql(val, value) : val === value)\n        , 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty (name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   *\n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but it’s not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` or `size` is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *     expect(new Set([1, 2, 3])).to.have.lengthOf(3);\n   *     expect(new Map([['a', 1], ['b', 2], ['c', 3]])).to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi')\n      , descriptor = 'length'\n      , itemsCount;\n\n    switch (objType) {\n      case 'map':\n      case 'set':\n        descriptor = 'size';\n        itemsCount = obj.size;\n        break;\n      default:\n        new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n        itemsCount = obj.length;\n    }\n\n    this.assert(\n        itemsCount == n\n      , 'expected #{this} to have a ' + descriptor + ' of #{exp} but got #{act}'\n      , 'expected #{this} to not have a ' + descriptor + ' of #{act}'\n      , n\n      , itemsCount\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string('taco', 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string('taco');\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search.\n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , objType = _.type(obj)\n      , keysType = _.type(keys)\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , str\n      , deepStr = ''\n      , actual\n      , ok = true\n      , flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = [];\n\n      // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n      obj.forEach(function (val, key) { actual.push(key) });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          break;\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          keys = Object.keys(keys);\n          break;\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      }\n\n      // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n      keys = keys.map(function (val) {\n        return typeof val === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all')\n      , expected = keys;\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      ok = expected.some(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    }\n\n    // Has all\n    if (all) {\n      ok = expected.every(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + deepStr + str\n      , 'expected #{this} to not ' + deepStr + str\n      , expected.slice(0).sort(_.compareByInspect)\n      , actual.sort(_.compareByInspect)\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   *\n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    }\n\n    // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined;\n\n    // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false;\n\n    // Checking if error was thrown\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(\n          caughtErr\n        , 'expected #{this} to throw ' + errorLikeString\n        , 'expected #{this} to not throw an error but #{act} was thrown'\n        , errorLike && errorLike.toString()\n        , (caughtErr instanceof Error ?\n            caughtErr.toString() : (typeof caughtErr === 'string' ? caughtErr : caughtErr &&\n                                    _.checkError.getConstructorName(caughtErr)))\n      );\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(\n                negate\n              , 'expected #{this} to throw #{exp} but #{act} was thrown'\n              , 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : '')\n              , errorLike.toString()\n              , caughtErr.toString()\n            );\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n        } else {\n          this.assert(\n              negate\n            , 'expected #{this} to throw #{exp} but #{act} was thrown'\n            , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n            , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n            , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n          );\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching'\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n            errMsgMatcherFail = true;\n        } else {\n          this.assert(\n            negate\n            , 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}'\n            , 'expected #{this} to throw error not ' + placeholder + ' #{exp}'\n            ,  errMsgMatcher\n            ,  _.checkError.getMessage(caughtErr)\n          );\n        }\n      }\n    }\n\n    // If both assertions failed and both should've matched we throw an error\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(\n        negate\n        , 'expected #{this} to throw #{exp} but #{act} was thrown'\n        , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n        , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n        , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n      );\n    }\n\n    flag(this, 'object', caughtErr);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === typeof obj && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0;\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , flag(this, 'negate') ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      var deltaMessage = delta === undefined ? \", and a delta is required\" : \"\";\n      throw new AssertionError(\n          flagMsg + 'the arguments to closeTo or approximately must be numbers' + deltaMessage,\n          undefined,\n          ssfi\n      );\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function(elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function(elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n\n    var subject, failMsg, failNegateMsg;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    this.assert(\n        isSubsetOf(subset, obj, cmp, contains, ordered)\n      , failMsg\n      , failNegateMsg\n      , subset\n      , obj\n      , true\n    );\n  });\n\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * It can also be chained with `.contain` or `.include`, which will work with\n   * both arrays and strings:\n   *\n   *     expect('Today is sunny').to.contain.oneOf(['sunny', 'cloudy'])\n   *     expect('Today is rainy').to.not.contain.oneOf(['sunny', 'cloudy'])\n   *     expect([1,2,3]).to.contain.oneOf([3,4,5])\n   *     expect([1,2,3]).to.not.contain.oneOf([4,5,6])\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi')\n      , contains = flag(this, 'contains')\n      , isDeep = flag(this, 'deep');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n\n    if (contains) {\n      this.assert(\n        list.some(function(possibility) { return expected.indexOf(possibility) > -1 })\n        , 'expected #{this} to contain one of #{exp}'\n        , 'expected #{this} to not contain one of #{exp}'\n        , list\n        , expected\n      );\n    } else {\n      if (isDeep) {\n        this.assert(\n          list.some(function(possibility) { return _.eql(expected, possibility) })\n          , 'expected #{this} to deeply equal one of #{exp}'\n          , 'expected #{this} to deeply equal one of #{exp}'\n          , list\n          , expected\n        );\n      } else {\n        this.assert(\n          list.indexOf(expected) > -1\n          , 'expected #{this} to be one of #{exp}'\n          , 'expected #{this} to not be one of #{exp}'\n          , list\n          , expected\n        );\n      }\n    }\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    // This gets flagged because of the .by(delta) assertion\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n\n    this.assert(\n      initial !== final\n      , 'expected ' + msgObj + ' to change'\n      , 'expected ' + msgObj + ' to not change'\n    );\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n\n    this.assert(\n      final - initial > 0\n      , 'expected ' + msgObj + ' to increase'\n      , 'expected ' + msgObj + ' to not increase'\n    );\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n\n    this.assert(\n      final - initial < 0\n      , 'expected ' + msgObj + ' to decrease'\n      , 'expected ' + msgObj + ' to not decrease'\n    );\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n\n    var expression;\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(\n      expression\n      , 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta\n      , 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta\n    );\n  }\n\n  Assertion.addMethod('by', assertDelta);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function(msg) {\n    var obj = flag(this, 'object');\n\n    this.assert(\n        typeof obj === 'number' && isFinite(obj)\n      , 'expected #{this} to be a finite number'\n      , 'expected #{this} to not be a finite number'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   *     assert.fail();\n   *     assert.fail(\"custom error message\");\n   *     assert.fail(1, 2);\n   *     assert.fail(1, 2, \"custom error message\");\n   *     assert.fail(1, 2, \"custom error message\", \">\");\n   *     assert.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        // Comply with Node's fail([message]) interface\n\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n\n   /**\n   * ### .isFinite(value, [message])\n   *\n   * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n   *\n   *     var cups = 2;\n   *     assert.isFinite(cups, 'how many cups');\n   *\n   *     assert.isFinite(NaN); // throws\n   *\n   * @name isFinite\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true)\n      .to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and strictly equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, \"array doesn't contain value\");\n   *     assert.notInclude('foobar', 'baz', \"string doesn't contain substring\");\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   *\n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   *\n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true)\n      .not.nested.include(inc);\n  };\n\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *\n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true)\n      .deep.nested.include(inc);\n  };\n\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *\n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true)\n      .not.deep.nested.include(inc);\n  };\n\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   *\n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ownInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   *\n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *\n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true)\n      .deep.own.include(inc);\n  };\n\n   /**\n   * ### .notDeepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n   *\n   * @name notDeepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true)\n      .not.deep.own.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true)\n      .to.not.have.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true)\n      .to.have.property(prop, val);\n  };\n\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true)\n      .to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true)\n      .to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true)\n      .to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true)\n      .to.have.own.property(prop);\n  };\n\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true)\n      .to.not.have.own.property(prop);\n  };\n\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true)\n      .to.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true)\n      .to.not.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true)\n      .to.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true)\n      .to.not.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true)\n      .to.have.nested.property(prop);\n  };\n\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true)\n      .to.not.have.nested.property(prop);\n  };\n\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true)\n      .to.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true)\n      .to.not.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true)\n      .to.have.deep.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true)\n      .to.not.have.deep.nested.property(prop, val);\n  }\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` or `size` with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *     assert.lengthOf(new Set([1,2,3]), 3, 'set has size of 3');\n   *     assert.lengthOf(new Map([['a',1],['b',2],['c',3]]), 3, 'map has size of 3');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  }\n\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  }\n\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true)\n      .to.contain.all.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true)\n      .to.not.have.any.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true)\n      .to.not.have.all.keys(keys);\n  }\n\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true)\n      .to.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .hasAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true)\n      .to.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .containsAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` contains all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name containsAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true)\n      .to.contain.all.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true)\n      .to.not.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true)\n      .to.not.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.throws(fn, 'Error thrown must have this msg');\n   *     assert.throws(fn, /Error thrown must have a msg that matches this/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, errorInstance);\n   *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n   *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n   *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n   *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} fn\n   * @param {ErrorConstructor|Error} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true)\n      .to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true)\n      .to.not.throw(errorLike, errMsgMatcher);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(\n          msg + 'Invalid operator \"' + operator + '\"',\n          undefined,\n          assert.operator\n        );\n    }\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true)\n      .to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true)\n      .to.have.same.members(set2);\n  }\n\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true)\n      .to.not.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true)\n      .to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true)\n      .to.not.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true)\n      .to.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true)\n      .to.not.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   *     assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true)\n      .to.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   *     assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   *     assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true)\n      .to.not.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true)\n      .to.include.members(subset);\n  }\n\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true)\n      .to.not.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true)\n      .to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true)\n      .to.not.include.deep.members(subset);\n  }\n\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true)\n      .to.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true)\n      .to.not.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true)\n      .to.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true)\n      .to.not.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  }\n\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  }\n\n   /**\n   * ### .changesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function changes the value of a property by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 2 };\n   *     assert.changesBy(fn, obj, 'val', 2);\n   *\n   * @name changesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true)\n      .to.change(obj, prop).by(delta);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property, [message])\n   *\n   * Asserts that a function does not change the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true)\n      .to.not.change(obj, prop);\n  }\n\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true)\n      .to.change(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true)\n      .to.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true)\n      .to.increase(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true)\n      .to.not.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true)\n      .to.increase(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true)\n      .to.decrease(obj, prop);\n  }\n\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true)\n      .to.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true)\n      .to.not.decrease(obj, prop);\n  }\n\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecreaseBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true)\n      .to.not.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true)\n      .to.decrease(obj, prop).but.not.by(delta);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen')\n  ('isEmpty', 'empty')\n  ('isNotEmpty', 'notEmpty');\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   *     expect.fail();\n   *     expect.fail(\"custom error message\");\n   *     expect.fail(1, 2);\n   *     expect.fail(1, 2, \"custom error message\");\n   *     expect.fail(1, 2, \"custom error message\", \">\");\n   *     expect.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String\n          || this instanceof Number\n          || this instanceof Boolean\n          || typeof Symbol === 'function' && this instanceof Symbol\n          || typeof BigInt === 'function' && this instanceof BigInt) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail([message])\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     *     should.fail();\n     *     should.fail(\"custom error message\");\n     *     should.fail(1, 2);\n     *     should.fail(1, 2, \"custom error message\");\n     *     should.fail(1, 2, \"custom error message\", \">\");\n     *     should.fail(1, 2, undefined, \">\");\n     *\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      if (arguments.length < 2) {\n          message = actual;\n          actual = undefined;\n      }\n\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n","var fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard (fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n\n  Object.defineProperty(fn, 'length', {\n    get: function () {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' +\n          ' to a compatibility issue, \"length\" cannot directly follow \"' +\n          assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' +\n        ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n\n  return fn;\n};\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function () {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined)\n      return result;\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n\n  Object.defineProperty(ctx, name,\n    { get: function propertyGetter() {\n        // Setting the `ssfi` flag to `propertyGetter` causes this function to\n        // be the starting point for removing implementation frames from the\n        // stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', propertyGetter);\n        }\n\n        var result = getter.call(this);\n        if (result !== undefined)\n          return result;\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1\n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","var type = require('type-detect');\n\nvar flag = require('./flag');\n\nfunction isObjectType(obj) {\n  var objectType = type(obj);\n  var objectTypes = ['Array', 'Object', 'function'];\n\n  return objectTypes.indexOf(objectType) !== -1;\n}\n\n/**\n * ### .getOperator(message)\n *\n * Extract the operator from error message.\n * Operator defined is based on below link\n * https://nodejs.org/api/assert.html#assert_assert.\n *\n * Returns the `operator` or `undefined` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getOperator\n * @api public\n */\n\nmodule.exports = function getOperator(obj, args) {\n  var operator = flag(obj, 'operator');\n  var negate = flag(obj, 'negate');\n  var expected = args[3];\n  var msg = negate ? args[2] : args[1];\n\n  if (operator) {\n    return operator;\n  }\n\n  if (typeof msg === 'function') msg = msg();\n\n  msg = msg || '';\n  if (!msg) {\n    return undefined;\n  }\n\n  if (/\\shave\\s/.test(msg)) {\n    return undefined;\n  }\n\n  var isObject = isObjectType(expected);\n  if (/\\snot\\s/.test(msg)) {\n    return isObject ? 'notDeepStrictEqual' : 'notStrictEqual';\n  }\n\n  return isObject ? 'deepStrictEqual' : 'strictEqual';\n};\n","/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n","/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\n\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\n\nvar pathval = require('pathval');\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');\n\n/*!\n * getOperator method\n */\n\nexports.getOperator = require('./getOperator');","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('get-func-name');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\nvar config = require('../config');\n\nmodule.exports = inspect;\n\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      'nodeType' in object &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  var name, nameSuffix;\n\n  // Some type of object without properties can be shortcut.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = ''\n    , array = false\n    , typedArray = false\n    , braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  }\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n\n    case 'bigint':\n      return ctx.stylize(value.toString() + 'n', 'bigint');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n    str += value[i] + ', ';\n  }\n  str += ' ]';\n\n  // Removing trailing `, ` if the array was not truncated\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return (typeof ar === 'object' && /\\w+Array]$/.test(objectToString(ar)));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\n\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n}\n\n// If ECMAScript 6's Number.isNaN is present, prefer that.\nmodule.exports = Number.isNaN || isNaN;\n","var config = require('../config');\n\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy &&\n    typeof Proxy !== 'undefined' &&\n    typeof Reflect !== 'undefined';\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwrites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwrites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () {\n      throw new Error(name + ' is not a function');\n    };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  var overwritingMethodWrapper = function () {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    }\n\n    // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwrites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function overwritingPropertyGetter() {\n        // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n        // function to be the starting point for removing implementation frames\n        // from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', overwritingPropertyGetter);\n        }\n\n        // Setting the `lockSsfi` flag to `true` prevents the overwritten\n        // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n        // flag is already set to the correct starting point for this assertion.\n        var origLockSsfi = flag(this, 'lockSsfi');\n        flag(this, 'lockSsfi', true);\n        var result = getter(_super).call(this);\n        flag(this, 'lockSsfi', origLockSsfi);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (\n            !Object.prototype.hasOwnProperty(prop) &&\n            builtins.indexOf(prop) === -1\n          ) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] +\n          (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag');\n\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAssertion = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","'use strict';\n\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\nfunction getFunctionName(constructorFn) {\n  var name = '';\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() ||\n        getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getMessage(errorLike) {\n  var msg = '';\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName,\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@charset \\\"utf-8\\\";\\n\\nbody {\\n  margin:0;\\n}\\n\\n#mocha {\\n  font: 20px/1.5 \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  margin: 60px 50px;\\n}\\n\\n#mocha ul,\\n#mocha li {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n#mocha ul {\\n  list-style: none;\\n}\\n\\n#mocha h1,\\n#mocha h2 {\\n  margin: 0;\\n}\\n\\n#mocha h1 {\\n  margin-top: 15px;\\n  font-size: 1em;\\n  font-weight: 200;\\n}\\n\\n#mocha h1 a {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\n#mocha h1 a:hover {\\n  text-decoration: underline;\\n}\\n\\n#mocha .suite .suite h1 {\\n  margin-top: 0;\\n  font-size: .8em;\\n}\\n\\n#mocha .hidden {\\n  display: none;\\n}\\n\\n#mocha h2 {\\n  font-size: 12px;\\n  font-weight: normal;\\n  cursor: pointer;\\n}\\n\\n#mocha .suite {\\n  margin-left: 15px;\\n}\\n\\n#mocha .test {\\n  margin-left: 15px;\\n  overflow: hidden;\\n}\\n\\n#mocha .test.pending:hover h2::after {\\n  content: '(pending)';\\n  font-family: arial, sans-serif;\\n}\\n\\n#mocha .test.pass.medium .duration {\\n  background: #c09853;\\n}\\n\\n#mocha .test.pass.slow .duration {\\n  background: #b94a48;\\n}\\n\\n#mocha .test.pass::before {\\n  content: '✓';\\n  font-size: 12px;\\n  display: block;\\n  float: left;\\n  margin-right: 5px;\\n  color: #00d6b2;\\n}\\n\\n#mocha .test.pass .duration {\\n  font-size: 9px;\\n  margin-left: 5px;\\n  padding: 2px 5px;\\n  color: #fff;\\n  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  -moz-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  -webkit-border-radius: 5px;\\n  -moz-border-radius: 5px;\\n  -ms-border-radius: 5px;\\n  -o-border-radius: 5px;\\n  border-radius: 5px;\\n}\\n\\n#mocha .test.pass.fast .duration {\\n  display: none;\\n}\\n\\n#mocha .test.pending {\\n  color: #0b97c4;\\n}\\n\\n#mocha .test.pending::before {\\n  content: '◦';\\n  color: #0b97c4;\\n}\\n\\n#mocha .test.fail {\\n  color: #c00;\\n}\\n\\n#mocha .test.fail pre {\\n  color: black;\\n}\\n\\n#mocha .test.fail::before {\\n  content: '✖';\\n  font-size: 12px;\\n  display: block;\\n  float: left;\\n  margin-right: 5px;\\n  color: #c00;\\n}\\n\\n#mocha .test pre.error {\\n  color: #c00;\\n  max-height: 300px;\\n  overflow: auto;\\n}\\n\\n#mocha .test .html-error {\\n  overflow: auto;\\n  color: black;\\n  display: block;\\n  float: left;\\n  clear: left;\\n  font: 12px/1.5 monaco, monospace;\\n  margin: 5px;\\n  padding: 15px;\\n  border: 1px solid #eee;\\n  max-width: 85%; /*(1)*/\\n  max-width: -webkit-calc(100% - 42px);\\n  max-width: -moz-calc(100% - 42px);\\n  max-width: calc(100% - 42px); /*(2)*/\\n  max-height: 300px;\\n  word-wrap: break-word;\\n  border-bottom-color: #ddd;\\n  -webkit-box-shadow: 0 1px 3px #eee;\\n  -moz-box-shadow: 0 1px 3px #eee;\\n  box-shadow: 0 1px 3px #eee;\\n  -webkit-border-radius: 3px;\\n  -moz-border-radius: 3px;\\n  border-radius: 3px;\\n}\\n\\n#mocha .test .html-error pre.error {\\n  border: none;\\n  -webkit-border-radius: 0;\\n  -moz-border-radius: 0;\\n  border-radius: 0;\\n  -webkit-box-shadow: 0;\\n  -moz-box-shadow: 0;\\n  box-shadow: 0;\\n  padding: 0;\\n  margin: 0;\\n  margin-top: 18px;\\n  max-height: none;\\n}\\n\\n/**\\n * (1): approximate for browsers not supporting calc\\n * (2): 42 = 2*15 + 2*10 + 2*1 (padding + margin + border)\\n *      ^^ seriously\\n */\\n#mocha .test pre {\\n  display: block;\\n  float: left;\\n  clear: left;\\n  font: 12px/1.5 monaco, monospace;\\n  margin: 5px;\\n  padding: 15px;\\n  border: 1px solid #eee;\\n  max-width: 85%; /*(1)*/\\n  max-width: -webkit-calc(100% - 42px);\\n  max-width: -moz-calc(100% - 42px);\\n  max-width: calc(100% - 42px); /*(2)*/\\n  word-wrap: break-word;\\n  border-bottom-color: #ddd;\\n  -webkit-box-shadow: 0 1px 3px #eee;\\n  -moz-box-shadow: 0 1px 3px #eee;\\n  box-shadow: 0 1px 3px #eee;\\n  -webkit-border-radius: 3px;\\n  -moz-border-radius: 3px;\\n  border-radius: 3px;\\n}\\n\\n#mocha .test h2 {\\n  position: relative;\\n}\\n\\n#mocha .test a.replay {\\n  position: absolute;\\n  top: 3px;\\n  right: 0;\\n  text-decoration: none;\\n  vertical-align: middle;\\n  display: block;\\n  width: 15px;\\n  height: 15px;\\n  line-height: 15px;\\n  text-align: center;\\n  background: #eee;\\n  font-size: 15px;\\n  -webkit-border-radius: 15px;\\n  -moz-border-radius: 15px;\\n  border-radius: 15px;\\n  -webkit-transition:opacity 200ms;\\n  -moz-transition:opacity 200ms;\\n  -o-transition:opacity 200ms;\\n  transition: opacity 200ms;\\n  opacity: 0.3;\\n  color: #888;\\n}\\n\\n#mocha .test:hover a.replay {\\n  opacity: 1;\\n}\\n\\n#mocha-report.pass .test.fail {\\n  display: none;\\n}\\n\\n#mocha-report.fail .test.pass {\\n  display: none;\\n}\\n\\n#mocha-report.pending .test.pass,\\n#mocha-report.pending .test.fail {\\n  display: none;\\n}\\n#mocha-report.pending .test.pass.pending {\\n  display: block;\\n}\\n\\n#mocha-error {\\n  color: #c00;\\n  font-size: 1.5em;\\n  font-weight: 100;\\n  letter-spacing: 1px;\\n}\\n\\n#mocha-stats {\\n  position: fixed;\\n  top: 15px;\\n  right: 10px;\\n  font-size: 12px;\\n  margin: 0;\\n  color: #888;\\n  z-index: 1;\\n}\\n\\n#mocha-stats .progress {\\n  float: right;\\n  padding-top: 0;\\n\\n  /**\\n   * Set safe initial values, so mochas .progress does not inherit these\\n   * properties from Bootstrap .progress (which causes .progress height to\\n   * equal line height set in Bootstrap).\\n   */\\n  height: auto;\\n  -webkit-box-shadow: none;\\n  -moz-box-shadow: none;\\n  box-shadow: none;\\n  background-color: initial;\\n}\\n\\n#mocha-stats em {\\n  color: black;\\n}\\n\\n#mocha-stats a {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\n#mocha-stats a:hover {\\n  border-bottom: 1px solid #eee;\\n}\\n\\n#mocha-stats li {\\n  display: inline-block;\\n  margin: 0 5px;\\n  list-style: none;\\n  padding-top: 11px;\\n}\\n\\n#mocha-stats canvas {\\n  width: 40px;\\n  height: 40px;\\n}\\n\\n#mocha code .comment { color: #ddd; }\\n#mocha code .init { color: #2f6fad; }\\n#mocha code .string { color: #5890ad; }\\n#mocha code .keyword { color: #8a6343; }\\n#mocha code .number { color: #2f6fad; }\\n\\n@media screen and (max-device-width: 480px) {\\n  #mocha {\\n    margin: 60px 0px;\\n  }\\n\\n  #mocha #stats {\\n    position: absolute;\\n  }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/mocha/mocha.css\"],\"names\":[],\"mappings\":\"AAAA,gBAAgB;;AAEhB;EACE,QAAQ;AACV;;AAEA;EACE,6DAA6D;EAC7D,iBAAiB;AACnB;;AAEA;;EAEE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,SAAS;AACX;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;EACpB,8BAA8B;AAChC;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,cAAc;EACd,WAAW;EACX,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,gBAAgB;EAChB,gBAAgB;EAChB,WAAW;EACX,kDAAkD;EAClD,+CAA+C;EAC/C,0CAA0C;EAC1C,0BAA0B;EAC1B,uBAAuB;EACvB,sBAAsB;EACtB,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,cAAc;EACd,WAAW;EACX,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,cAAc;EACd,WAAW;EACX,WAAW;EACX,gCAAgC;EAChC,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,cAAc,EAAE,MAAM;EACtB,oCAAoC;EACpC,iCAAiC;EACjC,4BAA4B,EAAE,MAAM;EACpC,iBAAiB;EACjB,qBAAqB;EACrB,yBAAyB;EACzB,kCAAkC;EAClC,+BAA+B;EAC/B,0BAA0B;EAC1B,0BAA0B;EAC1B,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,qBAAqB;EACrB,kBAAkB;EAClB,aAAa;EACb,UAAU;EACV,SAAS;EACT,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;;;;EAIE;AACF;EACE,cAAc;EACd,WAAW;EACX,WAAW;EACX,gCAAgC;EAChC,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,cAAc,EAAE,MAAM;EACtB,oCAAoC;EACpC,iCAAiC;EACjC,4BAA4B,EAAE,MAAM;EACpC,qBAAqB;EACrB,yBAAyB;EACzB,kCAAkC;EAClC,+BAA+B;EAC/B,0BAA0B;EAC1B,0BAA0B;EAC1B,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,QAAQ;EACR,qBAAqB;EACrB,sBAAsB;EACtB,cAAc;EACd,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,2BAA2B;EAC3B,wBAAwB;EACxB,mBAAmB;EACnB,gCAAgC;EAChC,6BAA6B;EAC7B,2BAA2B;EAC3B,yBAAyB;EACzB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;;EAEE,aAAa;AACf;AACA;EACE,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,SAAS;EACT,WAAW;EACX,eAAe;EACf,SAAS;EACT,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,cAAc;;EAEd;;;;IAIE;EACF,YAAY;EACZ,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,yBAAyB;AAC3B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,qBAAqB;EACrB,aAAa;EACb,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA,uBAAuB,WAAW,EAAE;AACpC,oBAAoB,cAAc,EAAE;AACpC,sBAAsB,cAAc,EAAE;AACtC,uBAAuB,cAAc,EAAE;AACvC,sBAAsB,cAAc,EAAE;;AAEtC;EACE;IACE,gBAAgB;EAClB;;EAEA;IACE,kBAAkB;EACpB;AACF\",\"sourcesContent\":[\"@charset \\\"utf-8\\\";\\n\\nbody {\\n  margin:0;\\n}\\n\\n#mocha {\\n  font: 20px/1.5 \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n  margin: 60px 50px;\\n}\\n\\n#mocha ul,\\n#mocha li {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n#mocha ul {\\n  list-style: none;\\n}\\n\\n#mocha h1,\\n#mocha h2 {\\n  margin: 0;\\n}\\n\\n#mocha h1 {\\n  margin-top: 15px;\\n  font-size: 1em;\\n  font-weight: 200;\\n}\\n\\n#mocha h1 a {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\n#mocha h1 a:hover {\\n  text-decoration: underline;\\n}\\n\\n#mocha .suite .suite h1 {\\n  margin-top: 0;\\n  font-size: .8em;\\n}\\n\\n#mocha .hidden {\\n  display: none;\\n}\\n\\n#mocha h2 {\\n  font-size: 12px;\\n  font-weight: normal;\\n  cursor: pointer;\\n}\\n\\n#mocha .suite {\\n  margin-left: 15px;\\n}\\n\\n#mocha .test {\\n  margin-left: 15px;\\n  overflow: hidden;\\n}\\n\\n#mocha .test.pending:hover h2::after {\\n  content: '(pending)';\\n  font-family: arial, sans-serif;\\n}\\n\\n#mocha .test.pass.medium .duration {\\n  background: #c09853;\\n}\\n\\n#mocha .test.pass.slow .duration {\\n  background: #b94a48;\\n}\\n\\n#mocha .test.pass::before {\\n  content: '✓';\\n  font-size: 12px;\\n  display: block;\\n  float: left;\\n  margin-right: 5px;\\n  color: #00d6b2;\\n}\\n\\n#mocha .test.pass .duration {\\n  font-size: 9px;\\n  margin-left: 5px;\\n  padding: 2px 5px;\\n  color: #fff;\\n  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  -moz-box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.2);\\n  -webkit-border-radius: 5px;\\n  -moz-border-radius: 5px;\\n  -ms-border-radius: 5px;\\n  -o-border-radius: 5px;\\n  border-radius: 5px;\\n}\\n\\n#mocha .test.pass.fast .duration {\\n  display: none;\\n}\\n\\n#mocha .test.pending {\\n  color: #0b97c4;\\n}\\n\\n#mocha .test.pending::before {\\n  content: '◦';\\n  color: #0b97c4;\\n}\\n\\n#mocha .test.fail {\\n  color: #c00;\\n}\\n\\n#mocha .test.fail pre {\\n  color: black;\\n}\\n\\n#mocha .test.fail::before {\\n  content: '✖';\\n  font-size: 12px;\\n  display: block;\\n  float: left;\\n  margin-right: 5px;\\n  color: #c00;\\n}\\n\\n#mocha .test pre.error {\\n  color: #c00;\\n  max-height: 300px;\\n  overflow: auto;\\n}\\n\\n#mocha .test .html-error {\\n  overflow: auto;\\n  color: black;\\n  display: block;\\n  float: left;\\n  clear: left;\\n  font: 12px/1.5 monaco, monospace;\\n  margin: 5px;\\n  padding: 15px;\\n  border: 1px solid #eee;\\n  max-width: 85%; /*(1)*/\\n  max-width: -webkit-calc(100% - 42px);\\n  max-width: -moz-calc(100% - 42px);\\n  max-width: calc(100% - 42px); /*(2)*/\\n  max-height: 300px;\\n  word-wrap: break-word;\\n  border-bottom-color: #ddd;\\n  -webkit-box-shadow: 0 1px 3px #eee;\\n  -moz-box-shadow: 0 1px 3px #eee;\\n  box-shadow: 0 1px 3px #eee;\\n  -webkit-border-radius: 3px;\\n  -moz-border-radius: 3px;\\n  border-radius: 3px;\\n}\\n\\n#mocha .test .html-error pre.error {\\n  border: none;\\n  -webkit-border-radius: 0;\\n  -moz-border-radius: 0;\\n  border-radius: 0;\\n  -webkit-box-shadow: 0;\\n  -moz-box-shadow: 0;\\n  box-shadow: 0;\\n  padding: 0;\\n  margin: 0;\\n  margin-top: 18px;\\n  max-height: none;\\n}\\n\\n/**\\n * (1): approximate for browsers not supporting calc\\n * (2): 42 = 2*15 + 2*10 + 2*1 (padding + margin + border)\\n *      ^^ seriously\\n */\\n#mocha .test pre {\\n  display: block;\\n  float: left;\\n  clear: left;\\n  font: 12px/1.5 monaco, monospace;\\n  margin: 5px;\\n  padding: 15px;\\n  border: 1px solid #eee;\\n  max-width: 85%; /*(1)*/\\n  max-width: -webkit-calc(100% - 42px);\\n  max-width: -moz-calc(100% - 42px);\\n  max-width: calc(100% - 42px); /*(2)*/\\n  word-wrap: break-word;\\n  border-bottom-color: #ddd;\\n  -webkit-box-shadow: 0 1px 3px #eee;\\n  -moz-box-shadow: 0 1px 3px #eee;\\n  box-shadow: 0 1px 3px #eee;\\n  -webkit-border-radius: 3px;\\n  -moz-border-radius: 3px;\\n  border-radius: 3px;\\n}\\n\\n#mocha .test h2 {\\n  position: relative;\\n}\\n\\n#mocha .test a.replay {\\n  position: absolute;\\n  top: 3px;\\n  right: 0;\\n  text-decoration: none;\\n  vertical-align: middle;\\n  display: block;\\n  width: 15px;\\n  height: 15px;\\n  line-height: 15px;\\n  text-align: center;\\n  background: #eee;\\n  font-size: 15px;\\n  -webkit-border-radius: 15px;\\n  -moz-border-radius: 15px;\\n  border-radius: 15px;\\n  -webkit-transition:opacity 200ms;\\n  -moz-transition:opacity 200ms;\\n  -o-transition:opacity 200ms;\\n  transition: opacity 200ms;\\n  opacity: 0.3;\\n  color: #888;\\n}\\n\\n#mocha .test:hover a.replay {\\n  opacity: 1;\\n}\\n\\n#mocha-report.pass .test.fail {\\n  display: none;\\n}\\n\\n#mocha-report.fail .test.pass {\\n  display: none;\\n}\\n\\n#mocha-report.pending .test.pass,\\n#mocha-report.pending .test.fail {\\n  display: none;\\n}\\n#mocha-report.pending .test.pass.pending {\\n  display: block;\\n}\\n\\n#mocha-error {\\n  color: #c00;\\n  font-size: 1.5em;\\n  font-weight: 100;\\n  letter-spacing: 1px;\\n}\\n\\n#mocha-stats {\\n  position: fixed;\\n  top: 15px;\\n  right: 10px;\\n  font-size: 12px;\\n  margin: 0;\\n  color: #888;\\n  z-index: 1;\\n}\\n\\n#mocha-stats .progress {\\n  float: right;\\n  padding-top: 0;\\n\\n  /**\\n   * Set safe initial values, so mochas .progress does not inherit these\\n   * properties from Bootstrap .progress (which causes .progress height to\\n   * equal line height set in Bootstrap).\\n   */\\n  height: auto;\\n  -webkit-box-shadow: none;\\n  -moz-box-shadow: none;\\n  box-shadow: none;\\n  background-color: initial;\\n}\\n\\n#mocha-stats em {\\n  color: black;\\n}\\n\\n#mocha-stats a {\\n  text-decoration: none;\\n  color: inherit;\\n}\\n\\n#mocha-stats a:hover {\\n  border-bottom: 1px solid #eee;\\n}\\n\\n#mocha-stats li {\\n  display: inline-block;\\n  margin: 0 5px;\\n  list-style: none;\\n  padding-top: 11px;\\n}\\n\\n#mocha-stats canvas {\\n  width: 40px;\\n  height: 40px;\\n}\\n\\n#mocha code .comment { color: #ddd; }\\n#mocha code .init { color: #2f6fad; }\\n#mocha code .string { color: #5890ad; }\\n#mocha code .keyword { color: #8a6343; }\\n#mocha code .number { color: #2f6fad; }\\n\\n@media screen and (max-device-width: 480px) {\\n  #mocha {\\n    margin: 60px 0px;\\n  }\\n\\n  #mocha #stats {\\n    position: absolute;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"table {\\n    border-collapse: collapse;\\n}\\n\\ntable.mal {\\n    background-color: #faa;\\n}\\ntable.bien {\\n    background-color: #afa;\\n}\\n\\ntd {\\n    width: 50px;\\n    height: 50px;\\n    padding: 0px;\\n    border: 1px solid #000;\\n    text-align: center; \\n    vertical-align: middle;\\n    font-size: 2em;\\n    font-family: Arial, Helvetica, sans-serif;\\n}\\n\\ntd span[contenteditable=\\\"true\\\"] {\\n    background-color: #ddd;\\n    display: grid;\\n    align-items: center;\\n    height: 100%;\\n}\\n\\ntd.mal span{\\n    background-color: #f00;\\n}\\ntd.mal {\\n    background-color: #f00;\\n}\\ntd.regular span{\\n    background-color: #fa0;\\n}\\n\\ntd.separador {\\n    border-right: 3px solid #000;\\n}\\ntr.separador {\\n    border-bottom: 3px solid #000;\\n}\\n\\n.editable{\\n    color: #ccc;\\n}\\n\\n.teclado {\\n    position: absolute;\\n    width: 80px;\\n    height: 110px;\\n    background-color: #ddd;\\n    border-radius: 5px;\\n    border: 2px solid #ccc;\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n.teclado span {\\n    display: inline-block;\\n    padding: 0 4px 0 4px;\\n    font-size: 26px;\\n    background-color: #fff;\\n    border: 2px solid #ccc;\\n    border-radius: 5px;\\n    margin: 0px;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,yBAAyB;AAC7B;;AAEA;IACI,sBAAsB;AAC1B;AACA;IACI,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;IAClB,sBAAsB;IACtB,cAAc;IACd,yCAAyC;AAC7C;;AAEA;IACI,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,sBAAsB;AAC1B;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,sBAAsB;AAC1B;;AAEA;IACI,4BAA4B;AAChC;AACA;IACI,6BAA6B;AACjC;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,sBAAsB;IACtB,aAAa;IACb,eAAe;AACnB;AACA;IACI,qBAAqB;IACrB,oBAAoB;IACpB,eAAe;IACf,sBAAsB;IACtB,sBAAsB;IACtB,kBAAkB;IAClB,WAAW;AACf\",\"sourcesContent\":[\"table {\\n    border-collapse: collapse;\\n}\\n\\ntable.mal {\\n    background-color: #faa;\\n}\\ntable.bien {\\n    background-color: #afa;\\n}\\n\\ntd {\\n    width: 50px;\\n    height: 50px;\\n    padding: 0px;\\n    border: 1px solid #000;\\n    text-align: center; \\n    vertical-align: middle;\\n    font-size: 2em;\\n    font-family: Arial, Helvetica, sans-serif;\\n}\\n\\ntd span[contenteditable=\\\"true\\\"] {\\n    background-color: #ddd;\\n    display: grid;\\n    align-items: center;\\n    height: 100%;\\n}\\n\\ntd.mal span{\\n    background-color: #f00;\\n}\\ntd.mal {\\n    background-color: #f00;\\n}\\ntd.regular span{\\n    background-color: #fa0;\\n}\\n\\ntd.separador {\\n    border-right: 3px solid #000;\\n}\\ntr.separador {\\n    border-bottom: 3px solid #000;\\n}\\n\\n.editable{\\n    color: #ccc;\\n}\\n\\n.teclado {\\n    position: absolute;\\n    width: 80px;\\n    height: 110px;\\n    background-color: #ddd;\\n    border-radius: 5px;\\n    border: 2px solid #ccc;\\n    display: flex;\\n    flex-wrap: wrap;\\n}\\n.teclado span {\\n    display: inline-block;\\n    padding: 0 4px 0 4px;\\n    font-size: 26px;\\n    background-color: #fff;\\n    border: 2px solid #ccc;\\n    border-radius: 5px;\\n    margin: 0px;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n","'use strict';\n\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n","// mocha@9.1.3 in javascript ES2018\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.mocha = factory());\n})(this, (function () { 'use strict';\n\n  var global$2 = (typeof global$1 !== \"undefined\" ? global$1 :\n    typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window : {});\n\n  var global$1 = (typeof global$2 !== \"undefined\" ? global$2 :\n              typeof self !== \"undefined\" ? self :\n              typeof window !== \"undefined\" ? window : {});\n\n  // shim for using process in browser\n  // based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\n  function defaultSetTimout$1() {\n      throw new Error('setTimeout has not been defined');\n  }\n  function defaultClearTimeout$1 () {\n      throw new Error('clearTimeout has not been defined');\n  }\n  var cachedSetTimeout$1 = defaultSetTimout$1;\n  var cachedClearTimeout$1 = defaultClearTimeout$1;\n  if (typeof global$1.setTimeout === 'function') {\n      cachedSetTimeout$1 = setTimeout;\n  }\n  if (typeof global$1.clearTimeout === 'function') {\n      cachedClearTimeout$1 = clearTimeout;\n  }\n\n  function runTimeout$1(fun) {\n      if (cachedSetTimeout$1 === setTimeout) {\n          //normal enviroments in sane situations\n          return setTimeout(fun, 0);\n      }\n      // if setTimeout wasn't available but was latter defined\n      if ((cachedSetTimeout$1 === defaultSetTimout$1 || !cachedSetTimeout$1) && setTimeout) {\n          cachedSetTimeout$1 = setTimeout;\n          return setTimeout(fun, 0);\n      }\n      try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedSetTimeout$1(fun, 0);\n      } catch(e){\n          try {\n              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n              return cachedSetTimeout$1.call(null, fun, 0);\n          } catch(e){\n              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n              return cachedSetTimeout$1.call(this, fun, 0);\n          }\n      }\n\n\n  }\n  function runClearTimeout$1(marker) {\n      if (cachedClearTimeout$1 === clearTimeout) {\n          //normal enviroments in sane situations\n          return clearTimeout(marker);\n      }\n      // if clearTimeout wasn't available but was latter defined\n      if ((cachedClearTimeout$1 === defaultClearTimeout$1 || !cachedClearTimeout$1) && clearTimeout) {\n          cachedClearTimeout$1 = clearTimeout;\n          return clearTimeout(marker);\n      }\n      try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedClearTimeout$1(marker);\n      } catch (e){\n          try {\n              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n              return cachedClearTimeout$1.call(null, marker);\n          } catch (e){\n              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n              // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n              return cachedClearTimeout$1.call(this, marker);\n          }\n      }\n\n\n\n  }\n  var queue$1 = [];\n  var draining$1 = false;\n  var currentQueue$1;\n  var queueIndex$1 = -1;\n\n  function cleanUpNextTick$1() {\n      if (!draining$1 || !currentQueue$1) {\n          return;\n      }\n      draining$1 = false;\n      if (currentQueue$1.length) {\n          queue$1 = currentQueue$1.concat(queue$1);\n      } else {\n          queueIndex$1 = -1;\n      }\n      if (queue$1.length) {\n          drainQueue$1();\n      }\n  }\n\n  function drainQueue$1() {\n      if (draining$1) {\n          return;\n      }\n      var timeout = runTimeout$1(cleanUpNextTick$1);\n      draining$1 = true;\n\n      var len = queue$1.length;\n      while(len) {\n          currentQueue$1 = queue$1;\n          queue$1 = [];\n          while (++queueIndex$1 < len) {\n              if (currentQueue$1) {\n                  currentQueue$1[queueIndex$1].run();\n              }\n          }\n          queueIndex$1 = -1;\n          len = queue$1.length;\n      }\n      currentQueue$1 = null;\n      draining$1 = false;\n      runClearTimeout$1(timeout);\n  }\n  function nextTick$1(fun) {\n      var args = new Array(arguments.length - 1);\n      if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n              args[i - 1] = arguments[i];\n          }\n      }\n      queue$1.push(new Item$1(fun, args));\n      if (queue$1.length === 1 && !draining$1) {\n          runTimeout$1(drainQueue$1);\n      }\n  }\n  // v8 likes predictible objects\n  function Item$1(fun, array) {\n      this.fun = fun;\n      this.array = array;\n  }\n  Item$1.prototype.run = function () {\n      this.fun.apply(null, this.array);\n  };\n  var title$1 = 'browser';\n  var platform$1 = 'browser';\n  var browser$4 = true;\n  var env$1 = {};\n  var argv$1 = [];\n  var version$2 = ''; // empty string to avoid regexp issues\n  var versions$1 = {};\n  var release$1 = {};\n  var config$1 = {};\n\n  function noop$1() {}\n\n  var on$1 = noop$1;\n  var addListener$1 = noop$1;\n  var once$1 = noop$1;\n  var off$1 = noop$1;\n  var removeListener$1 = noop$1;\n  var removeAllListeners$1 = noop$1;\n  var emit$1 = noop$1;\n\n  function binding$1(name) {\n      throw new Error('process.binding is not supported');\n  }\n\n  function cwd$1 () { return '/' }\n  function chdir$1 (dir) {\n      throw new Error('process.chdir is not supported');\n  }function umask$1() { return 0; }\n\n  // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\n  var performance$1 = global$1.performance || {};\n  var performanceNow$1 =\n    performance$1.now        ||\n    performance$1.mozNow     ||\n    performance$1.msNow      ||\n    performance$1.oNow       ||\n    performance$1.webkitNow  ||\n    function(){ return (new Date()).getTime() };\n\n  // generate timestamp or delta\n  // see http://nodejs.org/api/process.html#process_process_hrtime\n  function hrtime$1(previousTimestamp){\n    var clocktime = performanceNow$1.call(performance$1)*1e-3;\n    var seconds = Math.floor(clocktime);\n    var nanoseconds = Math.floor((clocktime%1)*1e9);\n    if (previousTimestamp) {\n      seconds = seconds - previousTimestamp[0];\n      nanoseconds = nanoseconds - previousTimestamp[1];\n      if (nanoseconds<0) {\n        seconds--;\n        nanoseconds += 1e9;\n      }\n    }\n    return [seconds,nanoseconds]\n  }\n\n  var startTime$1 = new Date();\n  function uptime$1() {\n    var currentTime = new Date();\n    var dif = currentTime - startTime$1;\n    return dif / 1000;\n  }\n\n  var process$1 = {\n    nextTick: nextTick$1,\n    title: title$1,\n    browser: browser$4,\n    env: env$1,\n    argv: argv$1,\n    version: version$2,\n    versions: versions$1,\n    on: on$1,\n    addListener: addListener$1,\n    once: once$1,\n    off: off$1,\n    removeListener: removeListener$1,\n    removeAllListeners: removeAllListeners$1,\n    emit: emit$1,\n    binding: binding$1,\n    cwd: cwd$1,\n    chdir: chdir$1,\n    umask: umask$1,\n    hrtime: hrtime$1,\n    platform: platform$1,\n    release: release$1,\n    config: config$1,\n    uptime: uptime$1\n  };\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, basedir, module) {\n  \treturn module = {\n  \t  path: basedir,\n  \t  exports: {},\n  \t  require: function (path, base) {\n        return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n      }\n  \t}, fn(module, module.exports), module.exports;\n  }\n\n  function getCjsExportFromNamespace (n) {\n  \treturn n && n['default'] || n;\n  }\n\n  function commonjsRequire () {\n  \tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n  }\n\n  var domain;\n\n  // This constructor is used to store event handlers. Instantiating this is\n  // faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n  // object (tested with v8 v4.9).\n  function EventHandlers() {}\n  EventHandlers.prototype = Object.create(null);\n\n  function EventEmitter$2() {\n    EventEmitter$2.init.call(this);\n  }\n\n  // nodejs oddity\n  // require('events') === require('events').EventEmitter\n  EventEmitter$2.EventEmitter = EventEmitter$2;\n\n  EventEmitter$2.usingDomains = false;\n\n  EventEmitter$2.prototype.domain = undefined;\n  EventEmitter$2.prototype._events = undefined;\n  EventEmitter$2.prototype._maxListeners = undefined;\n\n  // By default EventEmitters will print a warning if more than 10 listeners are\n  // added to it. This is a useful default which helps finding memory leaks.\n  EventEmitter$2.defaultMaxListeners = 10;\n\n  EventEmitter$2.init = function() {\n    this.domain = null;\n    if (EventEmitter$2.usingDomains) {\n      // if there is an active domain, then attach to it.\n      if (domain.active ) ;\n    }\n\n    if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n      this._events = new EventHandlers();\n      this._eventsCount = 0;\n    }\n\n    this._maxListeners = this._maxListeners || undefined;\n  };\n\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n  EventEmitter$2.prototype.setMaxListeners = function setMaxListeners(n) {\n    if (typeof n !== 'number' || n < 0 || isNaN(n))\n      throw new TypeError('\"n\" argument must be a positive number');\n    this._maxListeners = n;\n    return this;\n  };\n\n  function $getMaxListeners(that) {\n    if (that._maxListeners === undefined)\n      return EventEmitter$2.defaultMaxListeners;\n    return that._maxListeners;\n  }\n\n  EventEmitter$2.prototype.getMaxListeners = function getMaxListeners() {\n    return $getMaxListeners(this);\n  };\n\n  // These standalone emit* functions are used to optimize calling of event\n  // handlers for fast cases because emit() itself often has a variable number of\n  // arguments and can be deoptimized because of that. These functions always have\n  // the same number of arguments and thus do not get deoptimized, so the code\n  // inside them can execute faster.\n  function emitNone(handler, isFn, self) {\n    if (isFn)\n      handler.call(self);\n    else {\n      var len = handler.length;\n      var listeners = arrayClone(handler, len);\n      for (var i = 0; i < len; ++i)\n        listeners[i].call(self);\n    }\n  }\n  function emitOne(handler, isFn, self, arg1) {\n    if (isFn)\n      handler.call(self, arg1);\n    else {\n      var len = handler.length;\n      var listeners = arrayClone(handler, len);\n      for (var i = 0; i < len; ++i)\n        listeners[i].call(self, arg1);\n    }\n  }\n  function emitTwo(handler, isFn, self, arg1, arg2) {\n    if (isFn)\n      handler.call(self, arg1, arg2);\n    else {\n      var len = handler.length;\n      var listeners = arrayClone(handler, len);\n      for (var i = 0; i < len; ++i)\n        listeners[i].call(self, arg1, arg2);\n    }\n  }\n  function emitThree(handler, isFn, self, arg1, arg2, arg3) {\n    if (isFn)\n      handler.call(self, arg1, arg2, arg3);\n    else {\n      var len = handler.length;\n      var listeners = arrayClone(handler, len);\n      for (var i = 0; i < len; ++i)\n        listeners[i].call(self, arg1, arg2, arg3);\n    }\n  }\n\n  function emitMany(handler, isFn, self, args) {\n    if (isFn)\n      handler.apply(self, args);\n    else {\n      var len = handler.length;\n      var listeners = arrayClone(handler, len);\n      for (var i = 0; i < len; ++i)\n        listeners[i].apply(self, args);\n    }\n  }\n\n  EventEmitter$2.prototype.emit = function emit(type) {\n    var er, handler, len, args, i, events, domain;\n    var doError = (type === 'error');\n\n    events = this._events;\n    if (events)\n      doError = (doError && events.error == null);\n    else if (!doError)\n      return false;\n\n    domain = this.domain;\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      er = arguments[1];\n      if (domain) {\n        if (!er)\n          er = new Error('Uncaught, unspecified \"error\" event');\n        er.domainEmitter = this;\n        er.domain = domain;\n        er.domainThrown = false;\n        domain.emit('error', er);\n      } else if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n      return false;\n    }\n\n    handler = events[type];\n\n    if (!handler)\n      return false;\n\n    var isFn = typeof handler === 'function';\n    len = arguments.length;\n    switch (len) {\n      // fast cases\n      case 1:\n        emitNone(handler, isFn, this);\n        break;\n      case 2:\n        emitOne(handler, isFn, this, arguments[1]);\n        break;\n      case 3:\n        emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n        break;\n      case 4:\n        emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n        break;\n      // slower\n      default:\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        emitMany(handler, isFn, this, args);\n    }\n\n    return true;\n  };\n\n  function _addListener(target, type, listener, prepend) {\n    var m;\n    var events;\n    var existing;\n\n    if (typeof listener !== 'function')\n      throw new TypeError('\"listener\" argument must be a function');\n\n    events = target._events;\n    if (!events) {\n      events = target._events = new EventHandlers();\n      target._eventsCount = 0;\n    } else {\n      // To avoid recursion in the case that type === \"newListener\"! Before\n      // adding it to the listeners, first emit \"newListener\".\n      if (events.newListener) {\n        target.emit('newListener', type,\n                    listener.listener ? listener.listener : listener);\n\n        // Re-assign `events` because a newListener handler could have caused the\n        // this._events to be assigned to a new object\n        events = target._events;\n      }\n      existing = events[type];\n    }\n\n    if (!existing) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      existing = events[type] = listener;\n      ++target._eventsCount;\n    } else {\n      if (typeof existing === 'function') {\n        // Adding the second element, need to change to array.\n        existing = events[type] = prepend ? [listener, existing] :\n                                            [existing, listener];\n      } else {\n        // If we've already got an array, just append.\n        if (prepend) {\n          existing.unshift(listener);\n        } else {\n          existing.push(listener);\n        }\n      }\n\n      // Check for listener leak\n      if (!existing.warned) {\n        m = $getMaxListeners(target);\n        if (m && m > 0 && existing.length > m) {\n          existing.warned = true;\n          var w = new Error('Possible EventEmitter memory leak detected. ' +\n                              existing.length + ' ' + type + ' listeners added. ' +\n                              'Use emitter.setMaxListeners() to increase limit');\n          w.name = 'MaxListenersExceededWarning';\n          w.emitter = target;\n          w.type = type;\n          w.count = existing.length;\n          emitWarning$1(w);\n        }\n      }\n    }\n\n    return target;\n  }\n  function emitWarning$1(e) {\n    typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n  }\n  EventEmitter$2.prototype.addListener = function addListener(type, listener) {\n    return _addListener(this, type, listener, false);\n  };\n\n  EventEmitter$2.prototype.on = EventEmitter$2.prototype.addListener;\n\n  EventEmitter$2.prototype.prependListener =\n      function prependListener(type, listener) {\n        return _addListener(this, type, listener, true);\n      };\n\n  function _onceWrap(target, type, listener) {\n    var fired = false;\n    function g() {\n      target.removeListener(type, g);\n      if (!fired) {\n        fired = true;\n        listener.apply(target, arguments);\n      }\n    }\n    g.listener = listener;\n    return g;\n  }\n\n  EventEmitter$2.prototype.once = function once(type, listener) {\n    if (typeof listener !== 'function')\n      throw new TypeError('\"listener\" argument must be a function');\n    this.on(type, _onceWrap(this, type, listener));\n    return this;\n  };\n\n  EventEmitter$2.prototype.prependOnceListener =\n      function prependOnceListener(type, listener) {\n        if (typeof listener !== 'function')\n          throw new TypeError('\"listener\" argument must be a function');\n        this.prependListener(type, _onceWrap(this, type, listener));\n        return this;\n      };\n\n  // emits a 'removeListener' event iff the listener was removed\n  EventEmitter$2.prototype.removeListener =\n      function removeListener(type, listener) {\n        var list, events, position, i, originalListener;\n\n        if (typeof listener !== 'function')\n          throw new TypeError('\"listener\" argument must be a function');\n\n        events = this._events;\n        if (!events)\n          return this;\n\n        list = events[type];\n        if (!list)\n          return this;\n\n        if (list === listener || (list.listener && list.listener === listener)) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else {\n            delete events[type];\n            if (events.removeListener)\n              this.emit('removeListener', type, list.listener || listener);\n          }\n        } else if (typeof list !== 'function') {\n          position = -1;\n\n          for (i = list.length; i-- > 0;) {\n            if (list[i] === listener ||\n                (list[i].listener && list[i].listener === listener)) {\n              originalListener = list[i].listener;\n              position = i;\n              break;\n            }\n          }\n\n          if (position < 0)\n            return this;\n\n          if (list.length === 1) {\n            list[0] = undefined;\n            if (--this._eventsCount === 0) {\n              this._events = new EventHandlers();\n              return this;\n            } else {\n              delete events[type];\n            }\n          } else {\n            spliceOne(list, position);\n          }\n\n          if (events.removeListener)\n            this.emit('removeListener', type, originalListener || listener);\n        }\n\n        return this;\n      };\n\n  EventEmitter$2.prototype.removeAllListeners =\n      function removeAllListeners(type) {\n        var listeners, events;\n\n        events = this._events;\n        if (!events)\n          return this;\n\n        // not listening for removeListener, no need to emit\n        if (!events.removeListener) {\n          if (arguments.length === 0) {\n            this._events = new EventHandlers();\n            this._eventsCount = 0;\n          } else if (events[type]) {\n            if (--this._eventsCount === 0)\n              this._events = new EventHandlers();\n            else\n              delete events[type];\n          }\n          return this;\n        }\n\n        // emit removeListener for all listeners on all events\n        if (arguments.length === 0) {\n          var keys = Object.keys(events);\n          for (var i = 0, key; i < keys.length; ++i) {\n            key = keys[i];\n            if (key === 'removeListener') continue;\n            this.removeAllListeners(key);\n          }\n          this.removeAllListeners('removeListener');\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n          return this;\n        }\n\n        listeners = events[type];\n\n        if (typeof listeners === 'function') {\n          this.removeListener(type, listeners);\n        } else if (listeners) {\n          // LIFO order\n          do {\n            this.removeListener(type, listeners[listeners.length - 1]);\n          } while (listeners[0]);\n        }\n\n        return this;\n      };\n\n  EventEmitter$2.prototype.listeners = function listeners(type) {\n    var evlistener;\n    var ret;\n    var events = this._events;\n\n    if (!events)\n      ret = [];\n    else {\n      evlistener = events[type];\n      if (!evlistener)\n        ret = [];\n      else if (typeof evlistener === 'function')\n        ret = [evlistener.listener || evlistener];\n      else\n        ret = unwrapListeners(evlistener);\n    }\n\n    return ret;\n  };\n\n  EventEmitter$2.listenerCount = function(emitter, type) {\n    if (typeof emitter.listenerCount === 'function') {\n      return emitter.listenerCount(type);\n    } else {\n      return listenerCount$1.call(emitter, type);\n    }\n  };\n\n  EventEmitter$2.prototype.listenerCount = listenerCount$1;\n  function listenerCount$1(type) {\n    var events = this._events;\n\n    if (events) {\n      var evlistener = events[type];\n\n      if (typeof evlistener === 'function') {\n        return 1;\n      } else if (evlistener) {\n        return evlistener.length;\n      }\n    }\n\n    return 0;\n  }\n\n  EventEmitter$2.prototype.eventNames = function eventNames() {\n    return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n  };\n\n  // About 1.5x faster than the two-arg version of Array#splice().\n  function spliceOne(list, index) {\n    for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n      list[i] = list[k];\n    list.pop();\n  }\n\n  function arrayClone(arr, i) {\n    var copy = new Array(i);\n    while (i--)\n      copy[i] = arr[i];\n    return copy;\n  }\n\n  function unwrapListeners(arr) {\n    var ret = new Array(arr.length);\n    for (var i = 0; i < ret.length; ++i) {\n      ret[i] = arr[i].listener || arr[i];\n    }\n    return ret;\n  }\n\n  var lookup$1 = [];\n  var revLookup$1 = [];\n  var Arr$1 = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n  var inited$1 = false;\n  function init$1 () {\n    inited$1 = true;\n    var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    for (var i = 0, len = code.length; i < len; ++i) {\n      lookup$1[i] = code[i];\n      revLookup$1[code.charCodeAt(i)] = i;\n    }\n\n    revLookup$1['-'.charCodeAt(0)] = 62;\n    revLookup$1['_'.charCodeAt(0)] = 63;\n  }\n\n  function toByteArray$1 (b64) {\n    if (!inited$1) {\n      init$1();\n    }\n    var i, j, l, tmp, placeHolders, arr;\n    var len = b64.length;\n\n    if (len % 4 > 0) {\n      throw new Error('Invalid string. Length must be a multiple of 4')\n    }\n\n    // the number of equal signs (place holders)\n    // if there are two placeholders, than the two characters before it\n    // represent one byte\n    // if there is only one, then the three characters before it represent 2 bytes\n    // this is just a cheap hack to not do indexOf twice\n    placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n    // base64 is 4/3 + up to two characters of the original data\n    arr = new Arr$1(len * 3 / 4 - placeHolders);\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    l = placeHolders > 0 ? len - 4 : len;\n\n    var L = 0;\n\n    for (i = 0, j = 0; i < l; i += 4, j += 3) {\n      tmp = (revLookup$1[b64.charCodeAt(i)] << 18) | (revLookup$1[b64.charCodeAt(i + 1)] << 12) | (revLookup$1[b64.charCodeAt(i + 2)] << 6) | revLookup$1[b64.charCodeAt(i + 3)];\n      arr[L++] = (tmp >> 16) & 0xFF;\n      arr[L++] = (tmp >> 8) & 0xFF;\n      arr[L++] = tmp & 0xFF;\n    }\n\n    if (placeHolders === 2) {\n      tmp = (revLookup$1[b64.charCodeAt(i)] << 2) | (revLookup$1[b64.charCodeAt(i + 1)] >> 4);\n      arr[L++] = tmp & 0xFF;\n    } else if (placeHolders === 1) {\n      tmp = (revLookup$1[b64.charCodeAt(i)] << 10) | (revLookup$1[b64.charCodeAt(i + 1)] << 4) | (revLookup$1[b64.charCodeAt(i + 2)] >> 2);\n      arr[L++] = (tmp >> 8) & 0xFF;\n      arr[L++] = tmp & 0xFF;\n    }\n\n    return arr\n  }\n\n  function tripletToBase64$1 (num) {\n    return lookup$1[num >> 18 & 0x3F] + lookup$1[num >> 12 & 0x3F] + lookup$1[num >> 6 & 0x3F] + lookup$1[num & 0x3F]\n  }\n\n  function encodeChunk$1 (uint8, start, end) {\n    var tmp;\n    var output = [];\n    for (var i = start; i < end; i += 3) {\n      tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n      output.push(tripletToBase64$1(tmp));\n    }\n    return output.join('')\n  }\n\n  function fromByteArray$1 (uint8) {\n    if (!inited$1) {\n      init$1();\n    }\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n    var output = '';\n    var parts = [];\n    var maxChunkLength = 16383; // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n      parts.push(encodeChunk$1(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n      tmp = uint8[len - 1];\n      output += lookup$1[tmp >> 2];\n      output += lookup$1[(tmp << 4) & 0x3F];\n      output += '==';\n    } else if (extraBytes === 2) {\n      tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n      output += lookup$1[tmp >> 10];\n      output += lookup$1[(tmp >> 4) & 0x3F];\n      output += lookup$1[(tmp << 2) & 0x3F];\n      output += '=';\n    }\n\n    parts.push(output);\n\n    return parts.join('')\n  }\n\n  function read$1 (buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? (nBytes - 1) : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n\n    i += d;\n\n    e = s & ((1 << (-nBits)) - 1);\n    s >>= (-nBits);\n    nBits += eLen;\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    m = e & ((1 << (-nBits)) - 1);\n    e >>= (-nBits);\n    nBits += mLen;\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    if (e === 0) {\n      e = 1 - eBias;\n    } else if (e === eMax) {\n      return m ? NaN : ((s ? -1 : 1) * Infinity)\n    } else {\n      m = m + Math.pow(2, mLen);\n      e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n  }\n\n  function write$1 (buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n    var i = isLE ? 0 : (nBytes - 1);\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n    value = Math.abs(value);\n\n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0;\n      e = eMax;\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2);\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--;\n        c *= 2;\n      }\n      if (e + eBias >= 1) {\n        value += rt / c;\n      } else {\n        value += rt * Math.pow(2, 1 - eBias);\n      }\n      if (value * c >= 2) {\n        e++;\n        c /= 2;\n      }\n\n      if (e + eBias >= eMax) {\n        m = 0;\n        e = eMax;\n      } else if (e + eBias >= 1) {\n        m = (value * c - 1) * Math.pow(2, mLen);\n        e = e + eBias;\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n        e = 0;\n      }\n    }\n\n    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n    e = (e << mLen) | m;\n    eLen += mLen;\n    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n    buffer[offset + i - d] |= s * 128;\n  }\n\n  var toString$2 = {}.toString;\n\n  var isArray$2 = Array.isArray || function (arr) {\n    return toString$2.call(arr) == '[object Array]';\n  };\n\n  var INSPECT_MAX_BYTES$1 = 50;\n\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Use Object implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * Due to various browser bugs, sometimes the Object implementation will be used even\n   * when the browser supports typed arrays.\n   *\n   * Note:\n   *\n   *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n   *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n   *\n   *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n   *\n   *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n   *     incorrect length in some situations.\n\n   * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n   * get the Object implementation, which is slower but behaves correctly.\n   */\n  Buffer$1.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n    ? global$1.TYPED_ARRAY_SUPPORT\n    : true;\n\n  function kMaxLength$1 () {\n    return Buffer$1.TYPED_ARRAY_SUPPORT\n      ? 0x7fffffff\n      : 0x3fffffff\n  }\n\n  function createBuffer$1 (that, length) {\n    if (kMaxLength$1() < length) {\n      throw new RangeError('Invalid typed array length')\n    }\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      // Return an augmented `Uint8Array` instance, for best performance\n      that = new Uint8Array(length);\n      that.__proto__ = Buffer$1.prototype;\n    } else {\n      // Fallback: Return an object instance of the Buffer class\n      if (that === null) {\n        that = new Buffer$1(length);\n      }\n      that.length = length;\n    }\n\n    return that\n  }\n\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n  function Buffer$1 (arg, encodingOrOffset, length) {\n    if (!Buffer$1.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer$1)) {\n      return new Buffer$1(arg, encodingOrOffset, length)\n    }\n\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new Error(\n          'If encoding is specified then the first argument must be a string'\n        )\n      }\n      return allocUnsafe$1(this, arg)\n    }\n    return from$1(this, arg, encodingOrOffset, length)\n  }\n\n  Buffer$1.poolSize = 8192; // not used by this implementation\n\n  // TODO: Legacy, not needed anymore. Remove in next major version.\n  Buffer$1._augment = function (arr) {\n    arr.__proto__ = Buffer$1.prototype;\n    return arr\n  };\n\n  function from$1 (that, value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('\"value\" argument must not be a number')\n    }\n\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n      return fromArrayBuffer$1(that, value, encodingOrOffset, length)\n    }\n\n    if (typeof value === 'string') {\n      return fromString$1(that, value, encodingOrOffset)\n    }\n\n    return fromObject$1(that, value)\n  }\n\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n  Buffer$1.from = function (value, encodingOrOffset, length) {\n    return from$1(null, value, encodingOrOffset, length)\n  };\n\n  if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n    Buffer$1.prototype.__proto__ = Uint8Array.prototype;\n    Buffer$1.__proto__ = Uint8Array;\n  }\n\n  function assertSize$1 (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be a number')\n    } else if (size < 0) {\n      throw new RangeError('\"size\" argument must not be negative')\n    }\n  }\n\n  function alloc$1 (that, size, fill, encoding) {\n    assertSize$1(size);\n    if (size <= 0) {\n      return createBuffer$1(that, size)\n    }\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpretted as a start offset.\n      return typeof encoding === 'string'\n        ? createBuffer$1(that, size).fill(fill, encoding)\n        : createBuffer$1(that, size).fill(fill)\n    }\n    return createBuffer$1(that, size)\n  }\n\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n  Buffer$1.alloc = function (size, fill, encoding) {\n    return alloc$1(null, size, fill, encoding)\n  };\n\n  function allocUnsafe$1 (that, size) {\n    assertSize$1(size);\n    that = createBuffer$1(that, size < 0 ? 0 : checked$1(size) | 0);\n    if (!Buffer$1.TYPED_ARRAY_SUPPORT) {\n      for (var i = 0; i < size; ++i) {\n        that[i] = 0;\n      }\n    }\n    return that\n  }\n\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n  Buffer$1.allocUnsafe = function (size) {\n    return allocUnsafe$1(null, size)\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n  Buffer$1.allocUnsafeSlow = function (size) {\n    return allocUnsafe$1(null, size)\n  };\n\n  function fromString$1 (that, string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer$1.isEncoding(encoding)) {\n      throw new TypeError('\"encoding\" must be a valid string encoding')\n    }\n\n    var length = byteLength$1(string, encoding) | 0;\n    that = createBuffer$1(that, length);\n\n    var actual = that.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      that = that.slice(0, actual);\n    }\n\n    return that\n  }\n\n  function fromArrayLike$1 (that, array) {\n    var length = array.length < 0 ? 0 : checked$1(array.length) | 0;\n    that = createBuffer$1(that, length);\n    for (var i = 0; i < length; i += 1) {\n      that[i] = array[i] & 255;\n    }\n    return that\n  }\n\n  function fromArrayBuffer$1 (that, array, byteOffset, length) {\n    array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\\'offset\\' is out of bounds')\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\\'length\\' is out of bounds')\n    }\n\n    if (byteOffset === undefined && length === undefined) {\n      array = new Uint8Array(array);\n    } else if (length === undefined) {\n      array = new Uint8Array(array, byteOffset);\n    } else {\n      array = new Uint8Array(array, byteOffset, length);\n    }\n\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      // Return an augmented `Uint8Array` instance, for best performance\n      that = array;\n      that.__proto__ = Buffer$1.prototype;\n    } else {\n      // Fallback: Return an object instance of the Buffer class\n      that = fromArrayLike$1(that, array);\n    }\n    return that\n  }\n\n  function fromObject$1 (that, obj) {\n    if (internalIsBuffer$1(obj)) {\n      var len = checked$1(obj.length) | 0;\n      that = createBuffer$1(that, len);\n\n      if (that.length === 0) {\n        return that\n      }\n\n      obj.copy(that, 0, 0, len);\n      return that\n    }\n\n    if (obj) {\n      if ((typeof ArrayBuffer !== 'undefined' &&\n          obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n        if (typeof obj.length !== 'number' || isnan$1(obj.length)) {\n          return createBuffer$1(that, 0)\n        }\n        return fromArrayLike$1(that, obj)\n      }\n\n      if (obj.type === 'Buffer' && isArray$2(obj.data)) {\n        return fromArrayLike$1(that, obj.data)\n      }\n    }\n\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n  }\n\n  function checked$1 (length) {\n    // Note: cannot use `length < kMaxLength()` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= kMaxLength$1()) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                           'size: 0x' + kMaxLength$1().toString(16) + ' bytes')\n    }\n    return length | 0\n  }\n  Buffer$1.isBuffer = isBuffer$2;\n  function internalIsBuffer$1 (b) {\n    return !!(b != null && b._isBuffer)\n  }\n\n  Buffer$1.compare = function compare (a, b) {\n    if (!internalIsBuffer$1(a) || !internalIsBuffer$1(b)) {\n      throw new TypeError('Arguments must be Buffers')\n    }\n\n    if (a === b) return 0\n\n    var x = a.length;\n    var y = b.length;\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break\n      }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n  };\n\n  Buffer$1.isEncoding = function isEncoding (encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true\n      default:\n        return false\n    }\n  };\n\n  Buffer$1.concat = function concat (list, length) {\n    if (!isArray$2(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n\n    if (list.length === 0) {\n      return Buffer$1.alloc(0)\n    }\n\n    var i;\n    if (length === undefined) {\n      length = 0;\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer$1.allocUnsafe(length);\n    var pos = 0;\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n      if (!internalIsBuffer$1(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers')\n      }\n      buf.copy(buffer, pos);\n      pos += buf.length;\n    }\n    return buffer\n  };\n\n  function byteLength$1 (string, encoding) {\n    if (internalIsBuffer$1(string)) {\n      return string.length\n    }\n    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n      return string.byteLength\n    }\n    if (typeof string !== 'string') {\n      string = '' + string;\n    }\n\n    var len = string.length;\n    if (len === 0) return 0\n\n    // Use a for loop to avoid recursion\n    var loweredCase = false;\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len\n        case 'utf8':\n        case 'utf-8':\n        case undefined:\n          return utf8ToBytes$1(string).length\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2\n        case 'hex':\n          return len >>> 1\n        case 'base64':\n          return base64ToBytes$1(string).length\n        default:\n          if (loweredCase) return utf8ToBytes$1(string).length // assume utf8\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n  Buffer$1.byteLength = byteLength$1;\n\n  function slowToString$1 (encoding, start, end) {\n    var loweredCase = false;\n\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) {\n      start = 0;\n    }\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) {\n      return ''\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return ''\n    }\n\n    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return ''\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice$1(this, start, end)\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice$1(this, start, end)\n\n        case 'ascii':\n          return asciiSlice$1(this, start, end)\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice$1(this, start, end)\n\n        case 'base64':\n          return base64Slice$1(this, start, end)\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice$1(this, start, end)\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n  // Buffer instances.\n  Buffer$1.prototype._isBuffer = true;\n\n  function swap$1 (b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer$1.prototype.swap16 = function swap16 () {\n    var len = this.length;\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits')\n    }\n    for (var i = 0; i < len; i += 2) {\n      swap$1(this, i, i + 1);\n    }\n    return this\n  };\n\n  Buffer$1.prototype.swap32 = function swap32 () {\n    var len = this.length;\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits')\n    }\n    for (var i = 0; i < len; i += 4) {\n      swap$1(this, i, i + 3);\n      swap$1(this, i + 1, i + 2);\n    }\n    return this\n  };\n\n  Buffer$1.prototype.swap64 = function swap64 () {\n    var len = this.length;\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits')\n    }\n    for (var i = 0; i < len; i += 8) {\n      swap$1(this, i, i + 7);\n      swap$1(this, i + 1, i + 6);\n      swap$1(this, i + 2, i + 5);\n      swap$1(this, i + 3, i + 4);\n    }\n    return this\n  };\n\n  Buffer$1.prototype.toString = function toString () {\n    var length = this.length | 0;\n    if (length === 0) return ''\n    if (arguments.length === 0) return utf8Slice$1(this, 0, length)\n    return slowToString$1.apply(this, arguments)\n  };\n\n  Buffer$1.prototype.equals = function equals (b) {\n    if (!internalIsBuffer$1(b)) throw new TypeError('Argument must be a Buffer')\n    if (this === b) return true\n    return Buffer$1.compare(this, b) === 0\n  };\n\n  Buffer$1.prototype.inspect = function inspect () {\n    var str = '';\n    var max = INSPECT_MAX_BYTES$1;\n    if (this.length > 0) {\n      str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n      if (this.length > max) str += ' ... ';\n    }\n    return '<Buffer ' + str + '>'\n  };\n\n  Buffer$1.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n    if (!internalIsBuffer$1(target)) {\n      throw new TypeError('Argument must be a Buffer')\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index')\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0\n    }\n    if (thisStart >= thisEnd) {\n      return -1\n    }\n    if (start >= end) {\n      return 1\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n\n    if (this === target) return 0\n\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break\n      }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n  };\n\n  // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n  function bidirectionalIndexOf$1 (buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1\n\n    // Normalize byteOffset\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n    byteOffset = +byteOffset;  // Coerce to Number.\n    if (isNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : (buffer.length - 1);\n    }\n\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1\n      else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;\n      else return -1\n    }\n\n    // Normalize val\n    if (typeof val === 'string') {\n      val = Buffer$1.from(val, encoding);\n    }\n\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if (internalIsBuffer$1(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1\n      }\n      return arrayIndexOf$1(buffer, val, byteOffset, encoding, dir)\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n      if (Buffer$1.TYPED_ARRAY_SUPPORT &&\n          typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n        }\n      }\n      return arrayIndexOf$1(buffer, [ val ], byteOffset, encoding, dir)\n    }\n\n    throw new TypeError('val must be string, number or Buffer')\n  }\n\n  function arrayIndexOf$1 (arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n      if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n          encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1\n        }\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read (buf, i) {\n      if (indexSize === 1) {\n        return buf[i]\n      } else {\n        return buf.readUInt16BE(i * indexSize)\n      }\n    }\n\n    var i;\n    if (dir) {\n      var foundIndex = -1;\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break\n          }\n        }\n        if (found) return i\n      }\n    }\n\n    return -1\n  }\n\n  Buffer$1.prototype.includes = function includes (val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1\n  };\n\n  Buffer$1.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n    return bidirectionalIndexOf$1(this, val, byteOffset, encoding, true)\n  };\n\n  Buffer$1.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n    return bidirectionalIndexOf$1(this, val, byteOffset, encoding, false)\n  };\n\n  function hexWrite$1 (buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    // must be an even number of digits\n    var strLen = string.length;\n    if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n    for (var i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (isNaN(parsed)) return i\n      buf[offset + i] = parsed;\n    }\n    return i\n  }\n\n  function utf8Write$1 (buf, string, offset, length) {\n    return blitBuffer$1(utf8ToBytes$1(string, buf.length - offset), buf, offset, length)\n  }\n\n  function asciiWrite$1 (buf, string, offset, length) {\n    return blitBuffer$1(asciiToBytes$1(string), buf, offset, length)\n  }\n\n  function latin1Write$1 (buf, string, offset, length) {\n    return asciiWrite$1(buf, string, offset, length)\n  }\n\n  function base64Write$1 (buf, string, offset, length) {\n    return blitBuffer$1(base64ToBytes$1(string), buf, offset, length)\n  }\n\n  function ucs2Write$1 (buf, string, offset, length) {\n    return blitBuffer$1(utf16leToBytes$1(string, buf.length - offset), buf, offset, length)\n  }\n\n  Buffer$1.prototype.write = function write (string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset | 0;\n      if (isFinite(length)) {\n        length = length | 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    // legacy write(string, encoding, offset, length) - remove in v0.13\n    } else {\n      throw new Error(\n        'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n      )\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds')\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    var loweredCase = false;\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite$1(this, string, offset, length)\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write$1(this, string, offset, length)\n\n        case 'ascii':\n          return asciiWrite$1(this, string, offset, length)\n\n        case 'latin1':\n        case 'binary':\n          return latin1Write$1(this, string, offset, length)\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write$1(this, string, offset, length)\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write$1(this, string, offset, length)\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer$1.prototype.toJSON = function toJSON () {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    }\n  };\n\n  function base64Slice$1 (buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return fromByteArray$1(buf)\n    } else {\n      return fromByteArray$1(buf.slice(start, end))\n    }\n  }\n\n  function utf8Slice$1 (buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n\n    var i = start;\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = (firstByte > 0xEF) ? 4\n        : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n        : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n            break\n          case 2:\n            secondByte = buf[i + 1];\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n            break\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n            break\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray$1(res)\n  }\n\n  // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n  var MAX_ARGUMENTS_LENGTH$1 = 0x1000;\n\n  function decodeCodePointsArray$1 (codePoints) {\n    var len = codePoints.length;\n    if (len <= MAX_ARGUMENTS_LENGTH$1) {\n      return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    }\n\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = '';\n    var i = 0;\n    while (i < len) {\n      res += String.fromCharCode.apply(\n        String,\n        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH$1)\n      );\n    }\n    return res\n  }\n\n  function asciiSlice$1 (buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 0x7F);\n    }\n    return ret\n  }\n\n  function latin1Slice$1 (buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i]);\n    }\n    return ret\n  }\n\n  function hexSlice$1 (buf, start, end) {\n    var len = buf.length;\n\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n\n    var out = '';\n    for (var i = start; i < end; ++i) {\n      out += toHex$1(buf[i]);\n    }\n    return out\n  }\n\n  function utf16leSlice$1 (buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = '';\n    for (var i = 0; i < bytes.length; i += 2) {\n      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    }\n    return res\n  }\n\n  Buffer$1.prototype.slice = function slice (start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n\n    var newBuf;\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      newBuf = this.subarray(start, end);\n      newBuf.__proto__ = Buffer$1.prototype;\n    } else {\n      var sliceLen = end - start;\n      newBuf = new Buffer$1(sliceLen, undefined);\n      for (var i = 0; i < sliceLen; ++i) {\n        newBuf[i] = this[i + start];\n      }\n    }\n\n    return newBuf\n  };\n\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n  function checkOffset$1 (offset, ext, length) {\n    if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n  }\n\n  Buffer$1.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) checkOffset$1(offset, byteLength, this.length);\n\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val\n  };\n\n  Buffer$1.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) {\n      checkOffset$1(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val\n  };\n\n  Buffer$1.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 1, this.length);\n    return this[offset]\n  };\n\n  Buffer$1.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 2, this.length);\n    return this[offset] | (this[offset + 1] << 8)\n  };\n\n  Buffer$1.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 2, this.length);\n    return (this[offset] << 8) | this[offset + 1]\n  };\n\n  Buffer$1.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 4, this.length);\n\n    return ((this[offset]) |\n        (this[offset + 1] << 8) |\n        (this[offset + 2] << 16)) +\n        (this[offset + 3] * 0x1000000)\n  };\n\n  Buffer$1.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 4, this.length);\n\n    return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n  };\n\n  Buffer$1.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) checkOffset$1(offset, byteLength, this.length);\n\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n    mul *= 0x80;\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n    return val\n  };\n\n  Buffer$1.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) checkOffset$1(offset, byteLength, this.length);\n\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n    mul *= 0x80;\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n    return val\n  };\n\n  Buffer$1.prototype.readInt8 = function readInt8 (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return (this[offset])\n    return ((0xff - this[offset] + 1) * -1)\n  };\n\n  Buffer$1.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 2, this.length);\n    var val = this[offset] | (this[offset + 1] << 8);\n    return (val & 0x8000) ? val | 0xFFFF0000 : val\n  };\n\n  Buffer$1.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 2, this.length);\n    var val = this[offset + 1] | (this[offset] << 8);\n    return (val & 0x8000) ? val | 0xFFFF0000 : val\n  };\n\n  Buffer$1.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 4, this.length);\n\n    return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n  };\n\n  Buffer$1.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 4, this.length);\n\n    return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n  };\n\n  Buffer$1.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 4, this.length);\n    return read$1(this, offset, true, 23, 4)\n  };\n\n  Buffer$1.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 4, this.length);\n    return read$1(this, offset, false, 23, 4)\n  };\n\n  Buffer$1.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 8, this.length);\n    return read$1(this, offset, true, 52, 8)\n  };\n\n  Buffer$1.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n    if (!noAssert) checkOffset$1(offset, 8, this.length);\n    return read$1(this, offset, false, 52, 8)\n  };\n\n  function checkInt$1 (buf, value, offset, ext, max, min) {\n    if (!internalIsBuffer$1(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  }\n\n  Buffer$1.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt$1(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = (value / mul) & 0xFF;\n    }\n\n    return offset + byteLength\n  };\n\n  Buffer$1.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt$1(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = (value / mul) & 0xFF;\n    }\n\n    return offset + byteLength\n  };\n\n  Buffer$1.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 1, 0xff, 0);\n    if (!Buffer$1.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n    this[offset] = (value & 0xff);\n    return offset + 1\n  };\n\n  function objectWriteUInt16$1 (buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffff + value + 1;\n    for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n      buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n        (littleEndian ? i : 1 - i) * 8;\n    }\n  }\n\n  Buffer$1.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 2, 0xffff, 0);\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value & 0xff);\n      this[offset + 1] = (value >>> 8);\n    } else {\n      objectWriteUInt16$1(this, value, offset, true);\n    }\n    return offset + 2\n  };\n\n  Buffer$1.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 2, 0xffff, 0);\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value >>> 8);\n      this[offset + 1] = (value & 0xff);\n    } else {\n      objectWriteUInt16$1(this, value, offset, false);\n    }\n    return offset + 2\n  };\n\n  function objectWriteUInt32$1 (buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffffffff + value + 1;\n    for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n      buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n    }\n  }\n\n  Buffer$1.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 4, 0xffffffff, 0);\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      this[offset + 3] = (value >>> 24);\n      this[offset + 2] = (value >>> 16);\n      this[offset + 1] = (value >>> 8);\n      this[offset] = (value & 0xff);\n    } else {\n      objectWriteUInt32$1(this, value, offset, true);\n    }\n    return offset + 4\n  };\n\n  Buffer$1.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 4, 0xffffffff, 0);\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value >>> 24);\n      this[offset + 1] = (value >>> 16);\n      this[offset + 2] = (value >>> 8);\n      this[offset + 3] = (value & 0xff);\n    } else {\n      objectWriteUInt32$1(this, value, offset, false);\n    }\n    return offset + 4\n  };\n\n  Buffer$1.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n\n      checkInt$1(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength\n  };\n\n  Buffer$1.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n\n      checkInt$1(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength\n  };\n\n  Buffer$1.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 1, 0x7f, -0x80);\n    if (!Buffer$1.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = (value & 0xff);\n    return offset + 1\n  };\n\n  Buffer$1.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 2, 0x7fff, -0x8000);\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value & 0xff);\n      this[offset + 1] = (value >>> 8);\n    } else {\n      objectWriteUInt16$1(this, value, offset, true);\n    }\n    return offset + 2\n  };\n\n  Buffer$1.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 2, 0x7fff, -0x8000);\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value >>> 8);\n      this[offset + 1] = (value & 0xff);\n    } else {\n      objectWriteUInt16$1(this, value, offset, false);\n    }\n    return offset + 2\n  };\n\n  Buffer$1.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value & 0xff);\n      this[offset + 1] = (value >>> 8);\n      this[offset + 2] = (value >>> 16);\n      this[offset + 3] = (value >>> 24);\n    } else {\n      objectWriteUInt32$1(this, value, offset, true);\n    }\n    return offset + 4\n  };\n\n  Buffer$1.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt$1(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    if (Buffer$1.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value >>> 24);\n      this[offset + 1] = (value >>> 16);\n      this[offset + 2] = (value >>> 8);\n      this[offset + 3] = (value & 0xff);\n    } else {\n      objectWriteUInt32$1(this, value, offset, false);\n    }\n    return offset + 4\n  };\n\n  function checkIEEE754$1 (buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n    if (offset < 0) throw new RangeError('Index out of range')\n  }\n\n  function writeFloat$1 (buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n      checkIEEE754$1(buf, value, offset, 4);\n    }\n    write$1(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4\n  }\n\n  Buffer$1.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n    return writeFloat$1(this, value, offset, true, noAssert)\n  };\n\n  Buffer$1.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n    return writeFloat$1(this, value, offset, false, noAssert)\n  };\n\n  function writeDouble$1 (buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n      checkIEEE754$1(buf, value, offset, 8);\n    }\n    write$1(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8\n  }\n\n  Buffer$1.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n    return writeDouble$1(this, value, offset, true, noAssert)\n  };\n\n  Buffer$1.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n    return writeDouble$1(this, value, offset, false, noAssert)\n  };\n\n  // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n  Buffer$1.prototype.copy = function copy (target, targetStart, start, end) {\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n\n    // Copy 0 bytes; we're done\n    if (end === start) return 0\n    if (target.length === 0 || this.length === 0) return 0\n\n    // Fatal error conditions\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds')\n    }\n    if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n    if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n    var i;\n\n    if (this === target && start < targetStart && targetStart < end) {\n      // descending copy from end\n      for (i = len - 1; i >= 0; --i) {\n        target[i + targetStart] = this[i + start];\n      }\n    } else if (len < 1000 || !Buffer$1.TYPED_ARRAY_SUPPORT) {\n      // ascending copy from start\n      for (i = 0; i < len; ++i) {\n        target[i + targetStart] = this[i + start];\n      }\n    } else {\n      Uint8Array.prototype.set.call(\n        target,\n        this.subarray(start, start + len),\n        targetStart\n      );\n    }\n\n    return len\n  };\n\n  // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n  Buffer$1.prototype.fill = function fill (val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n      if (val.length === 1) {\n        var code = val.charCodeAt(0);\n        if (code < 256) {\n          val = code;\n        }\n      }\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string')\n      }\n      if (typeof encoding === 'string' && !Buffer$1.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding)\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    }\n\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index')\n    }\n\n    if (end <= start) {\n      return this\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n\n    if (!val) val = 0;\n\n    var i;\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = internalIsBuffer$1(val)\n        ? val\n        : utf8ToBytes$1(new Buffer$1(val, encoding).toString());\n      var len = bytes.length;\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len];\n      }\n    }\n\n    return this\n  };\n\n  // HELPER FUNCTIONS\n  // ================\n\n  var INVALID_BASE64_RE$1 = /[^+\\/0-9A-Za-z-_]/g;\n\n  function base64clean$1 (str) {\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = stringtrim$1(str).replace(INVALID_BASE64_RE$1, '');\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return ''\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n    return str\n  }\n\n  function stringtrim$1 (str) {\n    if (str.trim) return str.trim()\n    return str.replace(/^\\s+|\\s+$/g, '')\n  }\n\n  function toHex$1 (n) {\n    if (n < 16) return '0' + n.toString(16)\n    return n.toString(16)\n  }\n\n  function utf8ToBytes$1 (string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i);\n\n      // is surrogate component\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue\n          }\n\n          // valid lead\n          leadSurrogate = codePoint;\n\n          continue\n        }\n\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue\n        }\n\n        // valid surrogate pair\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null;\n\n      // encode utf8\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break\n        bytes.push(\n          codePoint >> 0x6 | 0xC0,\n          codePoint & 0x3F | 0x80\n        );\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break\n        bytes.push(\n          codePoint >> 0xC | 0xE0,\n          codePoint >> 0x6 & 0x3F | 0x80,\n          codePoint & 0x3F | 0x80\n        );\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break\n        bytes.push(\n          codePoint >> 0x12 | 0xF0,\n          codePoint >> 0xC & 0x3F | 0x80,\n          codePoint >> 0x6 & 0x3F | 0x80,\n          codePoint & 0x3F | 0x80\n        );\n      } else {\n        throw new Error('Invalid code point')\n      }\n    }\n\n    return bytes\n  }\n\n  function asciiToBytes$1 (str) {\n    var byteArray = [];\n    for (var i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 0xFF);\n    }\n    return byteArray\n  }\n\n  function utf16leToBytes$1 (str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n    for (var i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break\n\n      c = str.charCodeAt(i);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray\n  }\n\n\n  function base64ToBytes$1 (str) {\n    return toByteArray$1(base64clean$1(str))\n  }\n\n  function blitBuffer$1 (src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n      if ((i + offset >= dst.length) || (i >= src.length)) break\n      dst[i + offset] = src[i];\n    }\n    return i\n  }\n\n  function isnan$1 (val) {\n    return val !== val // eslint-disable-line no-self-compare\n  }\n\n\n  // the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n  // The _isBuffer check is for Safari 5-7 support, because it's missing\n  // Object.prototype.constructor. Remove this eventually\n  function isBuffer$2(obj) {\n    return obj != null && (!!obj._isBuffer || isFastBuffer$1(obj) || isSlowBuffer$1(obj))\n  }\n\n  function isFastBuffer$1 (obj) {\n    return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n  }\n\n  // For Node v0.10 support. Remove this eventually.\n  function isSlowBuffer$1 (obj) {\n    return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer$1(obj.slice(0, 0))\n  }\n\n  // shim for using process in browser\n  // based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\n  function defaultSetTimout() {\n      throw new Error('setTimeout has not been defined');\n  }\n  function defaultClearTimeout () {\n      throw new Error('clearTimeout has not been defined');\n  }\n  var cachedSetTimeout = defaultSetTimout;\n  var cachedClearTimeout = defaultClearTimeout;\n  if (typeof global$1.setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n  }\n  if (typeof global$1.clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n  }\n\n  function runTimeout(fun) {\n      if (cachedSetTimeout === setTimeout) {\n          //normal enviroments in sane situations\n          return setTimeout(fun, 0);\n      }\n      // if setTimeout wasn't available but was latter defined\n      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n      }\n      try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedSetTimeout(fun, 0);\n      } catch(e){\n          try {\n              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n              return cachedSetTimeout.call(null, fun, 0);\n          } catch(e){\n              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n              return cachedSetTimeout.call(this, fun, 0);\n          }\n      }\n\n\n  }\n  function runClearTimeout(marker) {\n      if (cachedClearTimeout === clearTimeout) {\n          //normal enviroments in sane situations\n          return clearTimeout(marker);\n      }\n      // if clearTimeout wasn't available but was latter defined\n      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n      }\n      try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedClearTimeout(marker);\n      } catch (e){\n          try {\n              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n              return cachedClearTimeout.call(null, marker);\n          } catch (e){\n              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n              // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n              return cachedClearTimeout.call(this, marker);\n          }\n      }\n\n\n\n  }\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n      if (!draining || !currentQueue) {\n          return;\n      }\n      draining = false;\n      if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n      } else {\n          queueIndex = -1;\n      }\n      if (queue.length) {\n          drainQueue();\n      }\n  }\n\n  function drainQueue() {\n      if (draining) {\n          return;\n      }\n      var timeout = runTimeout(cleanUpNextTick);\n      draining = true;\n\n      var len = queue.length;\n      while(len) {\n          currentQueue = queue;\n          queue = [];\n          while (++queueIndex < len) {\n              if (currentQueue) {\n                  currentQueue[queueIndex].run();\n              }\n          }\n          queueIndex = -1;\n          len = queue.length;\n      }\n      currentQueue = null;\n      draining = false;\n      runClearTimeout(timeout);\n  }\n  function nextTick(fun) {\n      var args = new Array(arguments.length - 1);\n      if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n              args[i - 1] = arguments[i];\n          }\n      }\n      queue.push(new Item(fun, args));\n      if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n      }\n  }\n  // v8 likes predictible objects\n  function Item(fun, array) {\n      this.fun = fun;\n      this.array = array;\n  }\n  Item.prototype.run = function () {\n      this.fun.apply(null, this.array);\n  };\n  var title = 'browser';\n  var platform = 'browser';\n  var browser$3 = true;\n  var env = {};\n  var argv = [];\n  var version$1 = ''; // empty string to avoid regexp issues\n  var versions = {};\n  var release = {};\n  var config = {};\n\n  function noop() {}\n\n  var on = noop;\n  var addListener = noop;\n  var once = noop;\n  var off = noop;\n  var removeListener = noop;\n  var removeAllListeners = noop;\n  var emit = noop;\n\n  function binding(name) {\n      throw new Error('process.binding is not supported');\n  }\n\n  function cwd () { return '/' }\n  function chdir (dir) {\n      throw new Error('process.chdir is not supported');\n  }function umask() { return 0; }\n\n  // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\n  var performance = global$1.performance || {};\n  var performanceNow =\n    performance.now        ||\n    performance.mozNow     ||\n    performance.msNow      ||\n    performance.oNow       ||\n    performance.webkitNow  ||\n    function(){ return (new Date()).getTime() };\n\n  // generate timestamp or delta\n  // see http://nodejs.org/api/process.html#process_process_hrtime\n  function hrtime(previousTimestamp){\n    var clocktime = performanceNow.call(performance)*1e-3;\n    var seconds = Math.floor(clocktime);\n    var nanoseconds = Math.floor((clocktime%1)*1e9);\n    if (previousTimestamp) {\n      seconds = seconds - previousTimestamp[0];\n      nanoseconds = nanoseconds - previousTimestamp[1];\n      if (nanoseconds<0) {\n        seconds--;\n        nanoseconds += 1e9;\n      }\n    }\n    return [seconds,nanoseconds]\n  }\n\n  var startTime = new Date();\n  function uptime() {\n    var currentTime = new Date();\n    var dif = currentTime - startTime;\n    return dif / 1000;\n  }\n\n  var browser$1$1 = {\n    nextTick: nextTick,\n    title: title,\n    browser: browser$3,\n    env: env,\n    argv: argv,\n    version: version$1,\n    versions: versions,\n    on: on,\n    addListener: addListener,\n    once: once,\n    off: off,\n    removeListener: removeListener,\n    removeAllListeners: removeAllListeners,\n    emit: emit,\n    binding: binding,\n    cwd: cwd,\n    chdir: chdir,\n    umask: umask,\n    hrtime: hrtime,\n    platform: platform,\n    release: release,\n    config: config,\n    uptime: uptime\n  };\n\n  var process = browser$1$1;\n\n  var inherits$2;\n  if (typeof Object.create === 'function'){\n    inherits$2 = function inherits(ctor, superCtor) {\n      // implementation from standard node.js 'util' module\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    };\n  } else {\n    inherits$2 = function inherits(ctor, superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    };\n  }\n  var inherits$3 = inherits$2;\n\n  var formatRegExp = /%[sdj%]/g;\n  function format$1(f) {\n    if (!isString$1(f)) {\n      var objects = [];\n      for (var i = 0; i < arguments.length; i++) {\n        objects.push(inspect(arguments[i]));\n      }\n      return objects.join(' ');\n    }\n\n    var i = 1;\n    var args = arguments;\n    var len = args.length;\n    var str = String(f).replace(formatRegExp, function(x) {\n      if (x === '%%') return '%';\n      if (i >= len) return x;\n      switch (x) {\n        case '%s': return String(args[i++]);\n        case '%d': return Number(args[i++]);\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n        default:\n          return x;\n      }\n    });\n    for (var x = args[i]; i < len; x = args[++i]) {\n      if (isNull(x) || !isObject(x)) {\n        str += ' ' + x;\n      } else {\n        str += ' ' + inspect(x);\n      }\n    }\n    return str;\n  }\n\n  // Mark that a method should not be used.\n  // Returns a modified function which warns once by default.\n  // If --no-deprecation is set, then it is a no-op.\n  function deprecate$1(fn, msg) {\n    // Allow for deprecating things in the process of starting up.\n    if (isUndefined(global$1.process)) {\n      return function() {\n        return deprecate$1(fn, msg).apply(this, arguments);\n      };\n    }\n\n    if (process.noDeprecation === true) {\n      return fn;\n    }\n\n    var warned = false;\n    function deprecated() {\n      if (!warned) {\n        if (process.throwDeprecation) {\n          throw new Error(msg);\n        } else if (process.traceDeprecation) {\n          console.trace(msg);\n        } else {\n          console.error(msg);\n        }\n        warned = true;\n      }\n      return fn.apply(this, arguments);\n    }\n\n    return deprecated;\n  }\n\n  var debugs = {};\n  var debugEnviron;\n  function debuglog(set) {\n    if (isUndefined(debugEnviron))\n      debugEnviron = process.env.NODE_DEBUG || '';\n    set = set.toUpperCase();\n    if (!debugs[set]) {\n      if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n        var pid = 0;\n        debugs[set] = function() {\n          var msg = format$1.apply(null, arguments);\n          console.error('%s %d: %s', set, pid, msg);\n        };\n      } else {\n        debugs[set] = function() {};\n      }\n    }\n    return debugs[set];\n  }\n\n  /**\n   * Echos the value of a value. Trys to print the value out\n   * in the best way possible given the different types.\n   *\n   * @param {Object} obj The object to print out.\n   * @param {Object} opts Optional options object that alters the output.\n   */\n  /* legacy: obj, showHidden, depth, colors*/\n  function inspect(obj, opts) {\n    // default options\n    var ctx = {\n      seen: [],\n      stylize: stylizeNoColor\n    };\n    // legacy...\n    if (arguments.length >= 3) ctx.depth = arguments[2];\n    if (arguments.length >= 4) ctx.colors = arguments[3];\n    if (isBoolean(opts)) {\n      // legacy...\n      ctx.showHidden = opts;\n    } else if (opts) {\n      // got an \"options\" object\n      _extend(ctx, opts);\n    }\n    // set default options\n    if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n    if (isUndefined(ctx.depth)) ctx.depth = 2;\n    if (isUndefined(ctx.colors)) ctx.colors = false;\n    if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n    if (ctx.colors) ctx.stylize = stylizeWithColor;\n    return formatValue(ctx, obj, ctx.depth);\n  }\n\n  // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n  inspect.colors = {\n    'bold' : [1, 22],\n    'italic' : [3, 23],\n    'underline' : [4, 24],\n    'inverse' : [7, 27],\n    'white' : [37, 39],\n    'grey' : [90, 39],\n    'black' : [30, 39],\n    'blue' : [34, 39],\n    'cyan' : [36, 39],\n    'green' : [32, 39],\n    'magenta' : [35, 39],\n    'red' : [31, 39],\n    'yellow' : [33, 39]\n  };\n\n  // Don't use 'blue' not visible on cmd.exe\n  inspect.styles = {\n    'special': 'cyan',\n    'number': 'yellow',\n    'boolean': 'yellow',\n    'undefined': 'grey',\n    'null': 'bold',\n    'string': 'green',\n    'date': 'magenta',\n    // \"name\": intentionally not styling\n    'regexp': 'red'\n  };\n\n\n  function stylizeWithColor(str, styleType) {\n    var style = inspect.styles[styleType];\n\n    if (style) {\n      return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n             '\\u001b[' + inspect.colors[style][1] + 'm';\n    } else {\n      return str;\n    }\n  }\n\n\n  function stylizeNoColor(str, styleType) {\n    return str;\n  }\n\n\n  function arrayToHash(array) {\n    var hash = {};\n\n    array.forEach(function(val, idx) {\n      hash[val] = true;\n    });\n\n    return hash;\n  }\n\n\n  function formatValue(ctx, value, recurseTimes) {\n    // Provide a hook for user-specified inspect functions.\n    // Check that value is an object with an inspect function on it\n    if (ctx.customInspect &&\n        value &&\n        isFunction(value.inspect) &&\n        // Filter out the util module, it's inspect function is special\n        value.inspect !== inspect &&\n        // Also filter out any prototype objects using the circular check.\n        !(value.constructor && value.constructor.prototype === value)) {\n      var ret = value.inspect(recurseTimes, ctx);\n      if (!isString$1(ret)) {\n        ret = formatValue(ctx, ret, recurseTimes);\n      }\n      return ret;\n    }\n\n    // Primitive types cannot have properties\n    var primitive = formatPrimitive(ctx, value);\n    if (primitive) {\n      return primitive;\n    }\n\n    // Look up the keys of the object.\n    var keys = Object.keys(value);\n    var visibleKeys = arrayToHash(keys);\n\n    if (ctx.showHidden) {\n      keys = Object.getOwnPropertyNames(value);\n    }\n\n    // IE doesn't make error fields non-enumerable\n    // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n    if (isError$1(value)\n        && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n      return formatError(value);\n    }\n\n    // Some type of object without properties can be shortcutted.\n    if (keys.length === 0) {\n      if (isFunction(value)) {\n        var name = value.name ? ': ' + value.name : '';\n        return ctx.stylize('[Function' + name + ']', 'special');\n      }\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      }\n      if (isDate(value)) {\n        return ctx.stylize(Date.prototype.toString.call(value), 'date');\n      }\n      if (isError$1(value)) {\n        return formatError(value);\n      }\n    }\n\n    var base = '', array = false, braces = ['{', '}'];\n\n    // Make Array say that they are Array\n    if (isArray$1(value)) {\n      array = true;\n      braces = ['[', ']'];\n    }\n\n    // Make functions say that they are functions\n    if (isFunction(value)) {\n      var n = value.name ? ': ' + value.name : '';\n      base = ' [Function' + n + ']';\n    }\n\n    // Make RegExps say that they are RegExps\n    if (isRegExp(value)) {\n      base = ' ' + RegExp.prototype.toString.call(value);\n    }\n\n    // Make dates with properties first say the date\n    if (isDate(value)) {\n      base = ' ' + Date.prototype.toUTCString.call(value);\n    }\n\n    // Make error with message first say the error\n    if (isError$1(value)) {\n      base = ' ' + formatError(value);\n    }\n\n    if (keys.length === 0 && (!array || value.length == 0)) {\n      return braces[0] + base + braces[1];\n    }\n\n    if (recurseTimes < 0) {\n      if (isRegExp(value)) {\n        return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n      } else {\n        return ctx.stylize('[Object]', 'special');\n      }\n    }\n\n    ctx.seen.push(value);\n\n    var output;\n    if (array) {\n      output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n    } else {\n      output = keys.map(function(key) {\n        return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n      });\n    }\n\n    ctx.seen.pop();\n\n    return reduceToSingleString(output, base, braces);\n  }\n\n\n  function formatPrimitive(ctx, value) {\n    if (isUndefined(value))\n      return ctx.stylize('undefined', 'undefined');\n    if (isString$1(value)) {\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n    }\n    if (isNumber(value))\n      return ctx.stylize('' + value, 'number');\n    if (isBoolean(value))\n      return ctx.stylize('' + value, 'boolean');\n    // For some reason typeof null is \"object\", so special case here.\n    if (isNull(value))\n      return ctx.stylize('null', 'null');\n  }\n\n\n  function formatError(value) {\n    return '[' + Error.prototype.toString.call(value) + ']';\n  }\n\n\n  function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n    var output = [];\n    for (var i = 0, l = value.length; i < l; ++i) {\n      if (hasOwnProperty(value, String(i))) {\n        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n            String(i), true));\n      } else {\n        output.push('');\n      }\n    }\n    keys.forEach(function(key) {\n      if (!key.match(/^\\d+$/)) {\n        output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n            key, true));\n      }\n    });\n    return output;\n  }\n\n\n  function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n    var name, str, desc;\n    desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n    if (desc.get) {\n      if (desc.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (desc.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n    if (!hasOwnProperty(visibleKeys, key)) {\n      name = '[' + key + ']';\n    }\n    if (!str) {\n      if (ctx.seen.indexOf(desc.value) < 0) {\n        if (isNull(recurseTimes)) {\n          str = formatValue(ctx, desc.value, null);\n        } else {\n          str = formatValue(ctx, desc.value, recurseTimes - 1);\n        }\n        if (str.indexOf('\\n') > -1) {\n          if (array) {\n            str = str.split('\\n').map(function(line) {\n              return '  ' + line;\n            }).join('\\n').substr(2);\n          } else {\n            str = '\\n' + str.split('\\n').map(function(line) {\n              return '   ' + line;\n            }).join('\\n');\n          }\n        }\n      } else {\n        str = ctx.stylize('[Circular]', 'special');\n      }\n    }\n    if (isUndefined(name)) {\n      if (array && key.match(/^\\d+$/)) {\n        return str;\n      }\n      name = JSON.stringify('' + key);\n      if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n        name = name.substr(1, name.length - 2);\n        name = ctx.stylize(name, 'name');\n      } else {\n        name = name.replace(/'/g, \"\\\\'\")\n                   .replace(/\\\\\"/g, '\"')\n                   .replace(/(^\"|\"$)/g, \"'\");\n        name = ctx.stylize(name, 'string');\n      }\n    }\n\n    return name + ': ' + str;\n  }\n\n\n  function reduceToSingleString(output, base, braces) {\n    var length = output.reduce(function(prev, cur) {\n      if (cur.indexOf('\\n') >= 0) ;\n      return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n    }, 0);\n\n    if (length > 60) {\n      return braces[0] +\n             (base === '' ? '' : base + '\\n ') +\n             ' ' +\n             output.join(',\\n  ') +\n             ' ' +\n             braces[1];\n    }\n\n    return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n  }\n\n\n  // NOTE: These type checking functions intentionally don't use `instanceof`\n  // because it is fragile and can be easily faked with `Object.create()`.\n  function isArray$1(ar) {\n    return Array.isArray(ar);\n  }\n\n  function isBoolean(arg) {\n    return typeof arg === 'boolean';\n  }\n\n  function isNull(arg) {\n    return arg === null;\n  }\n\n  function isNullOrUndefined(arg) {\n    return arg == null;\n  }\n\n  function isNumber(arg) {\n    return typeof arg === 'number';\n  }\n\n  function isString$1(arg) {\n    return typeof arg === 'string';\n  }\n\n  function isSymbol(arg) {\n    return typeof arg === 'symbol';\n  }\n\n  function isUndefined(arg) {\n    return arg === void 0;\n  }\n\n  function isRegExp(re) {\n    return isObject(re) && objectToString(re) === '[object RegExp]';\n  }\n\n  function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  }\n\n  function isDate(d) {\n    return isObject(d) && objectToString(d) === '[object Date]';\n  }\n\n  function isError$1(e) {\n    return isObject(e) &&\n        (objectToString(e) === '[object Error]' || e instanceof Error);\n  }\n\n  function isFunction(arg) {\n    return typeof arg === 'function';\n  }\n\n  function isPrimitive(arg) {\n    return arg === null ||\n           typeof arg === 'boolean' ||\n           typeof arg === 'number' ||\n           typeof arg === 'string' ||\n           typeof arg === 'symbol' ||  // ES6 symbol\n           typeof arg === 'undefined';\n  }\n\n  function isBuffer$1(maybeBuf) {\n    return isBuffer$2(maybeBuf);\n  }\n\n  function objectToString(o) {\n    return Object.prototype.toString.call(o);\n  }\n\n\n  function pad(n) {\n    return n < 10 ? '0' + n.toString(10) : n.toString(10);\n  }\n\n\n  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n                'Oct', 'Nov', 'Dec'];\n\n  // 26 Feb 16:19:34\n  function timestamp() {\n    var d = new Date();\n    var time = [pad(d.getHours()),\n                pad(d.getMinutes()),\n                pad(d.getSeconds())].join(':');\n    return [d.getDate(), months[d.getMonth()], time].join(' ');\n  }\n\n\n  // log is just a thin wrapper to console.log that prepends a timestamp\n  function log() {\n    console.log('%s - %s', timestamp(), format$1.apply(null, arguments));\n  }\n\n  function _extend(origin, add) {\n    // Don't do anything if add isn't an object\n    if (!add || !isObject(add)) return origin;\n\n    var keys = Object.keys(add);\n    var i = keys.length;\n    while (i--) {\n      origin[keys[i]] = add[keys[i]];\n    }\n    return origin;\n  }\n  function hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  }\n\n  var util = {\n    inherits: inherits$3,\n    _extend: _extend,\n    log: log,\n    isBuffer: isBuffer$1,\n    isPrimitive: isPrimitive,\n    isFunction: isFunction,\n    isError: isError$1,\n    isDate: isDate,\n    isObject: isObject,\n    isRegExp: isRegExp,\n    isUndefined: isUndefined,\n    isSymbol: isSymbol,\n    isString: isString$1,\n    isNumber: isNumber,\n    isNullOrUndefined: isNullOrUndefined,\n    isNull: isNull,\n    isBoolean: isBoolean,\n    isArray: isArray$1,\n    inspect: inspect,\n    deprecate: deprecate$1,\n    format: format$1,\n    debuglog: debuglog\n  };\n\n  var lookup = [];\n  var revLookup = [];\n  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n  var inited = false;\n  function init () {\n    inited = true;\n    var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    for (var i = 0, len = code.length; i < len; ++i) {\n      lookup[i] = code[i];\n      revLookup[code.charCodeAt(i)] = i;\n    }\n\n    revLookup['-'.charCodeAt(0)] = 62;\n    revLookup['_'.charCodeAt(0)] = 63;\n  }\n\n  function toByteArray (b64) {\n    if (!inited) {\n      init();\n    }\n    var i, j, l, tmp, placeHolders, arr;\n    var len = b64.length;\n\n    if (len % 4 > 0) {\n      throw new Error('Invalid string. Length must be a multiple of 4')\n    }\n\n    // the number of equal signs (place holders)\n    // if there are two placeholders, than the two characters before it\n    // represent one byte\n    // if there is only one, then the three characters before it represent 2 bytes\n    // this is just a cheap hack to not do indexOf twice\n    placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n    // base64 is 4/3 + up to two characters of the original data\n    arr = new Arr(len * 3 / 4 - placeHolders);\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    l = placeHolders > 0 ? len - 4 : len;\n\n    var L = 0;\n\n    for (i = 0, j = 0; i < l; i += 4, j += 3) {\n      tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n      arr[L++] = (tmp >> 16) & 0xFF;\n      arr[L++] = (tmp >> 8) & 0xFF;\n      arr[L++] = tmp & 0xFF;\n    }\n\n    if (placeHolders === 2) {\n      tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n      arr[L++] = tmp & 0xFF;\n    } else if (placeHolders === 1) {\n      tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n      arr[L++] = (tmp >> 8) & 0xFF;\n      arr[L++] = tmp & 0xFF;\n    }\n\n    return arr\n  }\n\n  function tripletToBase64 (num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n  }\n\n  function encodeChunk (uint8, start, end) {\n    var tmp;\n    var output = [];\n    for (var i = start; i < end; i += 3) {\n      tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n      output.push(tripletToBase64(tmp));\n    }\n    return output.join('')\n  }\n\n  function fromByteArray (uint8) {\n    if (!inited) {\n      init();\n    }\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n    var output = '';\n    var parts = [];\n    var maxChunkLength = 16383; // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n      parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n      tmp = uint8[len - 1];\n      output += lookup[tmp >> 2];\n      output += lookup[(tmp << 4) & 0x3F];\n      output += '==';\n    } else if (extraBytes === 2) {\n      tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n      output += lookup[tmp >> 10];\n      output += lookup[(tmp >> 4) & 0x3F];\n      output += lookup[(tmp << 2) & 0x3F];\n      output += '=';\n    }\n\n    parts.push(output);\n\n    return parts.join('')\n  }\n\n  function read (buffer, offset, isLE, mLen, nBytes) {\n    var e, m;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var nBits = -7;\n    var i = isLE ? (nBytes - 1) : 0;\n    var d = isLE ? -1 : 1;\n    var s = buffer[offset + i];\n\n    i += d;\n\n    e = s & ((1 << (-nBits)) - 1);\n    s >>= (-nBits);\n    nBits += eLen;\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    m = e & ((1 << (-nBits)) - 1);\n    e >>= (-nBits);\n    nBits += mLen;\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    if (e === 0) {\n      e = 1 - eBias;\n    } else if (e === eMax) {\n      return m ? NaN : ((s ? -1 : 1) * Infinity)\n    } else {\n      m = m + Math.pow(2, mLen);\n      e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n  }\n\n  function write (buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c;\n    var eLen = nBytes * 8 - mLen - 1;\n    var eMax = (1 << eLen) - 1;\n    var eBias = eMax >> 1;\n    var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n    var i = isLE ? 0 : (nBytes - 1);\n    var d = isLE ? 1 : -1;\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n    value = Math.abs(value);\n\n    if (isNaN(value) || value === Infinity) {\n      m = isNaN(value) ? 1 : 0;\n      e = eMax;\n    } else {\n      e = Math.floor(Math.log(value) / Math.LN2);\n      if (value * (c = Math.pow(2, -e)) < 1) {\n        e--;\n        c *= 2;\n      }\n      if (e + eBias >= 1) {\n        value += rt / c;\n      } else {\n        value += rt * Math.pow(2, 1 - eBias);\n      }\n      if (value * c >= 2) {\n        e++;\n        c /= 2;\n      }\n\n      if (e + eBias >= eMax) {\n        m = 0;\n        e = eMax;\n      } else if (e + eBias >= 1) {\n        m = (value * c - 1) * Math.pow(2, mLen);\n        e = e + eBias;\n      } else {\n        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n        e = 0;\n      }\n    }\n\n    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n    e = (e << mLen) | m;\n    eLen += mLen;\n    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n    buffer[offset + i - d] |= s * 128;\n  }\n\n  var toString$1 = {}.toString;\n\n  var isArray = Array.isArray || function (arr) {\n    return toString$1.call(arr) == '[object Array]';\n  };\n\n  /*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n   * @license  MIT\n   */\n\n  var INSPECT_MAX_BYTES = 50;\n\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Use Object implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * Due to various browser bugs, sometimes the Object implementation will be used even\n   * when the browser supports typed arrays.\n   *\n   * Note:\n   *\n   *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n   *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n   *\n   *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n   *\n   *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n   *     incorrect length in some situations.\n\n   * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n   * get the Object implementation, which is slower but behaves correctly.\n   */\n  Buffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined\n    ? global$1.TYPED_ARRAY_SUPPORT\n    : true;\n\n  function kMaxLength () {\n    return Buffer.TYPED_ARRAY_SUPPORT\n      ? 0x7fffffff\n      : 0x3fffffff\n  }\n\n  function createBuffer (that, length) {\n    if (kMaxLength() < length) {\n      throw new RangeError('Invalid typed array length')\n    }\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      // Return an augmented `Uint8Array` instance, for best performance\n      that = new Uint8Array(length);\n      that.__proto__ = Buffer.prototype;\n    } else {\n      // Fallback: Return an object instance of the Buffer class\n      if (that === null) {\n        that = new Buffer(length);\n      }\n      that.length = length;\n    }\n\n    return that\n  }\n\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n  function Buffer (arg, encodingOrOffset, length) {\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n      return new Buffer(arg, encodingOrOffset, length)\n    }\n\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new Error(\n          'If encoding is specified then the first argument must be a string'\n        )\n      }\n      return allocUnsafe(this, arg)\n    }\n    return from(this, arg, encodingOrOffset, length)\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  // TODO: Legacy, not needed anymore. Remove in next major version.\n  Buffer._augment = function (arr) {\n    arr.__proto__ = Buffer.prototype;\n    return arr\n  };\n\n  function from (that, value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('\"value\" argument must not be a number')\n    }\n\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, value, encodingOrOffset, length)\n    }\n\n    if (typeof value === 'string') {\n      return fromString(that, value, encodingOrOffset)\n    }\n\n    return fromObject(that, value)\n  }\n\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(null, value, encodingOrOffset, length)\n  };\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    Buffer.prototype.__proto__ = Uint8Array.prototype;\n    Buffer.__proto__ = Uint8Array;\n  }\n\n  function assertSize (size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be a number')\n    } else if (size < 0) {\n      throw new RangeError('\"size\" argument must not be negative')\n    }\n  }\n\n  function alloc (that, size, fill, encoding) {\n    assertSize(size);\n    if (size <= 0) {\n      return createBuffer(that, size)\n    }\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpretted as a start offset.\n      return typeof encoding === 'string'\n        ? createBuffer(that, size).fill(fill, encoding)\n        : createBuffer(that, size).fill(fill)\n    }\n    return createBuffer(that, size)\n  }\n\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(null, size, fill, encoding)\n  };\n\n  function allocUnsafe (that, size) {\n    assertSize(size);\n    that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\n      for (var i = 0; i < size; ++i) {\n        that[i] = 0;\n      }\n    }\n    return that\n  }\n\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(null, size)\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(null, size)\n  };\n\n  function fromString (that, string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('\"encoding\" must be a valid string encoding')\n    }\n\n    var length = byteLength(string, encoding) | 0;\n    that = createBuffer(that, length);\n\n    var actual = that.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      that = that.slice(0, actual);\n    }\n\n    return that\n  }\n\n  function fromArrayLike (that, array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    that = createBuffer(that, length);\n    for (var i = 0; i < length; i += 1) {\n      that[i] = array[i] & 255;\n    }\n    return that\n  }\n\n  function fromArrayBuffer (that, array, byteOffset, length) {\n    array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\\'offset\\' is out of bounds')\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\\'length\\' is out of bounds')\n    }\n\n    if (byteOffset === undefined && length === undefined) {\n      array = new Uint8Array(array);\n    } else if (length === undefined) {\n      array = new Uint8Array(array, byteOffset);\n    } else {\n      array = new Uint8Array(array, byteOffset, length);\n    }\n\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      // Return an augmented `Uint8Array` instance, for best performance\n      that = array;\n      that.__proto__ = Buffer.prototype;\n    } else {\n      // Fallback: Return an object instance of the Buffer class\n      that = fromArrayLike(that, array);\n    }\n    return that\n  }\n\n  function fromObject (that, obj) {\n    if (internalIsBuffer(obj)) {\n      var len = checked(obj.length) | 0;\n      that = createBuffer(that, len);\n\n      if (that.length === 0) {\n        return that\n      }\n\n      obj.copy(that, 0, 0, len);\n      return that\n    }\n\n    if (obj) {\n      if ((typeof ArrayBuffer !== 'undefined' &&\n          obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n        if (typeof obj.length !== 'number' || isnan(obj.length)) {\n          return createBuffer(that, 0)\n        }\n        return fromArrayLike(that, obj)\n      }\n\n      if (obj.type === 'Buffer' && isArray(obj.data)) {\n        return fromArrayLike(that, obj.data)\n      }\n    }\n\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n  }\n\n  function checked (length) {\n    // Note: cannot use `length < kMaxLength()` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= kMaxLength()) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                           'size: 0x' + kMaxLength().toString(16) + ' bytes')\n    }\n    return length | 0\n  }\n  Buffer.isBuffer = isBuffer;\n  function internalIsBuffer (b) {\n    return !!(b != null && b._isBuffer)\n  }\n\n  Buffer.compare = function compare (a, b) {\n    if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n      throw new TypeError('Arguments must be Buffers')\n    }\n\n    if (a === b) return 0\n\n    var x = a.length;\n    var y = b.length;\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break\n      }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n  };\n\n  Buffer.isEncoding = function isEncoding (encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true\n      default:\n        return false\n    }\n  };\n\n  Buffer.concat = function concat (list, length) {\n    if (!isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0)\n    }\n\n    var i;\n    if (length === undefined) {\n      length = 0;\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer.allocUnsafe(length);\n    var pos = 0;\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n      if (!internalIsBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers')\n      }\n      buf.copy(buffer, pos);\n      pos += buf.length;\n    }\n    return buffer\n  };\n\n  function byteLength (string, encoding) {\n    if (internalIsBuffer(string)) {\n      return string.length\n    }\n    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n      return string.byteLength\n    }\n    if (typeof string !== 'string') {\n      string = '' + string;\n    }\n\n    var len = string.length;\n    if (len === 0) return 0\n\n    // Use a for loop to avoid recursion\n    var loweredCase = false;\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len\n        case 'utf8':\n        case 'utf-8':\n        case undefined:\n          return utf8ToBytes(string).length\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2\n        case 'hex':\n          return len >>> 1\n        case 'base64':\n          return base64ToBytes(string).length\n        default:\n          if (loweredCase) return utf8ToBytes(string).length // assume utf8\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n  Buffer.byteLength = byteLength;\n\n  function slowToString (encoding, start, end) {\n    var loweredCase = false;\n\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) {\n      start = 0;\n    }\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) {\n      return ''\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return ''\n    }\n\n    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return ''\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end)\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end)\n\n        case 'ascii':\n          return asciiSlice(this, start, end)\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end)\n\n        case 'base64':\n          return base64Slice(this, start, end)\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end)\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n  // Buffer instances.\n  Buffer.prototype._isBuffer = true;\n\n  function swap (b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16 () {\n    var len = this.length;\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits')\n    }\n    for (var i = 0; i < len; i += 2) {\n      swap(this, i, i + 1);\n    }\n    return this\n  };\n\n  Buffer.prototype.swap32 = function swap32 () {\n    var len = this.length;\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits')\n    }\n    for (var i = 0; i < len; i += 4) {\n      swap(this, i, i + 3);\n      swap(this, i + 1, i + 2);\n    }\n    return this\n  };\n\n  Buffer.prototype.swap64 = function swap64 () {\n    var len = this.length;\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits')\n    }\n    for (var i = 0; i < len; i += 8) {\n      swap(this, i, i + 7);\n      swap(this, i + 1, i + 6);\n      swap(this, i + 2, i + 5);\n      swap(this, i + 3, i + 4);\n    }\n    return this\n  };\n\n  Buffer.prototype.toString = function toString () {\n    var length = this.length | 0;\n    if (length === 0) return ''\n    if (arguments.length === 0) return utf8Slice(this, 0, length)\n    return slowToString.apply(this, arguments)\n  };\n\n  Buffer.prototype.equals = function equals (b) {\n    if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n    if (this === b) return true\n    return Buffer.compare(this, b) === 0\n  };\n\n  Buffer.prototype.inspect = function inspect () {\n    var str = '';\n    var max = INSPECT_MAX_BYTES;\n    if (this.length > 0) {\n      str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n      if (this.length > max) str += ' ... ';\n    }\n    return '<Buffer ' + str + '>'\n  };\n\n  Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n    if (!internalIsBuffer(target)) {\n      throw new TypeError('Argument must be a Buffer')\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index')\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0\n    }\n    if (thisStart >= thisEnd) {\n      return -1\n    }\n    if (start >= end) {\n      return 1\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n\n    if (this === target) return 0\n\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break\n      }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n  };\n\n  // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n  function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1\n\n    // Normalize byteOffset\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n    byteOffset = +byteOffset;  // Coerce to Number.\n    if (isNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : (buffer.length - 1);\n    }\n\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1\n      else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;\n      else return -1\n    }\n\n    // Normalize val\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding);\n    }\n\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if (internalIsBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1\n      }\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n      if (Buffer.TYPED_ARRAY_SUPPORT &&\n          typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n        }\n      }\n      return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n    }\n\n    throw new TypeError('val must be string, number or Buffer')\n  }\n\n  function arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n      if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n          encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1\n        }\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read (buf, i) {\n      if (indexSize === 1) {\n        return buf[i]\n      } else {\n        return buf.readUInt16BE(i * indexSize)\n      }\n    }\n\n    var i;\n    if (dir) {\n      var foundIndex = -1;\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break\n          }\n        }\n        if (found) return i\n      }\n    }\n\n    return -1\n  }\n\n  Buffer.prototype.includes = function includes (val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1\n  };\n\n  Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n  };\n\n  function hexWrite (buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    // must be an even number of digits\n    var strLen = string.length;\n    if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n    for (var i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (isNaN(parsed)) return i\n      buf[offset + i] = parsed;\n    }\n    return i\n  }\n\n  function utf8Write (buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n  }\n\n  function asciiWrite (buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length)\n  }\n\n  function latin1Write (buf, string, offset, length) {\n    return asciiWrite(buf, string, offset, length)\n  }\n\n  function base64Write (buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length)\n  }\n\n  function ucs2Write (buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n  }\n\n  Buffer.prototype.write = function write (string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0;\n    // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset | 0;\n      if (isFinite(length)) {\n        length = length | 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    // legacy write(string, encoding, offset, length) - remove in v0.13\n    } else {\n      throw new Error(\n        'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n      )\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds')\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    var loweredCase = false;\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length)\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length)\n\n        case 'ascii':\n          return asciiWrite(this, string, offset, length)\n\n        case 'latin1':\n        case 'binary':\n          return latin1Write(this, string, offset, length)\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length)\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length)\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON () {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    }\n  };\n\n  function base64Slice (buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return fromByteArray(buf)\n    } else {\n      return fromByteArray(buf.slice(start, end))\n    }\n  }\n\n  function utf8Slice (buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n\n    var i = start;\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = (firstByte > 0xEF) ? 4\n        : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n        : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n            break\n          case 2:\n            secondByte = buf[i + 1];\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n            break\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n            break\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res)\n  }\n\n  // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n  function decodeCodePointsArray (codePoints) {\n    var len = codePoints.length;\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    }\n\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = '';\n    var i = 0;\n    while (i < len) {\n      res += String.fromCharCode.apply(\n        String,\n        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n      );\n    }\n    return res\n  }\n\n  function asciiSlice (buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 0x7F);\n    }\n    return ret\n  }\n\n  function latin1Slice (buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i]);\n    }\n    return ret\n  }\n\n  function hexSlice (buf, start, end) {\n    var len = buf.length;\n\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n\n    var out = '';\n    for (var i = start; i < end; ++i) {\n      out += toHex(buf[i]);\n    }\n    return out\n  }\n\n  function utf16leSlice (buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = '';\n    for (var i = 0; i < bytes.length; i += 2) {\n      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    }\n    return res\n  }\n\n  Buffer.prototype.slice = function slice (start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n\n    var newBuf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      newBuf = this.subarray(start, end);\n      newBuf.__proto__ = Buffer.prototype;\n    } else {\n      var sliceLen = end - start;\n      newBuf = new Buffer(sliceLen, undefined);\n      for (var i = 0; i < sliceLen; ++i) {\n        newBuf[i] = this[i + start];\n      }\n    }\n\n    return newBuf\n  };\n\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n  function checkOffset (offset, ext, length) {\n    if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n  }\n\n  Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val\n  };\n\n  Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val\n  };\n\n  Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset]\n  };\n\n  Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | (this[offset + 1] << 8)\n  };\n\n  Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return (this[offset] << 8) | this[offset + 1]\n  };\n\n  Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length);\n\n    return ((this[offset]) |\n        (this[offset + 1] << 8) |\n        (this[offset + 2] << 16)) +\n        (this[offset + 3] * 0x1000000)\n  };\n\n  Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length);\n\n    return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n  };\n\n  Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n    mul *= 0x80;\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n    return val\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n    mul *= 0x80;\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n    return val\n  };\n\n  Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return (this[offset])\n    return ((0xff - this[offset] + 1) * -1)\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset] | (this[offset + 1] << 8);\n    return (val & 0x8000) ? val | 0xFFFF0000 : val\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | (this[offset] << 8);\n    return (val & 0x8000) ? val | 0xFFFF0000 : val\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length);\n\n    return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length);\n\n    return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n  };\n\n  Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return read(this, offset, true, 23, 4)\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return read(this, offset, false, 23, 4)\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return read(this, offset, true, 52, 8)\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return read(this, offset, false, 52, 8)\n  };\n\n  function checkInt (buf, value, offset, ext, max, min) {\n    if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  }\n\n  Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = (value / mul) & 0xFF;\n    }\n\n    return offset + byteLength\n  };\n\n  Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    byteLength = byteLength | 0;\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = (value / mul) & 0xFF;\n    }\n\n    return offset + byteLength\n  };\n\n  Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n    this[offset] = (value & 0xff);\n    return offset + 1\n  };\n\n  function objectWriteUInt16 (buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffff + value + 1;\n    for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n      buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n        (littleEndian ? i : 1 - i) * 8;\n    }\n  }\n\n  Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value & 0xff);\n      this[offset + 1] = (value >>> 8);\n    } else {\n      objectWriteUInt16(this, value, offset, true);\n    }\n    return offset + 2\n  };\n\n  Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value >>> 8);\n      this[offset + 1] = (value & 0xff);\n    } else {\n      objectWriteUInt16(this, value, offset, false);\n    }\n    return offset + 2\n  };\n\n  function objectWriteUInt32 (buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffffffff + value + 1;\n    for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n      buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n    }\n  }\n\n  Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      this[offset + 3] = (value >>> 24);\n      this[offset + 2] = (value >>> 16);\n      this[offset + 1] = (value >>> 8);\n      this[offset] = (value & 0xff);\n    } else {\n      objectWriteUInt32(this, value, offset, true);\n    }\n    return offset + 4\n  };\n\n  Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value >>> 24);\n      this[offset + 1] = (value >>> 16);\n      this[offset + 2] = (value >>> 8);\n      this[offset + 3] = (value & 0xff);\n    } else {\n      objectWriteUInt32(this, value, offset, false);\n    }\n    return offset + 4\n  };\n\n  Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = (value & 0xff);\n    return offset + 1\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value & 0xff);\n      this[offset + 1] = (value >>> 8);\n    } else {\n      objectWriteUInt16(this, value, offset, true);\n    }\n    return offset + 2\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value >>> 8);\n      this[offset + 1] = (value & 0xff);\n    } else {\n      objectWriteUInt16(this, value, offset, false);\n    }\n    return offset + 2\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value & 0xff);\n      this[offset + 1] = (value >>> 8);\n      this[offset + 2] = (value >>> 16);\n      this[offset + 3] = (value >>> 24);\n    } else {\n      objectWriteUInt32(this, value, offset, true);\n    }\n    return offset + 4\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n    value = +value;\n    offset = offset | 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      this[offset] = (value >>> 24);\n      this[offset + 1] = (value >>> 16);\n      this[offset + 2] = (value >>> 8);\n      this[offset + 3] = (value & 0xff);\n    } else {\n      objectWriteUInt32(this, value, offset, false);\n    }\n    return offset + 4\n  };\n\n  function checkIEEE754 (buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n    if (offset < 0) throw new RangeError('Index out of range')\n  }\n\n  function writeFloat (buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n    write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert)\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert)\n  };\n\n  function writeDouble (buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n    write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert)\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert)\n  };\n\n  // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n  Buffer.prototype.copy = function copy (target, targetStart, start, end) {\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start;\n\n    // Copy 0 bytes; we're done\n    if (end === start) return 0\n    if (target.length === 0 || this.length === 0) return 0\n\n    // Fatal error conditions\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds')\n    }\n    if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n    if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n    // Are we oob?\n    if (end > this.length) end = this.length;\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n    var i;\n\n    if (this === target && start < targetStart && targetStart < end) {\n      // descending copy from end\n      for (i = len - 1; i >= 0; --i) {\n        target[i + targetStart] = this[i + start];\n      }\n    } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n      // ascending copy from start\n      for (i = 0; i < len; ++i) {\n        target[i + targetStart] = this[i + start];\n      }\n    } else {\n      Uint8Array.prototype.set.call(\n        target,\n        this.subarray(start, start + len),\n        targetStart\n      );\n    }\n\n    return len\n  };\n\n  // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n  Buffer.prototype.fill = function fill (val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n      if (val.length === 1) {\n        var code = val.charCodeAt(0);\n        if (code < 256) {\n          val = code;\n        }\n      }\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string')\n      }\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding)\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    }\n\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index')\n    }\n\n    if (end <= start) {\n      return this\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n\n    if (!val) val = 0;\n\n    var i;\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = internalIsBuffer(val)\n        ? val\n        : utf8ToBytes(new Buffer(val, encoding).toString());\n      var len = bytes.length;\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len];\n      }\n    }\n\n    return this\n  };\n\n  // HELPER FUNCTIONS\n  // ================\n\n  var INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\n  function base64clean (str) {\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return ''\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n    return str\n  }\n\n  function stringtrim (str) {\n    if (str.trim) return str.trim()\n    return str.replace(/^\\s+|\\s+$/g, '')\n  }\n\n  function toHex (n) {\n    if (n < 16) return '0' + n.toString(16)\n    return n.toString(16)\n  }\n\n  function utf8ToBytes (string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i);\n\n      // is surrogate component\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue\n          }\n\n          // valid lead\n          leadSurrogate = codePoint;\n\n          continue\n        }\n\n        // 2 leads in a row\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue\n        }\n\n        // valid surrogate pair\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null;\n\n      // encode utf8\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break\n        bytes.push(\n          codePoint >> 0x6 | 0xC0,\n          codePoint & 0x3F | 0x80\n        );\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break\n        bytes.push(\n          codePoint >> 0xC | 0xE0,\n          codePoint >> 0x6 & 0x3F | 0x80,\n          codePoint & 0x3F | 0x80\n        );\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break\n        bytes.push(\n          codePoint >> 0x12 | 0xF0,\n          codePoint >> 0xC & 0x3F | 0x80,\n          codePoint >> 0x6 & 0x3F | 0x80,\n          codePoint & 0x3F | 0x80\n        );\n      } else {\n        throw new Error('Invalid code point')\n      }\n    }\n\n    return bytes\n  }\n\n  function asciiToBytes (str) {\n    var byteArray = [];\n    for (var i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 0xFF);\n    }\n    return byteArray\n  }\n\n  function utf16leToBytes (str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n    for (var i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break\n\n      c = str.charCodeAt(i);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray\n  }\n\n\n  function base64ToBytes (str) {\n    return toByteArray(base64clean(str))\n  }\n\n  function blitBuffer (src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n      if ((i + offset >= dst.length) || (i >= src.length)) break\n      dst[i + offset] = src[i];\n    }\n    return i\n  }\n\n  function isnan (val) {\n    return val !== val // eslint-disable-line no-self-compare\n  }\n\n\n  // the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n  // The _isBuffer check is for Safari 5-7 support, because it's missing\n  // Object.prototype.constructor. Remove this eventually\n  function isBuffer(obj) {\n    return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n  }\n\n  function isFastBuffer (obj) {\n    return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n  }\n\n  // For Node v0.10 support. Remove this eventually.\n  function isSlowBuffer (obj) {\n    return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n  }\n\n  function BufferList() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function (v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function (v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function () {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function () {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function (s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function (n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      p.data.copy(ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  // Copyright Joyent, Inc. and other Node contributors.\n  var isBufferEncoding = Buffer.isEncoding\n    || function(encoding) {\n         switch (encoding && encoding.toLowerCase()) {\n           case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n           default: return false;\n         }\n       };\n\n\n  function assertEncoding(encoding) {\n    if (encoding && !isBufferEncoding(encoding)) {\n      throw new Error('Unknown encoding: ' + encoding);\n    }\n  }\n\n  // StringDecoder provides an interface for efficiently splitting a series of\n  // buffers into a series of JS strings without breaking apart multi-byte\n  // characters. CESU-8 is handled as part of the UTF-8 encoding.\n  //\n  // @TODO Handling all encodings inside a single object makes it very difficult\n  // to reason about this code, so it should be split up in the future.\n  // @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n  // points as used by CESU-8.\n  function StringDecoder(encoding) {\n    this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n    assertEncoding(encoding);\n    switch (this.encoding) {\n      case 'utf8':\n        // CESU-8 represents each of Surrogate Pair by 3-bytes\n        this.surrogateSize = 3;\n        break;\n      case 'ucs2':\n      case 'utf16le':\n        // UTF-16 represents each of Surrogate Pair by 2-bytes\n        this.surrogateSize = 2;\n        this.detectIncompleteChar = utf16DetectIncompleteChar;\n        break;\n      case 'base64':\n        // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n        this.surrogateSize = 3;\n        this.detectIncompleteChar = base64DetectIncompleteChar;\n        break;\n      default:\n        this.write = passThroughWrite;\n        return;\n    }\n\n    // Enough space to store all bytes of a single character. UTF-8 needs 4\n    // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n    this.charBuffer = new Buffer(6);\n    // Number of bytes received for the current incomplete multi-byte character.\n    this.charReceived = 0;\n    // Number of bytes expected for the current incomplete multi-byte character.\n    this.charLength = 0;\n  }\n\n  // write decodes the given buffer and returns it as JS string that is\n  // guaranteed to not contain any partial multi-byte characters. Any partial\n  // character found at the end of the buffer is buffered up, and will be\n  // returned when calling write again with the remaining bytes.\n  //\n  // Note: Converting a Buffer containing an orphan surrogate to a String\n  // currently works, but converting a String to a Buffer (via `new Buffer`, or\n  // Buffer#write) will replace incomplete surrogates with the unicode\n  // replacement character. See https://codereview.chromium.org/121173009/ .\n  StringDecoder.prototype.write = function(buffer) {\n    var charStr = '';\n    // if our last write ended with an incomplete multibyte character\n    while (this.charLength) {\n      // determine how many remaining bytes this buffer has to offer for this char\n      var available = (buffer.length >= this.charLength - this.charReceived) ?\n          this.charLength - this.charReceived :\n          buffer.length;\n\n      // add the new bytes to the char buffer\n      buffer.copy(this.charBuffer, this.charReceived, 0, available);\n      this.charReceived += available;\n\n      if (this.charReceived < this.charLength) {\n        // still not enough chars in this buffer? wait for more ...\n        return '';\n      }\n\n      // remove bytes belonging to the current character from the buffer\n      buffer = buffer.slice(available, buffer.length);\n\n      // get the character that was split\n      charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n      // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n      var charCode = charStr.charCodeAt(charStr.length - 1);\n      if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n        this.charLength += this.surrogateSize;\n        charStr = '';\n        continue;\n      }\n      this.charReceived = this.charLength = 0;\n\n      // if there are no more bytes in this buffer, just emit our char\n      if (buffer.length === 0) {\n        return charStr;\n      }\n      break;\n    }\n\n    // determine and set charLength / charReceived\n    this.detectIncompleteChar(buffer);\n\n    var end = buffer.length;\n    if (this.charLength) {\n      // buffer the incomplete character bytes we got\n      buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n      end -= this.charReceived;\n    }\n\n    charStr += buffer.toString(this.encoding, 0, end);\n\n    var end = charStr.length - 1;\n    var charCode = charStr.charCodeAt(end);\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      var size = this.surrogateSize;\n      this.charLength += size;\n      this.charReceived += size;\n      this.charBuffer.copy(this.charBuffer, size, 0, size);\n      buffer.copy(this.charBuffer, 0, 0, size);\n      return charStr.substring(0, end);\n    }\n\n    // or just emit the charStr\n    return charStr;\n  };\n\n  // detectIncompleteChar determines if there is an incomplete UTF-8 character at\n  // the end of the given buffer. If so, it sets this.charLength to the byte\n  // length that character, and sets this.charReceived to the number of bytes\n  // that are available for this character.\n  StringDecoder.prototype.detectIncompleteChar = function(buffer) {\n    // determine how many bytes we have to check at the end of this buffer\n    var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n    // Figure out if one of the last i bytes of our buffer announces an\n    // incomplete char.\n    for (; i > 0; i--) {\n      var c = buffer[buffer.length - i];\n\n      // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n      // 110XXXXX\n      if (i == 1 && c >> 5 == 0x06) {\n        this.charLength = 2;\n        break;\n      }\n\n      // 1110XXXX\n      if (i <= 2 && c >> 4 == 0x0E) {\n        this.charLength = 3;\n        break;\n      }\n\n      // 11110XXX\n      if (i <= 3 && c >> 3 == 0x1E) {\n        this.charLength = 4;\n        break;\n      }\n    }\n    this.charReceived = i;\n  };\n\n  StringDecoder.prototype.end = function(buffer) {\n    var res = '';\n    if (buffer && buffer.length)\n      res = this.write(buffer);\n\n    if (this.charReceived) {\n      var cr = this.charReceived;\n      var buf = this.charBuffer;\n      var enc = this.encoding;\n      res += buf.slice(0, cr).toString(enc);\n    }\n\n    return res;\n  };\n\n  function passThroughWrite(buffer) {\n    return buffer.toString(this.encoding);\n  }\n\n  function utf16DetectIncompleteChar(buffer) {\n    this.charReceived = buffer.length % 2;\n    this.charLength = this.charReceived ? 2 : 0;\n  }\n\n  function base64DetectIncompleteChar(buffer) {\n    this.charReceived = buffer.length % 3;\n    this.charLength = this.charReceived ? 3 : 0;\n  }\n\n  Readable.ReadableState = ReadableState;\n\n  var debug$2 = debuglog('stream');\n  inherits$3(Readable, EventEmitter$2);\n\n  function prependListener(emitter, event, fn) {\n    // Sadly this is not cacheable as some libraries bundle their own\n    // event emitter implementation with them.\n    if (typeof emitter.prependListener === 'function') {\n      return emitter.prependListener(event, fn);\n    } else {\n      // This is a hack to make sure that our error handler is attached before any\n      // userland ones.  NEVER DO THIS. This is here only because this code needs\n      // to continue to work with older versions of Node.js that do not include\n      // the prependListener() method. The goal is to eventually remove this hack.\n      if (!emitter._events || !emitter._events[event])\n        emitter.on(event, fn);\n      else if (Array.isArray(emitter._events[event]))\n        emitter._events[event].unshift(fn);\n      else\n        emitter._events[event] = [fn, emitter._events[event]];\n    }\n  }\n  function listenerCount (emitter, type) {\n    return emitter.listeners(type).length;\n  }\n  function ReadableState(options, stream) {\n\n    options = options || {};\n\n    // object stream flag. Used to make read(n) ignore n and to\n    // make all the buffer merging and length checks go away\n    this.objectMode = !!options.objectMode;\n\n    if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n    // the point at which it stops calling _read() to fill the buffer\n    // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n    var hwm = options.highWaterMark;\n    var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n    this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n    // cast to ints.\n    this.highWaterMark = ~ ~this.highWaterMark;\n\n    // A linked list is used to store data chunks instead of an array because the\n    // linked list can remove elements from the beginning faster than\n    // array.shift()\n    this.buffer = new BufferList();\n    this.length = 0;\n    this.pipes = null;\n    this.pipesCount = 0;\n    this.flowing = null;\n    this.ended = false;\n    this.endEmitted = false;\n    this.reading = false;\n\n    // a flag to be able to tell if the onwrite cb is called immediately,\n    // or on a later tick.  We set this to true at first, because any\n    // actions that shouldn't happen until \"later\" should generally also\n    // not happen before the first write call.\n    this.sync = true;\n\n    // whenever we return null, then we set a flag to say\n    // that we're awaiting a 'readable' event emission.\n    this.needReadable = false;\n    this.emittedReadable = false;\n    this.readableListening = false;\n    this.resumeScheduled = false;\n\n    // Crypto is kind of old and crusty.  Historically, its default string\n    // encoding is 'binary' so we have to make this configurable.\n    // Everything else in the universe uses 'utf8', though.\n    this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n    // when piping, we only care about 'readable' events that happen\n    // after read()ing all the bytes and not getting any pushback.\n    this.ranOut = false;\n\n    // the number of writers that are awaiting a drain event in .pipe()s\n    this.awaitDrain = 0;\n\n    // if true, a maybeReadMore has been scheduled\n    this.readingMore = false;\n\n    this.decoder = null;\n    this.encoding = null;\n    if (options.encoding) {\n      this.decoder = new StringDecoder(options.encoding);\n      this.encoding = options.encoding;\n    }\n  }\n  function Readable(options) {\n\n    if (!(this instanceof Readable)) return new Readable(options);\n\n    this._readableState = new ReadableState(options, this);\n\n    // legacy\n    this.readable = true;\n\n    if (options && typeof options.read === 'function') this._read = options.read;\n\n    EventEmitter$2.call(this);\n  }\n\n  // Manually shove something into the read() buffer.\n  // This returns true if the highWaterMark has not been hit yet,\n  // similar to how Writable.write() returns true if you should\n  // write() some more.\n  Readable.prototype.push = function (chunk, encoding) {\n    var state = this._readableState;\n\n    if (!state.objectMode && typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer$1.from(chunk, encoding);\n        encoding = '';\n      }\n    }\n\n    return readableAddChunk(this, state, chunk, encoding, false);\n  };\n\n  // Unshift should *always* be something directly out of read()\n  Readable.prototype.unshift = function (chunk) {\n    var state = this._readableState;\n    return readableAddChunk(this, state, chunk, '', true);\n  };\n\n  Readable.prototype.isPaused = function () {\n    return this._readableState.flowing === false;\n  };\n\n  function readableAddChunk(stream, state, chunk, encoding, addToFront) {\n    var er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (chunk === null) {\n      state.reading = false;\n      onEofChunk(stream, state);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (state.ended && !addToFront) {\n        var e = new Error('stream.push() after EOF');\n        stream.emit('error', e);\n      } else if (state.endEmitted && addToFront) {\n        var _e = new Error('stream.unshift() after end event');\n        stream.emit('error', _e);\n      } else {\n        var skipAdd;\n        if (state.decoder && !addToFront && !encoding) {\n          chunk = state.decoder.write(chunk);\n          skipAdd = !state.objectMode && chunk.length === 0;\n        }\n\n        if (!addToFront) state.reading = false;\n\n        // Don't add to the buffer if we've decoded to an empty string chunk and\n        // we're not in object mode\n        if (!skipAdd) {\n          // if we want the data now, just emit it.\n          if (state.flowing && state.length === 0 && !state.sync) {\n            stream.emit('data', chunk);\n            stream.read(0);\n          } else {\n            // update the buffer info.\n            state.length += state.objectMode ? 1 : chunk.length;\n            if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n            if (state.needReadable) emitReadable(stream);\n          }\n        }\n\n        maybeReadMore(stream, state);\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n\n    return needMoreData(state);\n  }\n\n  // if it's past the high water mark, we can push in some more.\n  // Also, if we have no data yet, we can stand some\n  // more bytes.  This is to work around cases where hwm=0,\n  // such as the repl.  Also, if the push() triggered a\n  // readable event, and the user called read(largeNumber) such that\n  // needReadable was set, then we ought to push more, so that another\n  // 'readable' event will be triggered.\n  function needMoreData(state) {\n    return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n  }\n\n  // backwards compatibility.\n  Readable.prototype.setEncoding = function (enc) {\n    this._readableState.decoder = new StringDecoder(enc);\n    this._readableState.encoding = enc;\n    return this;\n  };\n\n  // Don't raise the hwm > 8MB\n  var MAX_HWM = 0x800000;\n  function computeNewHighWaterMark(n) {\n    if (n >= MAX_HWM) {\n      n = MAX_HWM;\n    } else {\n      // Get the next highest power of 2 to prevent increasing hwm excessively in\n      // tiny amounts\n      n--;\n      n |= n >>> 1;\n      n |= n >>> 2;\n      n |= n >>> 4;\n      n |= n >>> 8;\n      n |= n >>> 16;\n      n++;\n    }\n    return n;\n  }\n\n  // This function is designed to be inlinable, so please take care when making\n  // changes to the function body.\n  function howMuchToRead(n, state) {\n    if (n <= 0 || state.length === 0 && state.ended) return 0;\n    if (state.objectMode) return 1;\n    if (n !== n) {\n      // Only flow one buffer at a time\n      if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n    }\n    // If we're asking for more than the current hwm, then raise the hwm.\n    if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n    if (n <= state.length) return n;\n    // Don't have enough\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    }\n    return state.length;\n  }\n\n  // you can override either this method, or the async _read(n) below.\n  Readable.prototype.read = function (n) {\n    debug$2('read', n);\n    n = parseInt(n, 10);\n    var state = this._readableState;\n    var nOrig = n;\n\n    if (n !== 0) state.emittedReadable = false;\n\n    // if we're doing read(0) to trigger a readable event, but we\n    // already have a bunch of data in the buffer, then just trigger\n    // the 'readable' event and move on.\n    if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n      debug$2('read: emitReadable', state.length, state.ended);\n      if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n      return null;\n    }\n\n    n = howMuchToRead(n, state);\n\n    // if we've ended, and we're now clear, then finish it up.\n    if (n === 0 && state.ended) {\n      if (state.length === 0) endReadable(this);\n      return null;\n    }\n\n    // All the actual chunk generation logic needs to be\n    // *below* the call to _read.  The reason is that in certain\n    // synthetic stream cases, such as passthrough streams, _read\n    // may be a completely synchronous operation which may change\n    // the state of the read buffer, providing enough data when\n    // before there was *not* enough.\n    //\n    // So, the steps are:\n    // 1. Figure out what the state of things will be after we do\n    // a read from the buffer.\n    //\n    // 2. If that resulting state will trigger a _read, then call _read.\n    // Note that this may be asynchronous, or synchronous.  Yes, it is\n    // deeply ugly to write APIs this way, but that still doesn't mean\n    // that the Readable class should behave improperly, as streams are\n    // designed to be sync/async agnostic.\n    // Take note if the _read call is sync or async (ie, if the read call\n    // has returned yet), so that we know whether or not it's safe to emit\n    // 'readable' etc.\n    //\n    // 3. Actually pull the requested chunks out of the buffer and return.\n\n    // if we need a readable event, then we need to do some reading.\n    var doRead = state.needReadable;\n    debug$2('need readable', doRead);\n\n    // if we currently have less than the highWaterMark, then also read some\n    if (state.length === 0 || state.length - n < state.highWaterMark) {\n      doRead = true;\n      debug$2('length less than watermark', doRead);\n    }\n\n    // however, if we've ended, then there's no point, and if we're already\n    // reading, then it's unnecessary.\n    if (state.ended || state.reading) {\n      doRead = false;\n      debug$2('reading or ended', doRead);\n    } else if (doRead) {\n      debug$2('do read');\n      state.reading = true;\n      state.sync = true;\n      // if the length is currently zero, then we *need* a readable event.\n      if (state.length === 0) state.needReadable = true;\n      // call internal read method\n      this._read(state.highWaterMark);\n      state.sync = false;\n      // If _read pushed data synchronously, then `reading` will be false,\n      // and we need to re-evaluate how much data we can return to the user.\n      if (!state.reading) n = howMuchToRead(nOrig, state);\n    }\n\n    var ret;\n    if (n > 0) ret = fromList(n, state);else ret = null;\n\n    if (ret === null) {\n      state.needReadable = true;\n      n = 0;\n    } else {\n      state.length -= n;\n    }\n\n    if (state.length === 0) {\n      // If we have nothing in the buffer, then we want to know\n      // as soon as we *do* get something into the buffer.\n      if (!state.ended) state.needReadable = true;\n\n      // If we tried to read() past the EOF, then emit end on the next tick.\n      if (nOrig !== n && state.ended) endReadable(this);\n    }\n\n    if (ret !== null) this.emit('data', ret);\n\n    return ret;\n  };\n\n  function chunkInvalid(state, chunk) {\n    var er = null;\n    if (!isBuffer$2(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n      er = new TypeError('Invalid non-string/buffer chunk');\n    }\n    return er;\n  }\n\n  function onEofChunk(stream, state) {\n    if (state.ended) return;\n    if (state.decoder) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) {\n        state.buffer.push(chunk);\n        state.length += state.objectMode ? 1 : chunk.length;\n      }\n    }\n    state.ended = true;\n\n    // emit 'readable' now to make sure it gets picked up.\n    emitReadable(stream);\n  }\n\n  // Don't emit readable right away in sync mode, because this can trigger\n  // another read() call => stack overflow.  This way, it might trigger\n  // a nextTick recursion warning, but that's not so bad.\n  function emitReadable(stream) {\n    var state = stream._readableState;\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      debug$2('emitReadable', state.flowing);\n      state.emittedReadable = true;\n      if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n    }\n  }\n\n  function emitReadable_(stream) {\n    debug$2('emit readable');\n    stream.emit('readable');\n    flow(stream);\n  }\n\n  // at this point, the user has presumably seen the 'readable' event,\n  // and called read() to consume some data.  that may have triggered\n  // in turn another _read(n) call, in which case reading = true if\n  // it's in progress.\n  // However, if we're not ended, or reading, and the length < hwm,\n  // then go ahead and try to read some more preemptively.\n  function maybeReadMore(stream, state) {\n    if (!state.readingMore) {\n      state.readingMore = true;\n      nextTick(maybeReadMore_, stream, state);\n    }\n  }\n\n  function maybeReadMore_(stream, state) {\n    var len = state.length;\n    while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n      debug$2('maybeReadMore read 0');\n      stream.read(0);\n      if (len === state.length)\n        // didn't get any data, stop spinning.\n        break;else len = state.length;\n    }\n    state.readingMore = false;\n  }\n\n  // abstract method.  to be overridden in specific implementation classes.\n  // call cb(er, data) where data is <= n in length.\n  // for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n  // arbitrary, and perhaps not very meaningful.\n  Readable.prototype._read = function (n) {\n    this.emit('error', new Error('not implemented'));\n  };\n\n  Readable.prototype.pipe = function (dest, pipeOpts) {\n    var src = this;\n    var state = this._readableState;\n\n    switch (state.pipesCount) {\n      case 0:\n        state.pipes = dest;\n        break;\n      case 1:\n        state.pipes = [state.pipes, dest];\n        break;\n      default:\n        state.pipes.push(dest);\n        break;\n    }\n    state.pipesCount += 1;\n    debug$2('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n    var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n    var endFn = doEnd ? onend : cleanup;\n    if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n    dest.on('unpipe', onunpipe);\n    function onunpipe(readable) {\n      debug$2('onunpipe');\n      if (readable === src) {\n        cleanup();\n      }\n    }\n\n    function onend() {\n      debug$2('onend');\n      dest.end();\n    }\n\n    // when the dest drains, it reduces the awaitDrain counter\n    // on the source.  This would be more elegant with a .once()\n    // handler in flow(), but adding and removing repeatedly is\n    // too slow.\n    var ondrain = pipeOnDrain(src);\n    dest.on('drain', ondrain);\n\n    var cleanedUp = false;\n    function cleanup() {\n      debug$2('cleanup');\n      // cleanup event handlers once the pipe is broken\n      dest.removeListener('close', onclose);\n      dest.removeListener('finish', onfinish);\n      dest.removeListener('drain', ondrain);\n      dest.removeListener('error', onerror);\n      dest.removeListener('unpipe', onunpipe);\n      src.removeListener('end', onend);\n      src.removeListener('end', cleanup);\n      src.removeListener('data', ondata);\n\n      cleanedUp = true;\n\n      // if the reader is waiting for a drain event from this\n      // specific writer, then it would cause it to never start\n      // flowing again.\n      // So, if this is awaiting a drain, then we just call it now.\n      // If we don't know, then assume that we are waiting for one.\n      if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n    }\n\n    // If the user pushes more data while we're writing to dest then we'll end up\n    // in ondata again. However, we only want to increase awaitDrain once because\n    // dest will only emit one 'drain' event for the multiple writes.\n    // => Introduce a guard on increasing awaitDrain.\n    var increasedAwaitDrain = false;\n    src.on('data', ondata);\n    function ondata(chunk) {\n      debug$2('ondata');\n      increasedAwaitDrain = false;\n      var ret = dest.write(chunk);\n      if (false === ret && !increasedAwaitDrain) {\n        // If the user unpiped during `dest.write()`, it is possible\n        // to get stuck in a permanently paused state if that write\n        // also returned false.\n        // => Check whether `dest` is still a piping destination.\n        if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n          debug$2('false write response, pause', src._readableState.awaitDrain);\n          src._readableState.awaitDrain++;\n          increasedAwaitDrain = true;\n        }\n        src.pause();\n      }\n    }\n\n    // if the dest has an error, then stop piping into it.\n    // however, don't suppress the throwing behavior for this.\n    function onerror(er) {\n      debug$2('onerror', er);\n      unpipe();\n      dest.removeListener('error', onerror);\n      if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n    }\n\n    // Make sure our error handler is attached before userland ones.\n    prependListener(dest, 'error', onerror);\n\n    // Both close and finish should trigger unpipe, but only once.\n    function onclose() {\n      dest.removeListener('finish', onfinish);\n      unpipe();\n    }\n    dest.once('close', onclose);\n    function onfinish() {\n      debug$2('onfinish');\n      dest.removeListener('close', onclose);\n      unpipe();\n    }\n    dest.once('finish', onfinish);\n\n    function unpipe() {\n      debug$2('unpipe');\n      src.unpipe(dest);\n    }\n\n    // tell the dest that it's being piped to\n    dest.emit('pipe', src);\n\n    // start the flow if it hasn't been started already.\n    if (!state.flowing) {\n      debug$2('pipe resume');\n      src.resume();\n    }\n\n    return dest;\n  };\n\n  function pipeOnDrain(src) {\n    return function () {\n      var state = src._readableState;\n      debug$2('pipeOnDrain', state.awaitDrain);\n      if (state.awaitDrain) state.awaitDrain--;\n      if (state.awaitDrain === 0 && src.listeners('data').length) {\n        state.flowing = true;\n        flow(src);\n      }\n    };\n  }\n\n  Readable.prototype.unpipe = function (dest) {\n    var state = this._readableState;\n\n    // if we're not piping anywhere, then do nothing.\n    if (state.pipesCount === 0) return this;\n\n    // just one destination.  most common case.\n    if (state.pipesCount === 1) {\n      // passed in one, but it's not the right one.\n      if (dest && dest !== state.pipes) return this;\n\n      if (!dest) dest = state.pipes;\n\n      // got a match.\n      state.pipes = null;\n      state.pipesCount = 0;\n      state.flowing = false;\n      if (dest) dest.emit('unpipe', this);\n      return this;\n    }\n\n    // slow case. multiple pipe destinations.\n\n    if (!dest) {\n      // remove all.\n      var dests = state.pipes;\n      var len = state.pipesCount;\n      state.pipes = null;\n      state.pipesCount = 0;\n      state.flowing = false;\n\n      for (var _i = 0; _i < len; _i++) {\n        dests[_i].emit('unpipe', this);\n      }return this;\n    }\n\n    // try to find the right one.\n    var i = indexOf(state.pipes, dest);\n    if (i === -1) return this;\n\n    state.pipes.splice(i, 1);\n    state.pipesCount -= 1;\n    if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n    dest.emit('unpipe', this);\n\n    return this;\n  };\n\n  // set up data events if they are asked for\n  // Ensure readable listeners eventually get something\n  Readable.prototype.on = function (ev, fn) {\n    var res = EventEmitter$2.prototype.on.call(this, ev, fn);\n\n    if (ev === 'data') {\n      // Start flowing on next tick if stream isn't explicitly paused\n      if (this._readableState.flowing !== false) this.resume();\n    } else if (ev === 'readable') {\n      var state = this._readableState;\n      if (!state.endEmitted && !state.readableListening) {\n        state.readableListening = state.needReadable = true;\n        state.emittedReadable = false;\n        if (!state.reading) {\n          nextTick(nReadingNextTick, this);\n        } else if (state.length) {\n          emitReadable(this);\n        }\n      }\n    }\n\n    return res;\n  };\n  Readable.prototype.addListener = Readable.prototype.on;\n\n  function nReadingNextTick(self) {\n    debug$2('readable nexttick read 0');\n    self.read(0);\n  }\n\n  // pause() and resume() are remnants of the legacy readable stream API\n  // If the user uses them, then switch into old mode.\n  Readable.prototype.resume = function () {\n    var state = this._readableState;\n    if (!state.flowing) {\n      debug$2('resume');\n      state.flowing = true;\n      resume(this, state);\n    }\n    return this;\n  };\n\n  function resume(stream, state) {\n    if (!state.resumeScheduled) {\n      state.resumeScheduled = true;\n      nextTick(resume_, stream, state);\n    }\n  }\n\n  function resume_(stream, state) {\n    if (!state.reading) {\n      debug$2('resume read 0');\n      stream.read(0);\n    }\n\n    state.resumeScheduled = false;\n    state.awaitDrain = 0;\n    stream.emit('resume');\n    flow(stream);\n    if (state.flowing && !state.reading) stream.read(0);\n  }\n\n  Readable.prototype.pause = function () {\n    debug$2('call pause flowing=%j', this._readableState.flowing);\n    if (false !== this._readableState.flowing) {\n      debug$2('pause');\n      this._readableState.flowing = false;\n      this.emit('pause');\n    }\n    return this;\n  };\n\n  function flow(stream) {\n    var state = stream._readableState;\n    debug$2('flow', state.flowing);\n    while (state.flowing && stream.read() !== null) {}\n  }\n\n  // wrap an old-style stream as the async data source.\n  // This is *not* part of the readable stream interface.\n  // It is an ugly unfortunate mess of history.\n  Readable.prototype.wrap = function (stream) {\n    var state = this._readableState;\n    var paused = false;\n\n    var self = this;\n    stream.on('end', function () {\n      debug$2('wrapped end');\n      if (state.decoder && !state.ended) {\n        var chunk = state.decoder.end();\n        if (chunk && chunk.length) self.push(chunk);\n      }\n\n      self.push(null);\n    });\n\n    stream.on('data', function (chunk) {\n      debug$2('wrapped data');\n      if (state.decoder) chunk = state.decoder.write(chunk);\n\n      // don't skip over falsy values in objectMode\n      if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n      var ret = self.push(chunk);\n      if (!ret) {\n        paused = true;\n        stream.pause();\n      }\n    });\n\n    // proxy all the other methods.\n    // important when wrapping filters and duplexes.\n    for (var i in stream) {\n      if (this[i] === undefined && typeof stream[i] === 'function') {\n        this[i] = function (method) {\n          return function () {\n            return stream[method].apply(stream, arguments);\n          };\n        }(i);\n      }\n    }\n\n    // proxy certain important events.\n    var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n    forEach(events, function (ev) {\n      stream.on(ev, self.emit.bind(self, ev));\n    });\n\n    // when we try to consume some more bytes, simply unpause the\n    // underlying stream.\n    self._read = function (n) {\n      debug$2('wrapped _read', n);\n      if (paused) {\n        paused = false;\n        stream.resume();\n      }\n    };\n\n    return self;\n  };\n\n  // exposed for testing purposes only.\n  Readable._fromList = fromList;\n\n  // Pluck off n bytes from an array of buffers.\n  // Length is the combined lengths of all the buffers in the list.\n  // This function is designed to be inlinable, so please take care when making\n  // changes to the function body.\n  function fromList(n, state) {\n    // nothing buffered\n    if (state.length === 0) return null;\n\n    var ret;\n    if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n      // read it all, truncate the list\n      if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n      state.buffer.clear();\n    } else {\n      // read part of list\n      ret = fromListPartial(n, state.buffer, state.decoder);\n    }\n\n    return ret;\n  }\n\n  // Extracts only enough buffered data to satisfy the amount requested.\n  // This function is designed to be inlinable, so please take care when making\n  // changes to the function body.\n  function fromListPartial(n, list, hasStrings) {\n    var ret;\n    if (n < list.head.data.length) {\n      // slice is the same for buffers and strings\n      ret = list.head.data.slice(0, n);\n      list.head.data = list.head.data.slice(n);\n    } else if (n === list.head.data.length) {\n      // first chunk is a perfect match\n      ret = list.shift();\n    } else {\n      // result spans more than one buffer\n      ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n    }\n    return ret;\n  }\n\n  // Copies a specified amount of characters from the list of buffered data\n  // chunks.\n  // This function is designed to be inlinable, so please take care when making\n  // changes to the function body.\n  function copyFromBufferString(n, list) {\n    var p = list.head;\n    var c = 1;\n    var ret = p.data;\n    n -= ret.length;\n    while (p = p.next) {\n      var str = p.data;\n      var nb = n > str.length ? str.length : n;\n      if (nb === str.length) ret += str;else ret += str.slice(0, n);\n      n -= nb;\n      if (n === 0) {\n        if (nb === str.length) {\n          ++c;\n          if (p.next) list.head = p.next;else list.head = list.tail = null;\n        } else {\n          list.head = p;\n          p.data = str.slice(nb);\n        }\n        break;\n      }\n      ++c;\n    }\n    list.length -= c;\n    return ret;\n  }\n\n  // Copies a specified amount of bytes from the list of buffered data chunks.\n  // This function is designed to be inlinable, so please take care when making\n  // changes to the function body.\n  function copyFromBuffer(n, list) {\n    var ret = Buffer$1.allocUnsafe(n);\n    var p = list.head;\n    var c = 1;\n    p.data.copy(ret);\n    n -= p.data.length;\n    while (p = p.next) {\n      var buf = p.data;\n      var nb = n > buf.length ? buf.length : n;\n      buf.copy(ret, ret.length - n, 0, nb);\n      n -= nb;\n      if (n === 0) {\n        if (nb === buf.length) {\n          ++c;\n          if (p.next) list.head = p.next;else list.head = list.tail = null;\n        } else {\n          list.head = p;\n          p.data = buf.slice(nb);\n        }\n        break;\n      }\n      ++c;\n    }\n    list.length -= c;\n    return ret;\n  }\n\n  function endReadable(stream) {\n    var state = stream._readableState;\n\n    // If we get here before consuming all the bytes, then that is a\n    // bug in node.  Should never happen.\n    if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n    if (!state.endEmitted) {\n      state.ended = true;\n      nextTick(endReadableNT, state, stream);\n    }\n  }\n\n  function endReadableNT(state, stream) {\n    // Check that we didn't get one last unshift.\n    if (!state.endEmitted && state.length === 0) {\n      state.endEmitted = true;\n      stream.readable = false;\n      stream.emit('end');\n    }\n  }\n\n  function forEach(xs, f) {\n    for (var i = 0, l = xs.length; i < l; i++) {\n      f(xs[i], i);\n    }\n  }\n\n  function indexOf(xs, x) {\n    for (var i = 0, l = xs.length; i < l; i++) {\n      if (xs[i] === x) return i;\n    }\n    return -1;\n  }\n\n  // A bit simpler than readable streams.\n  Writable.WritableState = WritableState;\n  inherits$3(Writable, EventEmitter$2);\n\n  function nop() {}\n\n  function WriteReq(chunk, encoding, cb) {\n    this.chunk = chunk;\n    this.encoding = encoding;\n    this.callback = cb;\n    this.next = null;\n  }\n\n  function WritableState(options, stream) {\n    Object.defineProperty(this, 'buffer', {\n      get: deprecate$1(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n    });\n    options = options || {};\n\n    // object stream flag to indicate whether or not this stream\n    // contains buffers or objects.\n    this.objectMode = !!options.objectMode;\n\n    if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n    // the point at which write() starts returning false\n    // Note: 0 is a valid value, means that we always return false if\n    // the entire buffer is not flushed immediately on write()\n    var hwm = options.highWaterMark;\n    var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n    this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n    // cast to ints.\n    this.highWaterMark = ~ ~this.highWaterMark;\n\n    this.needDrain = false;\n    // at the start of calling end()\n    this.ending = false;\n    // when end() has been called, and returned\n    this.ended = false;\n    // when 'finish' is emitted\n    this.finished = false;\n\n    // should we decode strings into buffers before passing to _write?\n    // this is here so that some node-core streams can optimize string\n    // handling at a lower level.\n    var noDecode = options.decodeStrings === false;\n    this.decodeStrings = !noDecode;\n\n    // Crypto is kind of old and crusty.  Historically, its default string\n    // encoding is 'binary' so we have to make this configurable.\n    // Everything else in the universe uses 'utf8', though.\n    this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n    // not an actual buffer we keep track of, but a measurement\n    // of how much we're waiting to get pushed to some underlying\n    // socket or file.\n    this.length = 0;\n\n    // a flag to see when we're in the middle of a write.\n    this.writing = false;\n\n    // when true all writes will be buffered until .uncork() call\n    this.corked = 0;\n\n    // a flag to be able to tell if the onwrite cb is called immediately,\n    // or on a later tick.  We set this to true at first, because any\n    // actions that shouldn't happen until \"later\" should generally also\n    // not happen before the first write call.\n    this.sync = true;\n\n    // a flag to know if we're processing previously buffered items, which\n    // may call the _write() callback in the same tick, so that we don't\n    // end up in an overlapped onwrite situation.\n    this.bufferProcessing = false;\n\n    // the callback that's passed to _write(chunk,cb)\n    this.onwrite = function (er) {\n      onwrite(stream, er);\n    };\n\n    // the callback that the user supplies to write(chunk,encoding,cb)\n    this.writecb = null;\n\n    // the amount that is being written when _write is called.\n    this.writelen = 0;\n\n    this.bufferedRequest = null;\n    this.lastBufferedRequest = null;\n\n    // number of pending user-supplied write callbacks\n    // this must be 0 before 'finish' can be emitted\n    this.pendingcb = 0;\n\n    // emit prefinish if the only thing we're waiting for is _write cbs\n    // This is relevant for synchronous Transform streams\n    this.prefinished = false;\n\n    // True if the error was already emitted and should not be thrown again\n    this.errorEmitted = false;\n\n    // count buffered requests\n    this.bufferedRequestCount = 0;\n\n    // allocate the first CorkedRequest, there is always\n    // one allocated and free to use, and we maintain at most two\n    this.corkedRequestsFree = new CorkedRequest(this);\n  }\n\n  WritableState.prototype.getBuffer = function writableStateGetBuffer() {\n    var current = this.bufferedRequest;\n    var out = [];\n    while (current) {\n      out.push(current);\n      current = current.next;\n    }\n    return out;\n  };\n  function Writable(options) {\n\n    // Writable ctor is applied to Duplexes, though they're not\n    // instanceof Writable, they're instanceof Readable.\n    if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n    this._writableState = new WritableState(options, this);\n\n    // legacy.\n    this.writable = true;\n\n    if (options) {\n      if (typeof options.write === 'function') this._write = options.write;\n\n      if (typeof options.writev === 'function') this._writev = options.writev;\n    }\n\n    EventEmitter$2.call(this);\n  }\n\n  // Otherwise people can pipe Writable streams, which is just wrong.\n  Writable.prototype.pipe = function () {\n    this.emit('error', new Error('Cannot pipe, not readable'));\n  };\n\n  function writeAfterEnd(stream, cb) {\n    var er = new Error('write after end');\n    // TODO: defer error events consistently everywhere, not just the cb\n    stream.emit('error', er);\n    nextTick(cb, er);\n  }\n\n  // If we get something that is not a buffer, string, null, or undefined,\n  // and we're not in objectMode, then that's an error.\n  // Otherwise stream chunks are all considered to be of length=1, and the\n  // watermarks determine how many objects to keep in the buffer, rather than\n  // how many bytes or characters.\n  function validChunk(stream, state, chunk, cb) {\n    var valid = true;\n    var er = false;\n    // Always throw error if a null is written\n    // if we are not in object mode then throw\n    // if it is not a buffer, string, or undefined.\n    if (chunk === null) {\n      er = new TypeError('May not write null values to stream');\n    } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n      er = new TypeError('Invalid non-string/buffer chunk');\n    }\n    if (er) {\n      stream.emit('error', er);\n      nextTick(cb, er);\n      valid = false;\n    }\n    return valid;\n  }\n\n  Writable.prototype.write = function (chunk, encoding, cb) {\n    var state = this._writableState;\n    var ret = false;\n\n    if (typeof encoding === 'function') {\n      cb = encoding;\n      encoding = null;\n    }\n\n    if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n    if (typeof cb !== 'function') cb = nop;\n\n    if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n      state.pendingcb++;\n      ret = writeOrBuffer(this, state, chunk, encoding, cb);\n    }\n\n    return ret;\n  };\n\n  Writable.prototype.cork = function () {\n    var state = this._writableState;\n\n    state.corked++;\n  };\n\n  Writable.prototype.uncork = function () {\n    var state = this._writableState;\n\n    if (state.corked) {\n      state.corked--;\n\n      if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n    }\n  };\n\n  Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n    // node::ParseEncoding() requires lower case.\n    if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n    if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n    this._writableState.defaultEncoding = encoding;\n    return this;\n  };\n\n  function decodeChunk(state, chunk, encoding) {\n    if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n      chunk = Buffer.from(chunk, encoding);\n    }\n    return chunk;\n  }\n\n  // if we're already writing something, then just put this\n  // in the queue, and wait our turn.  Otherwise, call _write\n  // If we return false, then we need a drain event, so set that flag.\n  function writeOrBuffer(stream, state, chunk, encoding, cb) {\n    chunk = decodeChunk(state, chunk, encoding);\n\n    if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n    var len = state.objectMode ? 1 : chunk.length;\n\n    state.length += len;\n\n    var ret = state.length < state.highWaterMark;\n    // we must ensure that previous needDrain will not be reset to false.\n    if (!ret) state.needDrain = true;\n\n    if (state.writing || state.corked) {\n      var last = state.lastBufferedRequest;\n      state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n      if (last) {\n        last.next = state.lastBufferedRequest;\n      } else {\n        state.bufferedRequest = state.lastBufferedRequest;\n      }\n      state.bufferedRequestCount += 1;\n    } else {\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n    }\n\n    return ret;\n  }\n\n  function doWrite(stream, state, writev, len, chunk, encoding, cb) {\n    state.writelen = len;\n    state.writecb = cb;\n    state.writing = true;\n    state.sync = true;\n    if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n    state.sync = false;\n  }\n\n  function onwriteError(stream, state, sync, er, cb) {\n    --state.pendingcb;\n    if (sync) nextTick(cb, er);else cb(er);\n\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  }\n\n  function onwriteStateUpdate(state) {\n    state.writing = false;\n    state.writecb = null;\n    state.length -= state.writelen;\n    state.writelen = 0;\n  }\n\n  function onwrite(stream, er) {\n    var state = stream._writableState;\n    var sync = state.sync;\n    var cb = state.writecb;\n\n    onwriteStateUpdate(state);\n\n    if (er) onwriteError(stream, state, sync, er, cb);else {\n      // Check if we're actually ready to finish, but don't emit yet\n      var finished = needFinish(state);\n\n      if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n        clearBuffer(stream, state);\n      }\n\n      if (sync) {\n        /*<replacement>*/\n          nextTick(afterWrite, stream, state, finished, cb);\n        /*</replacement>*/\n      } else {\n          afterWrite(stream, state, finished, cb);\n        }\n    }\n  }\n\n  function afterWrite(stream, state, finished, cb) {\n    if (!finished) onwriteDrain(stream, state);\n    state.pendingcb--;\n    cb();\n    finishMaybe(stream, state);\n  }\n\n  // Must force callback to be called on nextTick, so that we don't\n  // emit 'drain' before the write() consumer gets the 'false' return\n  // value, and has a chance to attach a 'drain' listener.\n  function onwriteDrain(stream, state) {\n    if (state.length === 0 && state.needDrain) {\n      state.needDrain = false;\n      stream.emit('drain');\n    }\n  }\n\n  // if there's something in the buffer waiting, then process it\n  function clearBuffer(stream, state) {\n    state.bufferProcessing = true;\n    var entry = state.bufferedRequest;\n\n    if (stream._writev && entry && entry.next) {\n      // Fast case, write everything using _writev()\n      var l = state.bufferedRequestCount;\n      var buffer = new Array(l);\n      var holder = state.corkedRequestsFree;\n      holder.entry = entry;\n\n      var count = 0;\n      while (entry) {\n        buffer[count] = entry;\n        entry = entry.next;\n        count += 1;\n      }\n\n      doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n      // doWrite is almost always async, defer these to save a bit of time\n      // as the hot path ends with doWrite\n      state.pendingcb++;\n      state.lastBufferedRequest = null;\n      if (holder.next) {\n        state.corkedRequestsFree = holder.next;\n        holder.next = null;\n      } else {\n        state.corkedRequestsFree = new CorkedRequest(state);\n      }\n    } else {\n      // Slow case, write chunks one-by-one\n      while (entry) {\n        var chunk = entry.chunk;\n        var encoding = entry.encoding;\n        var cb = entry.callback;\n        var len = state.objectMode ? 1 : chunk.length;\n\n        doWrite(stream, state, false, len, chunk, encoding, cb);\n        entry = entry.next;\n        // if we didn't call the onwrite immediately, then\n        // it means that we need to wait until it does.\n        // also, that means that the chunk and cb are currently\n        // being processed, so move the buffer counter past them.\n        if (state.writing) {\n          break;\n        }\n      }\n\n      if (entry === null) state.lastBufferedRequest = null;\n    }\n\n    state.bufferedRequestCount = 0;\n    state.bufferedRequest = entry;\n    state.bufferProcessing = false;\n  }\n\n  Writable.prototype._write = function (chunk, encoding, cb) {\n    cb(new Error('not implemented'));\n  };\n\n  Writable.prototype._writev = null;\n\n  Writable.prototype.end = function (chunk, encoding, cb) {\n    var state = this._writableState;\n\n    if (typeof chunk === 'function') {\n      cb = chunk;\n      chunk = null;\n      encoding = null;\n    } else if (typeof encoding === 'function') {\n      cb = encoding;\n      encoding = null;\n    }\n\n    if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n    // .end() fully uncorks\n    if (state.corked) {\n      state.corked = 1;\n      this.uncork();\n    }\n\n    // ignore unnecessary end() calls.\n    if (!state.ending && !state.finished) endWritable(this, state, cb);\n  };\n\n  function needFinish(state) {\n    return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n  }\n\n  function prefinish(stream, state) {\n    if (!state.prefinished) {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n\n  function finishMaybe(stream, state) {\n    var need = needFinish(state);\n    if (need) {\n      if (state.pendingcb === 0) {\n        prefinish(stream, state);\n        state.finished = true;\n        stream.emit('finish');\n      } else {\n        prefinish(stream, state);\n      }\n    }\n    return need;\n  }\n\n  function endWritable(stream, state, cb) {\n    state.ending = true;\n    finishMaybe(stream, state);\n    if (cb) {\n      if (state.finished) nextTick(cb);else stream.once('finish', cb);\n    }\n    state.ended = true;\n    stream.writable = false;\n  }\n\n  // It seems a linked list but it is not\n  // there will be only 2 of these for each stream\n  function CorkedRequest(state) {\n    var _this = this;\n\n    this.next = null;\n    this.entry = null;\n\n    this.finish = function (err) {\n      var entry = _this.entry;\n      _this.entry = null;\n      while (entry) {\n        var cb = entry.callback;\n        state.pendingcb--;\n        cb(err);\n        entry = entry.next;\n      }\n      if (state.corkedRequestsFree) {\n        state.corkedRequestsFree.next = _this;\n      } else {\n        state.corkedRequestsFree = _this;\n      }\n    };\n  }\n\n  inherits$3(Duplex, Readable);\n\n  var keys = Object.keys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n  function Duplex(options) {\n    if (!(this instanceof Duplex)) return new Duplex(options);\n\n    Readable.call(this, options);\n    Writable.call(this, options);\n\n    if (options && options.readable === false) this.readable = false;\n\n    if (options && options.writable === false) this.writable = false;\n\n    this.allowHalfOpen = true;\n    if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n    this.once('end', onend);\n  }\n\n  // the no-half-open enforcer\n  function onend() {\n    // if we allow half-open state, or if the writable side ended,\n    // then we're ok.\n    if (this.allowHalfOpen || this._writableState.ended) return;\n\n    // no more data can be written.\n    // But allow more writes to happen in this tick.\n    nextTick(onEndNT, this);\n  }\n\n  function onEndNT(self) {\n    self.end();\n  }\n\n  // a transform stream is a readable/writable stream where you do\n  inherits$3(Transform, Duplex);\n\n  function TransformState(stream) {\n    this.afterTransform = function (er, data) {\n      return afterTransform(stream, er, data);\n    };\n\n    this.needTransform = false;\n    this.transforming = false;\n    this.writecb = null;\n    this.writechunk = null;\n    this.writeencoding = null;\n  }\n\n  function afterTransform(stream, er, data) {\n    var ts = stream._transformState;\n    ts.transforming = false;\n\n    var cb = ts.writecb;\n\n    if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n    ts.writechunk = null;\n    ts.writecb = null;\n\n    if (data !== null && data !== undefined) stream.push(data);\n\n    cb(er);\n\n    var rs = stream._readableState;\n    rs.reading = false;\n    if (rs.needReadable || rs.length < rs.highWaterMark) {\n      stream._read(rs.highWaterMark);\n    }\n  }\n  function Transform(options) {\n    if (!(this instanceof Transform)) return new Transform(options);\n\n    Duplex.call(this, options);\n\n    this._transformState = new TransformState(this);\n\n    // when the writable side finishes, then flush out anything remaining.\n    var stream = this;\n\n    // start out asking for a readable event once data is transformed.\n    this._readableState.needReadable = true;\n\n    // we have implemented the _read method, and done the other things\n    // that Readable wants before the first _read call, so unset the\n    // sync guard flag.\n    this._readableState.sync = false;\n\n    if (options) {\n      if (typeof options.transform === 'function') this._transform = options.transform;\n\n      if (typeof options.flush === 'function') this._flush = options.flush;\n    }\n\n    this.once('prefinish', function () {\n      if (typeof this._flush === 'function') this._flush(function (er) {\n        done(stream, er);\n      });else done(stream);\n    });\n  }\n\n  Transform.prototype.push = function (chunk, encoding) {\n    this._transformState.needTransform = false;\n    return Duplex.prototype.push.call(this, chunk, encoding);\n  };\n\n  // This is the part where you do stuff!\n  // override this function in implementation classes.\n  // 'chunk' is an input chunk.\n  //\n  // Call `push(newChunk)` to pass along transformed output\n  // to the readable side.  You may call 'push' zero or more times.\n  //\n  // Call `cb(err)` when you are done with this chunk.  If you pass\n  // an error, then that'll put the hurt on the whole operation.  If you\n  // never call cb(), then you'll never get another chunk.\n  Transform.prototype._transform = function (chunk, encoding, cb) {\n    throw new Error('Not implemented');\n  };\n\n  Transform.prototype._write = function (chunk, encoding, cb) {\n    var ts = this._transformState;\n    ts.writecb = cb;\n    ts.writechunk = chunk;\n    ts.writeencoding = encoding;\n    if (!ts.transforming) {\n      var rs = this._readableState;\n      if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n    }\n  };\n\n  // Doesn't matter what the args are here.\n  // _transform does all the work.\n  // That we got here means that the readable side wants more data.\n  Transform.prototype._read = function (n) {\n    var ts = this._transformState;\n\n    if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n      ts.transforming = true;\n      this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n    } else {\n      // mark that we need a transform, so that any data that comes in\n      // will get processed, now that we've asked for it.\n      ts.needTransform = true;\n    }\n  };\n\n  function done(stream, er) {\n    if (er) return stream.emit('error', er);\n\n    // if there's nothing in the write buffer, then that means\n    // that nothing more will ever be provided\n    var ws = stream._writableState;\n    var ts = stream._transformState;\n\n    if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n    if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n    return stream.push(null);\n  }\n\n  inherits$3(PassThrough, Transform);\n  function PassThrough(options) {\n    if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n    Transform.call(this, options);\n  }\n\n  PassThrough.prototype._transform = function (chunk, encoding, cb) {\n    cb(null, chunk);\n  };\n\n  inherits$3(Stream, EventEmitter$2);\n  Stream.Readable = Readable;\n  Stream.Writable = Writable;\n  Stream.Duplex = Duplex;\n  Stream.Transform = Transform;\n  Stream.PassThrough = PassThrough;\n\n  // Backwards-compat with node 0.4.x\n  Stream.Stream = Stream;\n\n  // old-style streams.  Note that the pipe method (the only relevant\n  // part of this class) is overridden in the Readable class.\n\n  function Stream() {\n    EventEmitter$2.call(this);\n  }\n\n  Stream.prototype.pipe = function(dest, options) {\n    var source = this;\n\n    function ondata(chunk) {\n      if (dest.writable) {\n        if (false === dest.write(chunk) && source.pause) {\n          source.pause();\n        }\n      }\n    }\n\n    source.on('data', ondata);\n\n    function ondrain() {\n      if (source.readable && source.resume) {\n        source.resume();\n      }\n    }\n\n    dest.on('drain', ondrain);\n\n    // If the 'end' option is not supplied, dest.end() will be called when\n    // source gets the 'end' or 'close' events.  Only dest.end() once.\n    if (!dest._isStdio && (!options || options.end !== false)) {\n      source.on('end', onend);\n      source.on('close', onclose);\n    }\n\n    var didOnEnd = false;\n    function onend() {\n      if (didOnEnd) return;\n      didOnEnd = true;\n\n      dest.end();\n    }\n\n\n    function onclose() {\n      if (didOnEnd) return;\n      didOnEnd = true;\n\n      if (typeof dest.destroy === 'function') dest.destroy();\n    }\n\n    // don't leave dangling pipes when there are errors.\n    function onerror(er) {\n      cleanup();\n      if (EventEmitter$2.listenerCount(this, 'error') === 0) {\n        throw er; // Unhandled stream error in pipe.\n      }\n    }\n\n    source.on('error', onerror);\n    dest.on('error', onerror);\n\n    // remove all the event listeners that were added.\n    function cleanup() {\n      source.removeListener('data', ondata);\n      dest.removeListener('drain', ondrain);\n\n      source.removeListener('end', onend);\n      source.removeListener('close', onclose);\n\n      source.removeListener('error', onerror);\n      dest.removeListener('error', onerror);\n\n      source.removeListener('end', cleanup);\n      source.removeListener('close', cleanup);\n\n      dest.removeListener('close', cleanup);\n    }\n\n    source.on('end', cleanup);\n    source.on('close', cleanup);\n\n    dest.on('close', cleanup);\n\n    dest.emit('pipe', source);\n\n    // Allow for unix-like usage: A.pipe(B).pipe(C)\n    return dest;\n  };\n\n  var WritableStream = Stream.Writable;\n  var inherits$1 = util.inherits;\n\n  var browserStdout = BrowserStdout;\n\n\n  inherits$1(BrowserStdout, WritableStream);\n\n  function BrowserStdout(opts) {\n    if (!(this instanceof BrowserStdout)) return new BrowserStdout(opts)\n\n    opts = opts || {};\n    WritableStream.call(this, opts);\n    this.label = (opts.label !== undefined) ? opts.label : 'stdout';\n  }\n\n  BrowserStdout.prototype._write = function(chunks, encoding, cb) {\n    var output = chunks.toString ? chunks.toString() : chunks;\n    if (this.label === false) {\n      console.log(output);\n    } else {\n      console.log(this.label+':', output);\n    }\n    nextTick$1(cb);\n  };\n\n  /**\n   * Parse the given `qs`.\n   *\n   * @private\n   * @param {string} qs\n   * @return {Object<string, string>}\n   */\n  var parseQuery = function parseQuery(qs) {\n    return qs\n      .replace('?', '')\n      .split('&')\n      .reduce(function(obj, pair) {\n        var i = pair.indexOf('=');\n        var key = pair.slice(0, i);\n        var val = pair.slice(++i);\n\n        // Due to how the URLSearchParams API treats spaces\n        obj[key] = decodeURIComponent(val.replace(/\\+/g, '%20'));\n\n        return obj;\n      }, {});\n  };\n\n  /**\n   * Highlight the given string of `js`.\n   *\n   * @private\n   * @param {string} js\n   * @return {string}\n   */\n  function highlight(js) {\n    return js\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\\/\\/(.*)/gm, '<span class=\"comment\">//$1</span>')\n      .replace(/('.*?')/gm, '<span class=\"string\">$1</span>')\n      .replace(/(\\d+\\.\\d+)/gm, '<span class=\"number\">$1</span>')\n      .replace(/(\\d+)/gm, '<span class=\"number\">$1</span>')\n      .replace(\n        /\\bnew[ \\t]+(\\w+)/gm,\n        '<span class=\"keyword\">new</span> <span class=\"init\">$1</span>'\n      )\n      .replace(\n        /\\b(function|new|throw|return|var|if|else)\\b/gm,\n        '<span class=\"keyword\">$1</span>'\n      );\n  }\n\n  /**\n   * Highlight the contents of tag `name`.\n   *\n   * @private\n   * @param {string} name\n   */\n  var highlightTags = function highlightTags(name) {\n    var code = document.getElementById('mocha').getElementsByTagName(name);\n    for (var i = 0, len = code.length; i < len; ++i) {\n      code[i].innerHTML = highlight(code[i].innerHTML);\n    }\n  };\n\n  var escapeStringRegexp = string => {\n  \tif (typeof string !== 'string') {\n  \t\tthrow new TypeError('Expected a string');\n  \t}\n\n  \t// Escape characters with special meaning either inside or outside character sets.\n  \t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n  \treturn string\n  \t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n  \t\t.replace(/-/g, '\\\\x2d');\n  };\n\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // resolves . and .. elements in a path array with directory names there\n  // must be no slashes, empty elements, or device names (c:\\) in the array\n  // (so also no leading and trailing slashes - it does not distinguish\n  // relative and absolute paths)\n  function normalizeArray(parts, allowAboveRoot) {\n    // if the path tries to go above the root, `up` ends up > 0\n    var up = 0;\n    for (var i = parts.length - 1; i >= 0; i--) {\n      var last = parts[i];\n      if (last === '.') {\n        parts.splice(i, 1);\n      } else if (last === '..') {\n        parts.splice(i, 1);\n        up++;\n      } else if (up) {\n        parts.splice(i, 1);\n        up--;\n      }\n    }\n\n    // if the path is allowed to go above the root, restore leading ..s\n    if (allowAboveRoot) {\n      for (; up--; up) {\n        parts.unshift('..');\n      }\n    }\n\n    return parts;\n  }\n\n  // Split a filename into [root, dir, basename, ext], unix version\n  // 'root' is just a slash, or nothing.\n  var splitPathRe =\n      /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n  var splitPath = function(filename) {\n    return splitPathRe.exec(filename).slice(1);\n  };\n\n  // path.resolve([from ...], to)\n  // posix version\n  function resolve() {\n    var resolvedPath = '',\n        resolvedAbsolute = false;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path = (i >= 0) ? arguments[i] : '/';\n\n      // Skip empty and invalid entries\n      if (typeof path !== 'string') {\n        throw new TypeError('Arguments to path.resolve must be strings');\n      } else if (!path) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charAt(0) === '/';\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n      return !!p;\n    }), !resolvedAbsolute).join('/');\n\n    return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n  }\n  // path.normalize(path)\n  // posix version\n  function normalize(path) {\n    var isPathAbsolute = isAbsolute(path),\n        trailingSlash = substr(path, -1) === '/';\n\n    // Normalize the path\n    path = normalizeArray(filter(path.split('/'), function(p) {\n      return !!p;\n    }), !isPathAbsolute).join('/');\n\n    if (!path && !isPathAbsolute) {\n      path = '.';\n    }\n    if (path && trailingSlash) {\n      path += '/';\n    }\n\n    return (isPathAbsolute ? '/' : '') + path;\n  }\n  // posix version\n  function isAbsolute(path) {\n    return path.charAt(0) === '/';\n  }\n\n  // posix version\n  function join() {\n    var paths = Array.prototype.slice.call(arguments, 0);\n    return normalize(filter(paths, function(p, index) {\n      if (typeof p !== 'string') {\n        throw new TypeError('Arguments to path.join must be strings');\n      }\n      return p;\n    }).join('/'));\n  }\n\n\n  // path.relative(from, to)\n  // posix version\n  function relative(from, to) {\n    from = resolve(from).substr(1);\n    to = resolve(to).substr(1);\n\n    function trim(arr) {\n      var start = 0;\n      for (; start < arr.length; start++) {\n        if (arr[start] !== '') break;\n      }\n\n      var end = arr.length - 1;\n      for (; end >= 0; end--) {\n        if (arr[end] !== '') break;\n      }\n\n      if (start > end) return [];\n      return arr.slice(start, end - start + 1);\n    }\n\n    var fromParts = trim(from.split('/'));\n    var toParts = trim(to.split('/'));\n\n    var length = Math.min(fromParts.length, toParts.length);\n    var samePartsLength = length;\n    for (var i = 0; i < length; i++) {\n      if (fromParts[i] !== toParts[i]) {\n        samePartsLength = i;\n        break;\n      }\n    }\n\n    var outputParts = [];\n    for (var i = samePartsLength; i < fromParts.length; i++) {\n      outputParts.push('..');\n    }\n\n    outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n    return outputParts.join('/');\n  }\n\n  var sep = '/';\n  var delimiter = ':';\n\n  function dirname(path) {\n    var result = splitPath(path),\n        root = result[0],\n        dir = result[1];\n\n    if (!root && !dir) {\n      // No dirname whatsoever\n      return '.';\n    }\n\n    if (dir) {\n      // It has a dirname, strip trailing slash\n      dir = dir.substr(0, dir.length - 1);\n    }\n\n    return root + dir;\n  }\n\n  function basename(path, ext) {\n    var f = splitPath(path)[2];\n    // TODO: make this comparison case-insensitive on windows?\n    if (ext && f.substr(-1 * ext.length) === ext) {\n      f = f.substr(0, f.length - ext.length);\n    }\n    return f;\n  }\n\n\n  function extname(path) {\n    return splitPath(path)[3];\n  }\n  var path = {\n    extname: extname,\n    basename: basename,\n    dirname: dirname,\n    sep: sep,\n    delimiter: delimiter,\n    relative: relative,\n    join: join,\n    isAbsolute: isAbsolute,\n    normalize: normalize,\n    resolve: resolve\n  };\n  function filter (xs, f) {\n      if (xs.filter) return xs.filter(f);\n      var res = [];\n      for (var i = 0; i < xs.length; i++) {\n          if (f(xs[i], i, xs)) res.push(xs[i]);\n      }\n      return res;\n  }\n\n  // String.prototype.substr - negative index don't work in IE8\n  var substr = 'ab'.substr(-1) === 'b' ?\n      function (str, start, len) { return str.substr(start, len) } :\n      function (str, start, len) {\n          if (start < 0) start = str.length + start;\n          return str.substr(start, len);\n      }\n  ;\n\n  var diff$1 = createCommonjsModule(function (module, exports) {\n  (function (global, factory) {\n    factory(exports) ;\n  }(commonjsGlobal, (function (exports) {\n    function Diff() {}\n    Diff.prototype = {\n      diff: function diff(oldString, newString) {\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        var callback = options.callback;\n\n        if (typeof options === 'function') {\n          callback = options;\n          options = {};\n        }\n\n        this.options = options;\n        var self = this;\n\n        function done(value) {\n          if (callback) {\n            setTimeout(function () {\n              callback(undefined, value);\n            }, 0);\n            return true;\n          } else {\n            return value;\n          }\n        } // Allow subclasses to massage the input prior to running\n\n\n        oldString = this.castInput(oldString);\n        newString = this.castInput(newString);\n        oldString = this.removeEmpty(this.tokenize(oldString));\n        newString = this.removeEmpty(this.tokenize(newString));\n        var newLen = newString.length,\n            oldLen = oldString.length;\n        var editLength = 1;\n        var maxEditLength = newLen + oldLen;\n        var bestPath = [{\n          newPos: -1,\n          components: []\n        }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n        var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n        if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          // Identity per the equality and tokenizer\n          return done([{\n            value: this.join(newString),\n            count: newString.length\n          }]);\n        } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n        function execEditLength() {\n          for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n            var basePath = void 0;\n\n            var addPath = bestPath[diagonalPath - 1],\n                removePath = bestPath[diagonalPath + 1],\n                _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n            if (addPath) {\n              // No one else is going to attempt to use this value, clear it\n              bestPath[diagonalPath - 1] = undefined;\n            }\n\n            var canAdd = addPath && addPath.newPos + 1 < newLen,\n                canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n            if (!canAdd && !canRemove) {\n              // If this path is a terminal then prune\n              bestPath[diagonalPath] = undefined;\n              continue;\n            } // Select the diagonal that we want to branch from. We select the prior\n            // path whose position in the new string is the farthest from the origin\n            // and does not pass the bounds of the diff graph\n\n\n            if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n              basePath = clonePath(removePath);\n              self.pushComponent(basePath.components, undefined, true);\n            } else {\n              basePath = addPath; // No need to clone, we've pulled it from the list\n\n              basePath.newPos++;\n              self.pushComponent(basePath.components, true, undefined);\n            }\n\n            _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n            if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n              return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n            } else {\n              // Otherwise track this path as a potential candidate and continue.\n              bestPath[diagonalPath] = basePath;\n            }\n          }\n\n          editLength++;\n        } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n        // sync and async mode which is never fun. Loops over execEditLength until a value\n        // is produced.\n\n\n        if (callback) {\n          (function exec() {\n            setTimeout(function () {\n              // This should not happen, but we want to be safe.\n\n              /* istanbul ignore next */\n              if (editLength > maxEditLength) {\n                return callback();\n              }\n\n              if (!execEditLength()) {\n                exec();\n              }\n            }, 0);\n          })();\n        } else {\n          while (editLength <= maxEditLength) {\n            var ret = execEditLength();\n\n            if (ret) {\n              return ret;\n            }\n          }\n        }\n      },\n      pushComponent: function pushComponent(components, added, removed) {\n        var last = components[components.length - 1];\n\n        if (last && last.added === added && last.removed === removed) {\n          // We need to clone here as the component clone operation is just\n          // as shallow array clone\n          components[components.length - 1] = {\n            count: last.count + 1,\n            added: added,\n            removed: removed\n          };\n        } else {\n          components.push({\n            count: 1,\n            added: added,\n            removed: removed\n          });\n        }\n      },\n      extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n        var newLen = newString.length,\n            oldLen = oldString.length,\n            newPos = basePath.newPos,\n            oldPos = newPos - diagonalPath,\n            commonCount = 0;\n\n        while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n          newPos++;\n          oldPos++;\n          commonCount++;\n        }\n\n        if (commonCount) {\n          basePath.components.push({\n            count: commonCount\n          });\n        }\n\n        basePath.newPos = newPos;\n        return oldPos;\n      },\n      equals: function equals(left, right) {\n        if (this.options.comparator) {\n          return this.options.comparator(left, right);\n        } else {\n          return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n        }\n      },\n      removeEmpty: function removeEmpty(array) {\n        var ret = [];\n\n        for (var i = 0; i < array.length; i++) {\n          if (array[i]) {\n            ret.push(array[i]);\n          }\n        }\n\n        return ret;\n      },\n      castInput: function castInput(value) {\n        return value;\n      },\n      tokenize: function tokenize(value) {\n        return value.split('');\n      },\n      join: function join(chars) {\n        return chars.join('');\n      }\n    };\n\n    function buildValues(diff, components, newString, oldString, useLongestToken) {\n      var componentPos = 0,\n          componentLen = components.length,\n          newPos = 0,\n          oldPos = 0;\n\n      for (; componentPos < componentLen; componentPos++) {\n        var component = components[componentPos];\n\n        if (!component.removed) {\n          if (!component.added && useLongestToken) {\n            var value = newString.slice(newPos, newPos + component.count);\n            value = value.map(function (value, i) {\n              var oldValue = oldString[oldPos + i];\n              return oldValue.length > value.length ? oldValue : value;\n            });\n            component.value = diff.join(value);\n          } else {\n            component.value = diff.join(newString.slice(newPos, newPos + component.count));\n          }\n\n          newPos += component.count; // Common case\n\n          if (!component.added) {\n            oldPos += component.count;\n          }\n        } else {\n          component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n          oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n          // The diffing algorithm is tied to add then remove output and this is the simplest\n          // route to get the desired output with minimal overhead.\n\n          if (componentPos && components[componentPos - 1].added) {\n            var tmp = components[componentPos - 1];\n            components[componentPos - 1] = components[componentPos];\n            components[componentPos] = tmp;\n          }\n        }\n      } // Special case handle for when one terminal is ignored (i.e. whitespace).\n      // For this case we merge the terminal into the prior string and drop the change.\n      // This is only available for string mode.\n\n\n      var lastComponent = components[componentLen - 1];\n\n      if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n        components[componentLen - 2].value += lastComponent.value;\n        components.pop();\n      }\n\n      return components;\n    }\n\n    function clonePath(path) {\n      return {\n        newPos: path.newPos,\n        components: path.components.slice(0)\n      };\n    }\n\n    var characterDiff = new Diff();\n    function diffChars(oldStr, newStr, options) {\n      return characterDiff.diff(oldStr, newStr, options);\n    }\n\n    function generateOptions(options, defaults) {\n      if (typeof options === 'function') {\n        defaults.callback = options;\n      } else if (options) {\n        for (var name in options) {\n          /* istanbul ignore else */\n          if (options.hasOwnProperty(name)) {\n            defaults[name] = options[name];\n          }\n        }\n      }\n\n      return defaults;\n    }\n\n    //\n    // Ranges and exceptions:\n    // Latin-1 Supplement, 0080–00FF\n    //  - U+00D7  × Multiplication sign\n    //  - U+00F7  ÷ Division sign\n    // Latin Extended-A, 0100–017F\n    // Latin Extended-B, 0180–024F\n    // IPA Extensions, 0250–02AF\n    // Spacing Modifier Letters, 02B0–02FF\n    //  - U+02C7  ˇ &#711;  Caron\n    //  - U+02D8  ˘ &#728;  Breve\n    //  - U+02D9  ˙ &#729;  Dot Above\n    //  - U+02DA  ˚ &#730;  Ring Above\n    //  - U+02DB  ˛ &#731;  Ogonek\n    //  - U+02DC  ˜ &#732;  Small Tilde\n    //  - U+02DD  ˝ &#733;  Double Acute Accent\n    // Latin Extended Additional, 1E00–1EFF\n\n    var extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n    var reWhitespace = /\\S/;\n    var wordDiff = new Diff();\n\n    wordDiff.equals = function (left, right) {\n      if (this.options.ignoreCase) {\n        left = left.toLowerCase();\n        right = right.toLowerCase();\n      }\n\n      return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n    };\n\n    wordDiff.tokenize = function (value) {\n      // All whitespace symbols except newline group into one token, each newline - in separate token\n      var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n      for (var i = 0; i < tokens.length - 1; i++) {\n        // If we have an empty string in the next field and we have only word chars before and after, merge\n        if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n          tokens[i] += tokens[i + 2];\n          tokens.splice(i + 1, 2);\n          i--;\n        }\n      }\n\n      return tokens;\n    };\n\n    function diffWords(oldStr, newStr, options) {\n      options = generateOptions(options, {\n        ignoreWhitespace: true\n      });\n      return wordDiff.diff(oldStr, newStr, options);\n    }\n    function diffWordsWithSpace(oldStr, newStr, options) {\n      return wordDiff.diff(oldStr, newStr, options);\n    }\n\n    var lineDiff = new Diff();\n\n    lineDiff.tokenize = function (value) {\n      var retLines = [],\n          linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n      if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n        linesAndNewlines.pop();\n      } // Merge the content and line separators into single tokens\n\n\n      for (var i = 0; i < linesAndNewlines.length; i++) {\n        var line = linesAndNewlines[i];\n\n        if (i % 2 && !this.options.newlineIsToken) {\n          retLines[retLines.length - 1] += line;\n        } else {\n          if (this.options.ignoreWhitespace) {\n            line = line.trim();\n          }\n\n          retLines.push(line);\n        }\n      }\n\n      return retLines;\n    };\n\n    function diffLines(oldStr, newStr, callback) {\n      return lineDiff.diff(oldStr, newStr, callback);\n    }\n    function diffTrimmedLines(oldStr, newStr, callback) {\n      var options = generateOptions(callback, {\n        ignoreWhitespace: true\n      });\n      return lineDiff.diff(oldStr, newStr, options);\n    }\n\n    var sentenceDiff = new Diff();\n\n    sentenceDiff.tokenize = function (value) {\n      return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n    };\n\n    function diffSentences(oldStr, newStr, callback) {\n      return sentenceDiff.diff(oldStr, newStr, callback);\n    }\n\n    var cssDiff = new Diff();\n\n    cssDiff.tokenize = function (value) {\n      return value.split(/([{}:;,]|\\s+)/);\n    };\n\n    function diffCss(oldStr, newStr, callback) {\n      return cssDiff.diff(oldStr, newStr, callback);\n    }\n\n    function _typeof(obj) {\n      \"@babel/helpers - typeof\";\n\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function (obj) {\n          return typeof obj;\n        };\n      } else {\n        _typeof = function (obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return _typeof(obj);\n    }\n\n    function _toConsumableArray(arr) {\n      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n    }\n\n    function _arrayWithoutHoles(arr) {\n      if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n    }\n\n    function _iterableToArray(iter) {\n      if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n\n      for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n\n    function _nonIterableSpread() {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var objectPrototypeToString = Object.prototype.toString;\n    var jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n    // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n    jsonDiff.useLongestToken = true;\n    jsonDiff.tokenize = lineDiff.tokenize;\n\n    jsonDiff.castInput = function (value) {\n      var _this$options = this.options,\n          undefinedReplacement = _this$options.undefinedReplacement,\n          _this$options$stringi = _this$options.stringifyReplacer,\n          stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n        return typeof v === 'undefined' ? undefinedReplacement : v;\n      } : _this$options$stringi;\n      return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n    };\n\n    jsonDiff.equals = function (left, right) {\n      return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n    };\n\n    function diffJson(oldObj, newObj, options) {\n      return jsonDiff.diff(oldObj, newObj, options);\n    } // This function handles the presence of circular references by bailing out when encountering an\n    // object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n    function canonicalize(obj, stack, replacementStack, replacer, key) {\n      stack = stack || [];\n      replacementStack = replacementStack || [];\n\n      if (replacer) {\n        obj = replacer(key, obj);\n      }\n\n      var i;\n\n      for (i = 0; i < stack.length; i += 1) {\n        if (stack[i] === obj) {\n          return replacementStack[i];\n        }\n      }\n\n      var canonicalizedObj;\n\n      if ('[object Array]' === objectPrototypeToString.call(obj)) {\n        stack.push(obj);\n        canonicalizedObj = new Array(obj.length);\n        replacementStack.push(canonicalizedObj);\n\n        for (i = 0; i < obj.length; i += 1) {\n          canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n        }\n\n        stack.pop();\n        replacementStack.pop();\n        return canonicalizedObj;\n      }\n\n      if (obj && obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      if (_typeof(obj) === 'object' && obj !== null) {\n        stack.push(obj);\n        canonicalizedObj = {};\n        replacementStack.push(canonicalizedObj);\n\n        var sortedKeys = [],\n            _key;\n\n        for (_key in obj) {\n          /* istanbul ignore else */\n          if (obj.hasOwnProperty(_key)) {\n            sortedKeys.push(_key);\n          }\n        }\n\n        sortedKeys.sort();\n\n        for (i = 0; i < sortedKeys.length; i += 1) {\n          _key = sortedKeys[i];\n          canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n        }\n\n        stack.pop();\n        replacementStack.pop();\n      } else {\n        canonicalizedObj = obj;\n      }\n\n      return canonicalizedObj;\n    }\n\n    var arrayDiff = new Diff();\n\n    arrayDiff.tokenize = function (value) {\n      return value.slice();\n    };\n\n    arrayDiff.join = arrayDiff.removeEmpty = function (value) {\n      return value;\n    };\n\n    function diffArrays(oldArr, newArr, callback) {\n      return arrayDiff.diff(oldArr, newArr, callback);\n    }\n\n    function parsePatch(uniDiff) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n          delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n          list = [],\n          i = 0;\n\n      function parseIndex() {\n        var index = {};\n        list.push(index); // Parse diff metadata\n\n        while (i < diffstr.length) {\n          var line = diffstr[i]; // File header found, end parsing diff metadata\n\n          if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n            break;\n          } // Diff index\n\n\n          var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n          if (header) {\n            index.index = header[1];\n          }\n\n          i++;\n        } // Parse file headers if they are defined. Unified diff requires them, but\n        // there's no technical issues to have an isolated hunk without file header\n\n\n        parseFileHeader(index);\n        parseFileHeader(index); // Parse hunks\n\n        index.hunks = [];\n\n        while (i < diffstr.length) {\n          var _line = diffstr[i];\n\n          if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n            break;\n          } else if (/^@@/.test(_line)) {\n            index.hunks.push(parseHunk());\n          } else if (_line && options.strict) {\n            // Ignore unexpected content unless in strict mode\n            throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n          } else {\n            i++;\n          }\n        }\n      } // Parses the --- and +++ headers, if none are found, no lines\n      // are consumed.\n\n\n      function parseFileHeader(index) {\n        var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n        if (fileHeader) {\n          var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n          var data = fileHeader[2].split('\\t', 2);\n          var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n          if (/^\".*\"$/.test(fileName)) {\n            fileName = fileName.substr(1, fileName.length - 2);\n          }\n\n          index[keyPrefix + 'FileName'] = fileName;\n          index[keyPrefix + 'Header'] = (data[1] || '').trim();\n          i++;\n        }\n      } // Parses a hunk\n      // This assumes that we are at the start of a hunk.\n\n\n      function parseHunk() {\n        var chunkHeaderIndex = i,\n            chunkHeaderLine = diffstr[i++],\n            chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n        var hunk = {\n          oldStart: +chunkHeader[1],\n          oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n          newStart: +chunkHeader[3],\n          newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n          lines: [],\n          linedelimiters: []\n        }; // Unified Diff Format quirk: If the chunk size is 0,\n        // the first number is one lower than one would expect.\n        // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n        if (hunk.oldLines === 0) {\n          hunk.oldStart += 1;\n        }\n\n        if (hunk.newLines === 0) {\n          hunk.newStart += 1;\n        }\n\n        var addCount = 0,\n            removeCount = 0;\n\n        for (; i < diffstr.length; i++) {\n          // Lines starting with '---' could be mistaken for the \"remove line\" operation\n          // But they could be the header for the next file. Therefore prune such cases out.\n          if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n            break;\n          }\n\n          var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n          if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n            hunk.lines.push(diffstr[i]);\n            hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n            if (operation === '+') {\n              addCount++;\n            } else if (operation === '-') {\n              removeCount++;\n            } else if (operation === ' ') {\n              addCount++;\n              removeCount++;\n            }\n          } else {\n            break;\n          }\n        } // Handle the empty block count case\n\n\n        if (!addCount && hunk.newLines === 1) {\n          hunk.newLines = 0;\n        }\n\n        if (!removeCount && hunk.oldLines === 1) {\n          hunk.oldLines = 0;\n        } // Perform optional sanity checking\n\n\n        if (options.strict) {\n          if (addCount !== hunk.newLines) {\n            throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n          }\n\n          if (removeCount !== hunk.oldLines) {\n            throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n          }\n        }\n\n        return hunk;\n      }\n\n      while (i < diffstr.length) {\n        parseIndex();\n      }\n\n      return list;\n    }\n\n    // Iterator that traverses in the range of [min, max], stepping\n    // by distance from a given start position. I.e. for [0, 4], with\n    // start of 2, this will iterate 2, 3, 1, 4, 0.\n    function distanceIterator (start, minLine, maxLine) {\n      var wantForward = true,\n          backwardExhausted = false,\n          forwardExhausted = false,\n          localOffset = 1;\n      return function iterator() {\n        if (wantForward && !forwardExhausted) {\n          if (backwardExhausted) {\n            localOffset++;\n          } else {\n            wantForward = false;\n          } // Check if trying to fit beyond text length, and if not, check it fits\n          // after offset location (or desired location on first iteration)\n\n\n          if (start + localOffset <= maxLine) {\n            return localOffset;\n          }\n\n          forwardExhausted = true;\n        }\n\n        if (!backwardExhausted) {\n          if (!forwardExhausted) {\n            wantForward = true;\n          } // Check if trying to fit before text beginning, and if not, check it fits\n          // before offset location\n\n\n          if (minLine <= start - localOffset) {\n            return -localOffset++;\n          }\n\n          backwardExhausted = true;\n          return iterator();\n        } // We tried to fit hunk before text beginning and beyond text length, then\n        // hunk can't fit on the text. Return undefined\n\n      };\n    }\n\n    function applyPatch(source, uniDiff) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof uniDiff === 'string') {\n        uniDiff = parsePatch(uniDiff);\n      }\n\n      if (Array.isArray(uniDiff)) {\n        if (uniDiff.length > 1) {\n          throw new Error('applyPatch only works with a single input.');\n        }\n\n        uniDiff = uniDiff[0];\n      } // Apply the diff to the input\n\n\n      var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n          delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n          hunks = uniDiff.hunks,\n          compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n        return line === patchContent;\n      },\n          errorCount = 0,\n          fuzzFactor = options.fuzzFactor || 0,\n          minLine = 0,\n          offset = 0,\n          removeEOFNL,\n          addEOFNL;\n      /**\n       * Checks if the hunk exactly fits on the provided location\n       */\n\n\n      function hunkFits(hunk, toPos) {\n        for (var j = 0; j < hunk.lines.length; j++) {\n          var line = hunk.lines[j],\n              operation = line.length > 0 ? line[0] : ' ',\n              content = line.length > 0 ? line.substr(1) : line;\n\n          if (operation === ' ' || operation === '-') {\n            // Context sanity check\n            if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n              errorCount++;\n\n              if (errorCount > fuzzFactor) {\n                return false;\n              }\n            }\n\n            toPos++;\n          }\n        }\n\n        return true;\n      } // Search best fit offsets for each hunk based on the previous ones\n\n\n      for (var i = 0; i < hunks.length; i++) {\n        var hunk = hunks[i],\n            maxLine = lines.length - hunk.oldLines,\n            localOffset = 0,\n            toPos = offset + hunk.oldStart - 1;\n        var iterator = distanceIterator(toPos, minLine, maxLine);\n\n        for (; localOffset !== undefined; localOffset = iterator()) {\n          if (hunkFits(hunk, toPos + localOffset)) {\n            hunk.offset = offset += localOffset;\n            break;\n          }\n        }\n\n        if (localOffset === undefined) {\n          return false;\n        } // Set lower text limit to end of the current hunk, so next ones don't try\n        // to fit over already patched text\n\n\n        minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n      } // Apply patch hunks\n\n\n      var diffOffset = 0;\n\n      for (var _i = 0; _i < hunks.length; _i++) {\n        var _hunk = hunks[_i],\n            _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n        diffOffset += _hunk.newLines - _hunk.oldLines;\n\n        for (var j = 0; j < _hunk.lines.length; j++) {\n          var line = _hunk.lines[j],\n              operation = line.length > 0 ? line[0] : ' ',\n              content = line.length > 0 ? line.substr(1) : line,\n              delimiter = _hunk.linedelimiters[j];\n\n          if (operation === ' ') {\n            _toPos++;\n          } else if (operation === '-') {\n            lines.splice(_toPos, 1);\n            delimiters.splice(_toPos, 1);\n            /* istanbul ignore else */\n          } else if (operation === '+') {\n            lines.splice(_toPos, 0, content);\n            delimiters.splice(_toPos, 0, delimiter);\n            _toPos++;\n          } else if (operation === '\\\\') {\n            var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n            if (previousOperation === '+') {\n              removeEOFNL = true;\n            } else if (previousOperation === '-') {\n              addEOFNL = true;\n            }\n          }\n        }\n      } // Handle EOFNL insertion/removal\n\n\n      if (removeEOFNL) {\n        while (!lines[lines.length - 1]) {\n          lines.pop();\n          delimiters.pop();\n        }\n      } else if (addEOFNL) {\n        lines.push('');\n        delimiters.push('\\n');\n      }\n\n      for (var _k = 0; _k < lines.length - 1; _k++) {\n        lines[_k] = lines[_k] + delimiters[_k];\n      }\n\n      return lines.join('');\n    } // Wrapper that supports multiple file patches via callbacks.\n\n    function applyPatches(uniDiff, options) {\n      if (typeof uniDiff === 'string') {\n        uniDiff = parsePatch(uniDiff);\n      }\n\n      var currentIndex = 0;\n\n      function processIndex() {\n        var index = uniDiff[currentIndex++];\n\n        if (!index) {\n          return options.complete();\n        }\n\n        options.loadFile(index, function (err, data) {\n          if (err) {\n            return options.complete(err);\n          }\n\n          var updatedContent = applyPatch(data, index, options);\n          options.patched(index, updatedContent, function (err) {\n            if (err) {\n              return options.complete(err);\n            }\n\n            processIndex();\n          });\n        });\n      }\n\n      processIndex();\n    }\n\n    function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n      if (!options) {\n        options = {};\n      }\n\n      if (typeof options.context === 'undefined') {\n        options.context = 4;\n      }\n\n      var diff = diffLines(oldStr, newStr, options);\n      diff.push({\n        value: '',\n        lines: []\n      }); // Append an empty value to make cleanup easier\n\n      function contextLines(lines) {\n        return lines.map(function (entry) {\n          return ' ' + entry;\n        });\n      }\n\n      var hunks = [];\n      var oldRangeStart = 0,\n          newRangeStart = 0,\n          curRange = [],\n          oldLine = 1,\n          newLine = 1;\n\n      var _loop = function _loop(i) {\n        var current = diff[i],\n            lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n        current.lines = lines;\n\n        if (current.added || current.removed) {\n          var _curRange;\n\n          // If we have previous context, start with that\n          if (!oldRangeStart) {\n            var prev = diff[i - 1];\n            oldRangeStart = oldLine;\n            newRangeStart = newLine;\n\n            if (prev) {\n              curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n              oldRangeStart -= curRange.length;\n              newRangeStart -= curRange.length;\n            }\n          } // Output our changes\n\n\n          (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n            return (current.added ? '+' : '-') + entry;\n          }))); // Track the updated file position\n\n\n          if (current.added) {\n            newLine += lines.length;\n          } else {\n            oldLine += lines.length;\n          }\n        } else {\n          // Identical context lines. Track line changes\n          if (oldRangeStart) {\n            // Close out any changes that have been output (or join overlapping)\n            if (lines.length <= options.context * 2 && i < diff.length - 2) {\n              var _curRange2;\n\n              // Overlapping\n              (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n            } else {\n              var _curRange3;\n\n              // end the range and output\n              var contextSize = Math.min(lines.length, options.context);\n\n              (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n              var hunk = {\n                oldStart: oldRangeStart,\n                oldLines: oldLine - oldRangeStart + contextSize,\n                newStart: newRangeStart,\n                newLines: newLine - newRangeStart + contextSize,\n                lines: curRange\n              };\n\n              if (i >= diff.length - 2 && lines.length <= options.context) {\n                // EOF is inside this hunk\n                var oldEOFNewline = /\\n$/.test(oldStr);\n                var newEOFNewline = /\\n$/.test(newStr);\n                var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n                if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n                  // special case: old has no eol and no trailing context; no-nl can end up before adds\n                  // however, if the old file is empty, do not output the no-nl line\n                  curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n                }\n\n                if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n                  curRange.push('\\\\ No newline at end of file');\n                }\n              }\n\n              hunks.push(hunk);\n              oldRangeStart = 0;\n              newRangeStart = 0;\n              curRange = [];\n            }\n          }\n\n          oldLine += lines.length;\n          newLine += lines.length;\n        }\n      };\n\n      for (var i = 0; i < diff.length; i++) {\n        _loop(i);\n      }\n\n      return {\n        oldFileName: oldFileName,\n        newFileName: newFileName,\n        oldHeader: oldHeader,\n        newHeader: newHeader,\n        hunks: hunks\n      };\n    }\n    function formatPatch(diff) {\n      var ret = [];\n\n      if (diff.oldFileName == diff.newFileName) {\n        ret.push('Index: ' + diff.oldFileName);\n      }\n\n      ret.push('===================================================================');\n      ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n      ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n      for (var i = 0; i < diff.hunks.length; i++) {\n        var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n        // the first number is one lower than one would expect.\n        // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n        if (hunk.oldLines === 0) {\n          hunk.oldStart -= 1;\n        }\n\n        if (hunk.newLines === 0) {\n          hunk.newStart -= 1;\n        }\n\n        ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n        ret.push.apply(ret, hunk.lines);\n      }\n\n      return ret.join('\\n') + '\\n';\n    }\n    function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n      return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n    }\n    function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n      return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n    }\n\n    function arrayEqual(a, b) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      return arrayStartsWith(a, b);\n    }\n    function arrayStartsWith(array, start) {\n      if (start.length > array.length) {\n        return false;\n      }\n\n      for (var i = 0; i < start.length; i++) {\n        if (start[i] !== array[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function calcLineCount(hunk) {\n      var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n          oldLines = _calcOldNewLineCount.oldLines,\n          newLines = _calcOldNewLineCount.newLines;\n\n      if (oldLines !== undefined) {\n        hunk.oldLines = oldLines;\n      } else {\n        delete hunk.oldLines;\n      }\n\n      if (newLines !== undefined) {\n        hunk.newLines = newLines;\n      } else {\n        delete hunk.newLines;\n      }\n    }\n    function merge(mine, theirs, base) {\n      mine = loadPatch(mine, base);\n      theirs = loadPatch(theirs, base);\n      var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n      // Leaving sanity checks on this to the API consumer that may know more about the\n      // meaning in their own context.\n\n      if (mine.index || theirs.index) {\n        ret.index = mine.index || theirs.index;\n      }\n\n      if (mine.newFileName || theirs.newFileName) {\n        if (!fileNameChanged(mine)) {\n          // No header or no change in ours, use theirs (and ours if theirs does not exist)\n          ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n          ret.newFileName = theirs.newFileName || mine.newFileName;\n          ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n          ret.newHeader = theirs.newHeader || mine.newHeader;\n        } else if (!fileNameChanged(theirs)) {\n          // No header or no change in theirs, use ours\n          ret.oldFileName = mine.oldFileName;\n          ret.newFileName = mine.newFileName;\n          ret.oldHeader = mine.oldHeader;\n          ret.newHeader = mine.newHeader;\n        } else {\n          // Both changed... figure it out\n          ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n          ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n          ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n          ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n        }\n      }\n\n      ret.hunks = [];\n      var mineIndex = 0,\n          theirsIndex = 0,\n          mineOffset = 0,\n          theirsOffset = 0;\n\n      while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n        var mineCurrent = mine.hunks[mineIndex] || {\n          oldStart: Infinity\n        },\n            theirsCurrent = theirs.hunks[theirsIndex] || {\n          oldStart: Infinity\n        };\n\n        if (hunkBefore(mineCurrent, theirsCurrent)) {\n          // This patch does not overlap with any of the others, yay.\n          ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n          mineIndex++;\n          theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n        } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n          // This patch does not overlap with any of the others, yay.\n          ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n          theirsIndex++;\n          mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n        } else {\n          // Overlap, merge as best we can\n          var mergedHunk = {\n            oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n            oldLines: 0,\n            newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n            newLines: 0,\n            lines: []\n          };\n          mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n          theirsIndex++;\n          mineIndex++;\n          ret.hunks.push(mergedHunk);\n        }\n      }\n\n      return ret;\n    }\n\n    function loadPatch(param, base) {\n      if (typeof param === 'string') {\n        if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n          return parsePatch(param)[0];\n        }\n\n        if (!base) {\n          throw new Error('Must provide a base reference or pass in a patch');\n        }\n\n        return structuredPatch(undefined, undefined, base, param);\n      }\n\n      return param;\n    }\n\n    function fileNameChanged(patch) {\n      return patch.newFileName && patch.newFileName !== patch.oldFileName;\n    }\n\n    function selectField(index, mine, theirs) {\n      if (mine === theirs) {\n        return mine;\n      } else {\n        index.conflict = true;\n        return {\n          mine: mine,\n          theirs: theirs\n        };\n      }\n    }\n\n    function hunkBefore(test, check) {\n      return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n    }\n\n    function cloneHunk(hunk, offset) {\n      return {\n        oldStart: hunk.oldStart,\n        oldLines: hunk.oldLines,\n        newStart: hunk.newStart + offset,\n        newLines: hunk.newLines,\n        lines: hunk.lines\n      };\n    }\n\n    function mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n      // This will generally result in a conflicted hunk, but there are cases where the context\n      // is the only overlap where we can successfully merge the content here.\n      var mine = {\n        offset: mineOffset,\n        lines: mineLines,\n        index: 0\n      },\n          their = {\n        offset: theirOffset,\n        lines: theirLines,\n        index: 0\n      }; // Handle any leading content\n\n      insertLeading(hunk, mine, their);\n      insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n      while (mine.index < mine.lines.length && their.index < their.lines.length) {\n        var mineCurrent = mine.lines[mine.index],\n            theirCurrent = their.lines[their.index];\n\n        if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n          // Both modified ...\n          mutualChange(hunk, mine, their);\n        } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n          var _hunk$lines;\n\n          // Mine inserted\n          (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n        } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n          var _hunk$lines2;\n\n          // Theirs inserted\n          (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n        } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n          // Mine removed or edited\n          removal(hunk, mine, their);\n        } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n          // Their removed or edited\n          removal(hunk, their, mine, true);\n        } else if (mineCurrent === theirCurrent) {\n          // Context identity\n          hunk.lines.push(mineCurrent);\n          mine.index++;\n          their.index++;\n        } else {\n          // Context mismatch\n          conflict(hunk, collectChange(mine), collectChange(their));\n        }\n      } // Now push anything that may be remaining\n\n\n      insertTrailing(hunk, mine);\n      insertTrailing(hunk, their);\n      calcLineCount(hunk);\n    }\n\n    function mutualChange(hunk, mine, their) {\n      var myChanges = collectChange(mine),\n          theirChanges = collectChange(their);\n\n      if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n        // Special case for remove changes that are supersets of one another\n        if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n          var _hunk$lines3;\n\n          (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n          return;\n        } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n          var _hunk$lines4;\n\n          (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n          return;\n        }\n      } else if (arrayEqual(myChanges, theirChanges)) {\n        var _hunk$lines5;\n\n        (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n        return;\n      }\n\n      conflict(hunk, myChanges, theirChanges);\n    }\n\n    function removal(hunk, mine, their, swap) {\n      var myChanges = collectChange(mine),\n          theirChanges = collectContext(their, myChanges);\n\n      if (theirChanges.merged) {\n        var _hunk$lines6;\n\n        (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n      } else {\n        conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n      }\n    }\n\n    function conflict(hunk, mine, their) {\n      hunk.conflict = true;\n      hunk.lines.push({\n        conflict: true,\n        mine: mine,\n        theirs: their\n      });\n    }\n\n    function insertLeading(hunk, insert, their) {\n      while (insert.offset < their.offset && insert.index < insert.lines.length) {\n        var line = insert.lines[insert.index++];\n        hunk.lines.push(line);\n        insert.offset++;\n      }\n    }\n\n    function insertTrailing(hunk, insert) {\n      while (insert.index < insert.lines.length) {\n        var line = insert.lines[insert.index++];\n        hunk.lines.push(line);\n      }\n    }\n\n    function collectChange(state) {\n      var ret = [],\n          operation = state.lines[state.index][0];\n\n      while (state.index < state.lines.length) {\n        var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n        if (operation === '-' && line[0] === '+') {\n          operation = '+';\n        }\n\n        if (operation === line[0]) {\n          ret.push(line);\n          state.index++;\n        } else {\n          break;\n        }\n      }\n\n      return ret;\n    }\n\n    function collectContext(state, matchChanges) {\n      var changes = [],\n          merged = [],\n          matchIndex = 0,\n          contextChanges = false,\n          conflicted = false;\n\n      while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n        var change = state.lines[state.index],\n            match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n        if (match[0] === '+') {\n          break;\n        }\n\n        contextChanges = contextChanges || change[0] !== ' ';\n        merged.push(match);\n        matchIndex++; // Consume any additions in the other block as a conflict to attempt\n        // to pull in the remaining context after this\n\n        if (change[0] === '+') {\n          conflicted = true;\n\n          while (change[0] === '+') {\n            changes.push(change);\n            change = state.lines[++state.index];\n          }\n        }\n\n        if (match.substr(1) === change.substr(1)) {\n          changes.push(change);\n          state.index++;\n        } else {\n          conflicted = true;\n        }\n      }\n\n      if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n        conflicted = true;\n      }\n\n      if (conflicted) {\n        return changes;\n      }\n\n      while (matchIndex < matchChanges.length) {\n        merged.push(matchChanges[matchIndex++]);\n      }\n\n      return {\n        merged: merged,\n        changes: changes\n      };\n    }\n\n    function allRemoves(changes) {\n      return changes.reduce(function (prev, change) {\n        return prev && change[0] === '-';\n      }, true);\n    }\n\n    function skipRemoveSuperset(state, removeChanges, delta) {\n      for (var i = 0; i < delta; i++) {\n        var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n        if (state.lines[state.index + i] !== ' ' + changeContent) {\n          return false;\n        }\n      }\n\n      state.index += delta;\n      return true;\n    }\n\n    function calcOldNewLineCount(lines) {\n      var oldLines = 0;\n      var newLines = 0;\n      lines.forEach(function (line) {\n        if (typeof line !== 'string') {\n          var myCount = calcOldNewLineCount(line.mine);\n          var theirCount = calcOldNewLineCount(line.theirs);\n\n          if (oldLines !== undefined) {\n            if (myCount.oldLines === theirCount.oldLines) {\n              oldLines += myCount.oldLines;\n            } else {\n              oldLines = undefined;\n            }\n          }\n\n          if (newLines !== undefined) {\n            if (myCount.newLines === theirCount.newLines) {\n              newLines += myCount.newLines;\n            } else {\n              newLines = undefined;\n            }\n          }\n        } else {\n          if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n            newLines++;\n          }\n\n          if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n            oldLines++;\n          }\n        }\n      });\n      return {\n        oldLines: oldLines,\n        newLines: newLines\n      };\n    }\n\n    // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n    function convertChangesToDMP(changes) {\n      var ret = [],\n          change,\n          operation;\n\n      for (var i = 0; i < changes.length; i++) {\n        change = changes[i];\n\n        if (change.added) {\n          operation = 1;\n        } else if (change.removed) {\n          operation = -1;\n        } else {\n          operation = 0;\n        }\n\n        ret.push([operation, change.value]);\n      }\n\n      return ret;\n    }\n\n    function convertChangesToXML(changes) {\n      var ret = [];\n\n      for (var i = 0; i < changes.length; i++) {\n        var change = changes[i];\n\n        if (change.added) {\n          ret.push('<ins>');\n        } else if (change.removed) {\n          ret.push('<del>');\n        }\n\n        ret.push(escapeHTML(change.value));\n\n        if (change.added) {\n          ret.push('</ins>');\n        } else if (change.removed) {\n          ret.push('</del>');\n        }\n      }\n\n      return ret.join('');\n    }\n\n    function escapeHTML(s) {\n      var n = s;\n      n = n.replace(/&/g, '&amp;');\n      n = n.replace(/</g, '&lt;');\n      n = n.replace(/>/g, '&gt;');\n      n = n.replace(/\"/g, '&quot;');\n      return n;\n    }\n\n    exports.Diff = Diff;\n    exports.applyPatch = applyPatch;\n    exports.applyPatches = applyPatches;\n    exports.canonicalize = canonicalize;\n    exports.convertChangesToDMP = convertChangesToDMP;\n    exports.convertChangesToXML = convertChangesToXML;\n    exports.createPatch = createPatch;\n    exports.createTwoFilesPatch = createTwoFilesPatch;\n    exports.diffArrays = diffArrays;\n    exports.diffChars = diffChars;\n    exports.diffCss = diffCss;\n    exports.diffJson = diffJson;\n    exports.diffLines = diffLines;\n    exports.diffSentences = diffSentences;\n    exports.diffTrimmedLines = diffTrimmedLines;\n    exports.diffWords = diffWords;\n    exports.diffWordsWithSpace = diffWordsWithSpace;\n    exports.merge = merge;\n    exports.parsePatch = parsePatch;\n    exports.structuredPatch = structuredPatch;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n  })));\n  });\n\n  /**\n   * Helpers.\n   */\n\n  var s$1 = 1000;\n  var m$1 = s$1 * 60;\n  var h$1 = m$1 * 60;\n  var d$1 = h$1 * 24;\n  var w$1 = d$1 * 7;\n  var y$1 = d$1 * 365.25;\n\n  /**\n   * Parse or format the given `val`.\n   *\n   * Options:\n   *\n   *  - `long` verbose formatting [false]\n   *\n   * @param {String|Number} val\n   * @param {Object} [options]\n   * @throws {Error} throw an error if val is not a non-empty string or a number\n   * @return {String|Number}\n   * @api public\n   */\n\n  var ms$1 = function (val, options) {\n    options = options || {};\n    var type = typeof val;\n    if (type === 'string' && val.length > 0) {\n      return parse$1(val);\n    } else if (type === 'number' && isFinite(val)) {\n      return options.long ? fmtLong$1(val) : fmtShort$1(val);\n    }\n    throw new Error(\n      'val is not a non-empty string or a valid number. val=' +\n        JSON.stringify(val)\n    );\n  };\n\n  /**\n   * Parse the given `str` and return milliseconds.\n   *\n   * @param {String} str\n   * @return {Number}\n   * @api private\n   */\n\n  function parse$1(str) {\n    str = String(str);\n    if (str.length > 100) {\n      return;\n    }\n    var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n      str\n    );\n    if (!match) {\n      return;\n    }\n    var n = parseFloat(match[1]);\n    var type = (match[2] || 'ms').toLowerCase();\n    switch (type) {\n      case 'years':\n      case 'year':\n      case 'yrs':\n      case 'yr':\n      case 'y':\n        return n * y$1;\n      case 'weeks':\n      case 'week':\n      case 'w':\n        return n * w$1;\n      case 'days':\n      case 'day':\n      case 'd':\n        return n * d$1;\n      case 'hours':\n      case 'hour':\n      case 'hrs':\n      case 'hr':\n      case 'h':\n        return n * h$1;\n      case 'minutes':\n      case 'minute':\n      case 'mins':\n      case 'min':\n      case 'm':\n        return n * m$1;\n      case 'seconds':\n      case 'second':\n      case 'secs':\n      case 'sec':\n      case 's':\n        return n * s$1;\n      case 'milliseconds':\n      case 'millisecond':\n      case 'msecs':\n      case 'msec':\n      case 'ms':\n        return n;\n      default:\n        return undefined;\n    }\n  }\n\n  /**\n   * Short format for `ms`.\n   *\n   * @param {Number} ms\n   * @return {String}\n   * @api private\n   */\n\n  function fmtShort$1(ms) {\n    var msAbs = Math.abs(ms);\n    if (msAbs >= d$1) {\n      return Math.round(ms / d$1) + 'd';\n    }\n    if (msAbs >= h$1) {\n      return Math.round(ms / h$1) + 'h';\n    }\n    if (msAbs >= m$1) {\n      return Math.round(ms / m$1) + 'm';\n    }\n    if (msAbs >= s$1) {\n      return Math.round(ms / s$1) + 's';\n    }\n    return ms + 'ms';\n  }\n\n  /**\n   * Long format for `ms`.\n   *\n   * @param {Number} ms\n   * @return {String}\n   * @api private\n   */\n\n  function fmtLong$1(ms) {\n    var msAbs = Math.abs(ms);\n    if (msAbs >= d$1) {\n      return plural$1(ms, msAbs, d$1, 'day');\n    }\n    if (msAbs >= h$1) {\n      return plural$1(ms, msAbs, h$1, 'hour');\n    }\n    if (msAbs >= m$1) {\n      return plural$1(ms, msAbs, m$1, 'minute');\n    }\n    if (msAbs >= s$1) {\n      return plural$1(ms, msAbs, s$1, 'second');\n    }\n    return ms + ' ms';\n  }\n\n  /**\n   * Pluralization helper.\n   */\n\n  function plural$1(ms, msAbs, n, name) {\n    var isPlural = msAbs >= n * 1.5;\n    return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n  }\n\n  var browser$2 = true;\n\n  // This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n  // optimize the gzip compression for this alphabet.\n  let urlAlphabet =\n    'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW';\n\n  let customAlphabet = (alphabet, size) => {\n    return () => {\n      let id = '';\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let i = size;\n      while (i--) {\n        // `| 0` is more compact and faster than `Math.floor()`.\n        id += alphabet[(Math.random() * alphabet.length) | 0];\n      }\n      return id\n    }\n  };\n\n  let nanoid = (size = 21) => {\n    let id = '';\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size;\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += urlAlphabet[(Math.random() * 64) | 0];\n    }\n    return id\n  };\n\n  var nonSecure = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    nanoid: nanoid,\n    customAlphabet: customAlphabet\n  });\n\n  var he = createCommonjsModule(function (module, exports) {\n  (function(root) {\n\n  \t// Detect free variables `exports`.\n  \tvar freeExports = exports;\n\n  \t// Detect free variable `module`.\n  \tvar freeModule = module &&\n  \t\tmodule.exports == freeExports && module;\n\n  \t// Detect free variable `global`, from Node.js or Browserified code,\n  \t// and use it as `root`.\n  \tvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal;\n  \tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n  \t\troot = freeGlobal;\n  \t}\n\n  \t/*--------------------------------------------------------------------------*/\n\n  \t// All astral symbols.\n  \tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  \t// All ASCII symbols (not just printable ASCII) except those listed in the\n  \t// first column of the overrides table.\n  \t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\n  \tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n  \t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n  \t// code points listed in the first column of the overrides table on\n  \t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\n  \tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n  \tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n  \tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\n\n  \tvar regexEscape = /[\"&'<>`]/g;\n  \tvar escapeMap = {\n  \t\t'\"': '&quot;',\n  \t\t'&': '&amp;',\n  \t\t'\\'': '&#x27;',\n  \t\t'<': '&lt;',\n  \t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n  \t\t// following is not strictly necessary unless it’s part of a tag or an\n  \t\t// unquoted attribute value. We’re only escaping it to support those\n  \t\t// situations, and for XML support.\n  \t\t'>': '&gt;',\n  \t\t// In Internet Explorer ≤ 8, the backtick character can be used\n  \t\t// to break out of (un)quoted attribute values or HTML comments.\n  \t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n  \t\t// http://html5sec.org/#133.\n  \t\t'`': '&#x60;'\n  \t};\n\n  \tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n  \tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n  \tvar regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;\n  \tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\n  \tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\n  \tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n  \tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n  \t/*--------------------------------------------------------------------------*/\n\n  \tvar stringFromCharCode = String.fromCharCode;\n\n  \tvar object = {};\n  \tvar hasOwnProperty = object.hasOwnProperty;\n  \tvar has = function(object, propertyName) {\n  \t\treturn hasOwnProperty.call(object, propertyName);\n  \t};\n\n  \tvar contains = function(array, value) {\n  \t\tvar index = -1;\n  \t\tvar length = array.length;\n  \t\twhile (++index < length) {\n  \t\t\tif (array[index] == value) {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t}\n  \t\treturn false;\n  \t};\n\n  \tvar merge = function(options, defaults) {\n  \t\tif (!options) {\n  \t\t\treturn defaults;\n  \t\t}\n  \t\tvar result = {};\n  \t\tvar key;\n  \t\tfor (key in defaults) {\n  \t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n  \t\t\t// option names are used anyway. Any others are ignored.\n  \t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n  \t\t}\n  \t\treturn result;\n  \t};\n\n  \t// Modified version of `ucs2encode`; see https://mths.be/punycode.\n  \tvar codePointToSymbol = function(codePoint, strict) {\n  \t\tvar output = '';\n  \t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n  \t\t\t// See issue #4:\n  \t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n  \t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n  \t\t\t// REPLACEMENT CHARACTER.”\n  \t\t\tif (strict) {\n  \t\t\t\tparseError('character reference outside the permissible Unicode range');\n  \t\t\t}\n  \t\t\treturn '\\uFFFD';\n  \t\t}\n  \t\tif (has(decodeMapNumeric, codePoint)) {\n  \t\t\tif (strict) {\n  \t\t\t\tparseError('disallowed character reference');\n  \t\t\t}\n  \t\t\treturn decodeMapNumeric[codePoint];\n  \t\t}\n  \t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n  \t\t\tparseError('disallowed character reference');\n  \t\t}\n  \t\tif (codePoint > 0xFFFF) {\n  \t\t\tcodePoint -= 0x10000;\n  \t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n  \t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n  \t\t}\n  \t\toutput += stringFromCharCode(codePoint);\n  \t\treturn output;\n  \t};\n\n  \tvar hexEscape = function(codePoint) {\n  \t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n  \t};\n\n  \tvar decEscape = function(codePoint) {\n  \t\treturn '&#' + codePoint + ';';\n  \t};\n\n  \tvar parseError = function(message) {\n  \t\tthrow Error('Parse error: ' + message);\n  \t};\n\n  \t/*--------------------------------------------------------------------------*/\n\n  \tvar encode = function(string, options) {\n  \t\toptions = merge(options, encode.options);\n  \t\tvar strict = options.strict;\n  \t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n  \t\t\tparseError('forbidden code point');\n  \t\t}\n  \t\tvar encodeEverything = options.encodeEverything;\n  \t\tvar useNamedReferences = options.useNamedReferences;\n  \t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n  \t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\n\n  \t\tvar escapeBmpSymbol = function(symbol) {\n  \t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\n  \t\t};\n\n  \t\tif (encodeEverything) {\n  \t\t\t// Encode ASCII symbols.\n  \t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n  \t\t\t\t// Use named references if requested & possible.\n  \t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n  \t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n  \t\t\t\t}\n  \t\t\t\treturn escapeBmpSymbol(symbol);\n  \t\t\t});\n  \t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n  \t\t\t// is within the ASCII range.\n  \t\t\tif (useNamedReferences) {\n  \t\t\t\tstring = string\n  \t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n  \t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n  \t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n  \t\t\t}\n  \t\t\t// Encode non-ASCII symbols.\n  \t\t\tif (useNamedReferences) {\n  \t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n  \t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n  \t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n  \t\t\t\t\treturn '&' + encodeMap[string] + ';';\n  \t\t\t\t});\n  \t\t\t}\n  \t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n  \t\t} else if (useNamedReferences) {\n  \t\t\t// Apply named character references.\n  \t\t\t// Encode `<>\"'&` using named character references.\n  \t\t\tif (!allowUnsafeSymbols) {\n  \t\t\t\tstring = string.replace(regexEscape, function(string) {\n  \t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n  \t\t\t\t});\n  \t\t\t}\n  \t\t\t// Shorten escapes that represent two symbols, of which at least one is\n  \t\t\t// `<>\"'&`.\n  \t\t\tstring = string\n  \t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n  \t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n  \t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n  \t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n  \t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n  \t\t\t\treturn '&' + encodeMap[string] + ';';\n  \t\t\t});\n  \t\t} else if (!allowUnsafeSymbols) {\n  \t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n  \t\t\t// using named character references.\n  \t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\n  \t\t}\n  \t\treturn string\n  \t\t\t// Encode astral symbols.\n  \t\t\t.replace(regexAstralSymbols, function($0) {\n  \t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n  \t\t\t\tvar high = $0.charCodeAt(0);\n  \t\t\t\tvar low = $0.charCodeAt(1);\n  \t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n  \t\t\t\treturn escapeCodePoint(codePoint);\n  \t\t\t})\n  \t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n  \t\t\t// using a hexadecimal escape.\n  \t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\n  \t};\n  \t// Expose default options (so they can be overridden globally).\n  \tencode.options = {\n  \t\t'allowUnsafeSymbols': false,\n  \t\t'encodeEverything': false,\n  \t\t'strict': false,\n  \t\t'useNamedReferences': false,\n  \t\t'decimal' : false\n  \t};\n\n  \tvar decode = function(html, options) {\n  \t\toptions = merge(options, decode.options);\n  \t\tvar strict = options.strict;\n  \t\tif (strict && regexInvalidEntity.test(html)) {\n  \t\t\tparseError('malformed character reference');\n  \t\t}\n  \t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n  \t\t\tvar codePoint;\n  \t\t\tvar semicolon;\n  \t\t\tvar decDigits;\n  \t\t\tvar hexDigits;\n  \t\t\tvar reference;\n  \t\t\tvar next;\n\n  \t\t\tif ($1) {\n  \t\t\t\treference = $1;\n  \t\t\t\t// Note: there is no need to check `has(decodeMap, reference)`.\n  \t\t\t\treturn decodeMap[reference];\n  \t\t\t}\n\n  \t\t\tif ($2) {\n  \t\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`.\n  \t\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n  \t\t\t\t// followed by `=` in an attribute context.\n  \t\t\t\treference = $2;\n  \t\t\t\tnext = $3;\n  \t\t\t\tif (next && options.isAttributeValue) {\n  \t\t\t\t\tif (strict && next == '=') {\n  \t\t\t\t\t\tparseError('`&` did not start a character reference');\n  \t\t\t\t\t}\n  \t\t\t\t\treturn $0;\n  \t\t\t\t} else {\n  \t\t\t\t\tif (strict) {\n  \t\t\t\t\t\tparseError(\n  \t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n  \t\t\t\t\t\t);\n  \t\t\t\t\t}\n  \t\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n  \t\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n  \t\t\t\t}\n  \t\t\t}\n\n  \t\t\tif ($4) {\n  \t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n  \t\t\t\tdecDigits = $4;\n  \t\t\t\tsemicolon = $5;\n  \t\t\t\tif (strict && !semicolon) {\n  \t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n  \t\t\t\t}\n  \t\t\t\tcodePoint = parseInt(decDigits, 10);\n  \t\t\t\treturn codePointToSymbol(codePoint, strict);\n  \t\t\t}\n\n  \t\t\tif ($6) {\n  \t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n  \t\t\t\thexDigits = $6;\n  \t\t\t\tsemicolon = $7;\n  \t\t\t\tif (strict && !semicolon) {\n  \t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n  \t\t\t\t}\n  \t\t\t\tcodePoint = parseInt(hexDigits, 16);\n  \t\t\t\treturn codePointToSymbol(codePoint, strict);\n  \t\t\t}\n\n  \t\t\t// If we’re still here, `if ($7)` is implied; it’s an ambiguous\n  \t\t\t// ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n  \t\t\tif (strict) {\n  \t\t\t\tparseError(\n  \t\t\t\t\t'named character reference was not terminated by a semicolon'\n  \t\t\t\t);\n  \t\t\t}\n  \t\t\treturn $0;\n  \t\t});\n  \t};\n  \t// Expose default options (so they can be overridden globally).\n  \tdecode.options = {\n  \t\t'isAttributeValue': false,\n  \t\t'strict': false\n  \t};\n\n  \tvar escape = function(string) {\n  \t\treturn string.replace(regexEscape, function($0) {\n  \t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n  \t\t\treturn escapeMap[$0];\n  \t\t});\n  \t};\n\n  \t/*--------------------------------------------------------------------------*/\n\n  \tvar he = {\n  \t\t'version': '1.2.0',\n  \t\t'encode': encode,\n  \t\t'decode': decode,\n  \t\t'escape': escape,\n  \t\t'unescape': decode\n  \t};\n\n  \t// Some AMD build optimizers, like r.js, check for specific condition patterns\n  \t// like the following:\n  \tif (freeExports && !freeExports.nodeType) {\n  \t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\n  \t\t\tfreeModule.exports = he;\n  \t\t} else { // in Narwhal or RingoJS v0.7.0-\n  \t\t\tfor (var key in he) {\n  \t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n  \t\t\t}\n  \t\t}\n  \t} else { // in Rhino or a web browser\n  \t\troot.he = he;\n  \t}\n\n  }(commonjsGlobal));\n  });\n\n  var utils = createCommonjsModule(function (module, exports) {\n\n  /**\n   * Various utility functions used throughout Mocha's codebase.\n   * @module utils\n   */\n\n  /**\n   * Module dependencies.\n   */\n\n  const {nanoid} = nonSecure;\n\n\n\n\n  const MOCHA_ID_PROP_NAME = '__mocha_id__';\n\n  /**\n   * Inherit the prototype methods from one constructor into another.\n   *\n   * @param {function} ctor - Constructor function which needs to inherit the\n   *     prototype.\n   * @param {function} superCtor - Constructor function to inherit prototype from.\n   * @throws {TypeError} if either constructor is null, or if super constructor\n   *     lacks a prototype.\n   */\n  exports.inherits = util.inherits;\n\n  /**\n   * Escape special characters in the given string of html.\n   *\n   * @private\n   * @param  {string} html\n   * @return {string}\n   */\n  exports.escape = function(html) {\n    return he.encode(String(html), {useNamedReferences: false});\n  };\n\n  /**\n   * Test if the given obj is type of string.\n   *\n   * @private\n   * @param {Object} obj\n   * @return {boolean}\n   */\n  exports.isString = function(obj) {\n    return typeof obj === 'string';\n  };\n\n  /**\n   * Compute a slug from the given `str`.\n   *\n   * @private\n   * @param {string} str\n   * @return {string}\n   */\n  exports.slug = function(str) {\n    return str\n      .toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^-\\w]/g, '')\n      .replace(/-{2,}/g, '-');\n  };\n\n  /**\n   * Strip the function definition from `str`, and re-indent for pre whitespace.\n   *\n   * @param {string} str\n   * @return {string}\n   */\n  exports.clean = function(str) {\n    str = str\n      .replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n')\n      .replace(/^\\uFEFF/, '')\n      // (traditional)->  space/name     parameters    body     (lambda)-> parameters       body   multi-statement/single          keep body content\n      .replace(\n        /^function(?:\\s*|\\s+[^(]*)\\([^)]*\\)\\s*\\{((?:.|\\n)*?)\\s*\\}$|^\\([^)]*\\)\\s*=>\\s*(?:\\{((?:.|\\n)*?)\\s*\\}|((?:.|\\n)*))$/,\n        '$1$2$3'\n      );\n\n    var spaces = str.match(/^\\n?( *)/)[1].length;\n    var tabs = str.match(/^\\n?(\\t*)/)[1].length;\n    var re = new RegExp(\n      '^\\n?' + (tabs ? '\\t' : ' ') + '{' + (tabs || spaces) + '}',\n      'gm'\n    );\n\n    str = str.replace(re, '');\n\n    return str.trim();\n  };\n\n  /**\n   * If a value could have properties, and has none, this function is called,\n   * which returns a string representation of the empty value.\n   *\n   * Functions w/ no properties return `'[Function]'`\n   * Arrays w/ length === 0 return `'[]'`\n   * Objects w/ no properties return `'{}'`\n   * All else: return result of `value.toString()`\n   *\n   * @private\n   * @param {*} value The value to inspect.\n   * @param {string} typeHint The type of the value\n   * @returns {string}\n   */\n  function emptyRepresentation(value, typeHint) {\n    switch (typeHint) {\n      case 'function':\n        return '[Function]';\n      case 'object':\n        return '{}';\n      case 'array':\n        return '[]';\n      default:\n        return value.toString();\n    }\n  }\n\n  /**\n   * Takes some variable and asks `Object.prototype.toString()` what it thinks it\n   * is.\n   *\n   * @private\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString\n   * @param {*} value The value to test.\n   * @returns {string} Computed type\n   * @example\n   * canonicalType({}) // 'object'\n   * canonicalType([]) // 'array'\n   * canonicalType(1) // 'number'\n   * canonicalType(false) // 'boolean'\n   * canonicalType(Infinity) // 'number'\n   * canonicalType(null) // 'null'\n   * canonicalType(new Date()) // 'date'\n   * canonicalType(/foo/) // 'regexp'\n   * canonicalType('type') // 'string'\n   * canonicalType(global) // 'global'\n   * canonicalType(new String('foo') // 'object'\n   * canonicalType(async function() {}) // 'asyncfunction'\n   * canonicalType(await import(name)) // 'module'\n   */\n  var canonicalType = (exports.canonicalType = function canonicalType(value) {\n    if (value === undefined) {\n      return 'undefined';\n    } else if (value === null) {\n      return 'null';\n    } else if (isBuffer$2(value)) {\n      return 'buffer';\n    }\n    return Object.prototype.toString\n      .call(value)\n      .replace(/^\\[.+\\s(.+?)]$/, '$1')\n      .toLowerCase();\n  });\n\n  /**\n   *\n   * Returns a general type or data structure of a variable\n   * @private\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures\n   * @param {*} value The value to test.\n   * @returns {string} One of undefined, boolean, number, string, bigint, symbol, object\n   * @example\n   * type({}) // 'object'\n   * type([]) // 'array'\n   * type(1) // 'number'\n   * type(false) // 'boolean'\n   * type(Infinity) // 'number'\n   * type(null) // 'null'\n   * type(new Date()) // 'object'\n   * type(/foo/) // 'object'\n   * type('type') // 'string'\n   * type(global) // 'object'\n   * type(new String('foo') // 'string'\n   */\n  exports.type = function type(value) {\n    // Null is special\n    if (value === null) return 'null';\n    const primitives = new Set([\n      'undefined',\n      'boolean',\n      'number',\n      'string',\n      'bigint',\n      'symbol'\n    ]);\n    const _type = typeof value;\n    if (_type === 'function') return _type;\n    if (primitives.has(_type)) return _type;\n    if (value instanceof String) return 'string';\n    if (value instanceof Error) return 'error';\n    if (Array.isArray(value)) return 'array';\n\n    return _type;\n  };\n\n  /**\n   * Stringify `value`. Different behavior depending on type of value:\n   *\n   * - If `value` is undefined or null, return `'[undefined]'` or `'[null]'`, respectively.\n   * - If `value` is not an object, function or array, return result of `value.toString()` wrapped in double-quotes.\n   * - If `value` is an *empty* object, function, or array, return result of function\n   *   {@link emptyRepresentation}.\n   * - If `value` has properties, call {@link exports.canonicalize} on it, then return result of\n   *   JSON.stringify().\n   *\n   * @private\n   * @see exports.type\n   * @param {*} value\n   * @return {string}\n   */\n  exports.stringify = function(value) {\n    var typeHint = canonicalType(value);\n\n    if (!~['object', 'array', 'function'].indexOf(typeHint)) {\n      if (typeHint === 'buffer') {\n        var json = Buffer$1.prototype.toJSON.call(value);\n        // Based on the toJSON result\n        return jsonStringify(\n          json.data && json.type ? json.data : json,\n          2\n        ).replace(/,(\\n|$)/g, '$1');\n      }\n\n      // IE7/IE8 has a bizarre String constructor; needs to be coerced\n      // into an array and back to obj.\n      if (typeHint === 'string' && typeof value === 'object') {\n        value = value.split('').reduce(function(acc, char, idx) {\n          acc[idx] = char;\n          return acc;\n        }, {});\n        typeHint = 'object';\n      } else {\n        return jsonStringify(value);\n      }\n    }\n\n    for (var prop in value) {\n      if (Object.prototype.hasOwnProperty.call(value, prop)) {\n        return jsonStringify(\n          exports.canonicalize(value, null, typeHint),\n          2\n        ).replace(/,(\\n|$)/g, '$1');\n      }\n    }\n\n    return emptyRepresentation(value, typeHint);\n  };\n\n  /**\n   * like JSON.stringify but more sense.\n   *\n   * @private\n   * @param {Object}  object\n   * @param {number=} spaces\n   * @param {number=} depth\n   * @returns {*}\n   */\n  function jsonStringify(object, spaces, depth) {\n    if (typeof spaces === 'undefined') {\n      // primitive types\n      return _stringify(object);\n    }\n\n    depth = depth || 1;\n    var space = spaces * depth;\n    var str = Array.isArray(object) ? '[' : '{';\n    var end = Array.isArray(object) ? ']' : '}';\n    var length =\n      typeof object.length === 'number'\n        ? object.length\n        : Object.keys(object).length;\n    // `.repeat()` polyfill\n    function repeat(s, n) {\n      return new Array(n).join(s);\n    }\n\n    function _stringify(val) {\n      switch (canonicalType(val)) {\n        case 'null':\n        case 'undefined':\n          val = '[' + val + ']';\n          break;\n        case 'array':\n        case 'object':\n          val = jsonStringify(val, spaces, depth + 1);\n          break;\n        case 'boolean':\n        case 'regexp':\n        case 'symbol':\n        case 'number':\n          val =\n            val === 0 && 1 / val === -Infinity // `-0`\n              ? '-0'\n              : val.toString();\n          break;\n        case 'bigint':\n          val = val.toString() + 'n';\n          break;\n        case 'date':\n          var sDate = isNaN(val.getTime()) ? val.toString() : val.toISOString();\n          val = '[Date: ' + sDate + ']';\n          break;\n        case 'buffer':\n          var json = val.toJSON();\n          // Based on the toJSON result\n          json = json.data && json.type ? json.data : json;\n          val = '[Buffer: ' + jsonStringify(json, 2, depth + 1) + ']';\n          break;\n        default:\n          val =\n            val === '[Function]' || val === '[Circular]'\n              ? val\n              : JSON.stringify(val); // string\n      }\n      return val;\n    }\n\n    for (var i in object) {\n      if (!Object.prototype.hasOwnProperty.call(object, i)) {\n        continue; // not my business\n      }\n      --length;\n      str +=\n        '\\n ' +\n        repeat(' ', space) +\n        (Array.isArray(object) ? '' : '\"' + i + '\": ') + // key\n        _stringify(object[i]) + // value\n        (length ? ',' : ''); // comma\n    }\n\n    return (\n      str +\n      // [], {}\n      (str.length !== 1 ? '\\n' + repeat(' ', --space) + end : end)\n    );\n  }\n\n  /**\n   * Return a new Thing that has the keys in sorted order. Recursive.\n   *\n   * If the Thing...\n   * - has already been seen, return string `'[Circular]'`\n   * - is `undefined`, return string `'[undefined]'`\n   * - is `null`, return value `null`\n   * - is some other primitive, return the value\n   * - is not a primitive or an `Array`, `Object`, or `Function`, return the value of the Thing's `toString()` method\n   * - is a non-empty `Array`, `Object`, or `Function`, return the result of calling this function again.\n   * - is an empty `Array`, `Object`, or `Function`, return the result of calling `emptyRepresentation()`\n   *\n   * @private\n   * @see {@link exports.stringify}\n   * @param {*} value Thing to inspect.  May or may not have properties.\n   * @param {Array} [stack=[]] Stack of seen values\n   * @param {string} [typeHint] Type hint\n   * @return {(Object|Array|Function|string|undefined)}\n   */\n  exports.canonicalize = function canonicalize(value, stack, typeHint) {\n    var canonicalizedObj;\n    /* eslint-disable no-unused-vars */\n    var prop;\n    /* eslint-enable no-unused-vars */\n    typeHint = typeHint || canonicalType(value);\n    function withStack(value, fn) {\n      stack.push(value);\n      fn();\n      stack.pop();\n    }\n\n    stack = stack || [];\n\n    if (stack.indexOf(value) !== -1) {\n      return '[Circular]';\n    }\n\n    switch (typeHint) {\n      case 'undefined':\n      case 'buffer':\n      case 'null':\n        canonicalizedObj = value;\n        break;\n      case 'array':\n        withStack(value, function() {\n          canonicalizedObj = value.map(function(item) {\n            return exports.canonicalize(item, stack);\n          });\n        });\n        break;\n      case 'function':\n        /* eslint-disable-next-line no-unused-vars, no-unreachable-loop */\n        for (prop in value) {\n          canonicalizedObj = {};\n          break;\n        }\n        /* eslint-enable guard-for-in */\n        if (!canonicalizedObj) {\n          canonicalizedObj = emptyRepresentation(value, typeHint);\n          break;\n        }\n      /* falls through */\n      case 'object':\n        canonicalizedObj = canonicalizedObj || {};\n        withStack(value, function() {\n          Object.keys(value)\n            .sort()\n            .forEach(function(key) {\n              canonicalizedObj[key] = exports.canonicalize(value[key], stack);\n            });\n        });\n        break;\n      case 'date':\n      case 'number':\n      case 'regexp':\n      case 'boolean':\n      case 'symbol':\n        canonicalizedObj = value;\n        break;\n      default:\n        canonicalizedObj = value + '';\n    }\n\n    return canonicalizedObj;\n  };\n\n  /**\n   * @summary\n   * This Filter based on `mocha-clean` module.(see: `github.com/rstacruz/mocha-clean`)\n   * @description\n   * When invoking this function you get a filter function that get the Error.stack as an input,\n   * and return a prettify output.\n   * (i.e: strip Mocha and internal node functions from stack trace).\n   * @returns {Function}\n   */\n  exports.stackTraceFilter = function() {\n    // TODO: Replace with `process.browser`\n    var is = typeof document === 'undefined' ? {node: true} : {browser: true};\n    var slash = path.sep;\n    var cwd;\n    if (is.node) {\n      cwd = exports.cwd() + slash;\n    } else {\n      cwd = (typeof location === 'undefined'\n        ? window.location\n        : location\n      ).href.replace(/\\/[^/]*$/, '/');\n      slash = '/';\n    }\n\n    function isMochaInternal(line) {\n      return (\n        ~line.indexOf('node_modules' + slash + 'mocha' + slash) ||\n        ~line.indexOf(slash + 'mocha.js') ||\n        ~line.indexOf(slash + 'mocha.min.js')\n      );\n    }\n\n    function isNodeInternal(line) {\n      return (\n        ~line.indexOf('(timers.js:') ||\n        ~line.indexOf('(events.js:') ||\n        ~line.indexOf('(node.js:') ||\n        ~line.indexOf('(module.js:') ||\n        ~line.indexOf('GeneratorFunctionPrototype.next (native)') ||\n        false\n      );\n    }\n\n    return function(stack) {\n      stack = stack.split('\\n');\n\n      stack = stack.reduce(function(list, line) {\n        if (isMochaInternal(line)) {\n          return list;\n        }\n\n        if (is.node && isNodeInternal(line)) {\n          return list;\n        }\n\n        // Clean up cwd(absolute)\n        if (/:\\d+:\\d+\\)?$/.test(line)) {\n          line = line.replace('(' + cwd, '(');\n        }\n\n        list.push(line);\n        return list;\n      }, []);\n\n      return stack.join('\\n');\n    };\n  };\n\n  /**\n   * Crude, but effective.\n   * @public\n   * @param {*} value\n   * @returns {boolean} Whether or not `value` is a Promise\n   */\n  exports.isPromise = function isPromise(value) {\n    return (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.then === 'function'\n    );\n  };\n\n  /**\n   * Clamps a numeric value to an inclusive range.\n   *\n   * @param {number} value - Value to be clamped.\n   * @param {number[]} range - Two element array specifying [min, max] range.\n   * @returns {number} clamped value\n   */\n  exports.clamp = function clamp(value, range) {\n    return Math.min(Math.max(value, range[0]), range[1]);\n  };\n\n  /**\n   * It's a noop.\n   * @public\n   */\n  exports.noop = function() {};\n\n  /**\n   * Creates a map-like object.\n   *\n   * @description\n   * A \"map\" is an object with no prototype, for our purposes. In some cases\n   * this would be more appropriate than a `Map`, especially if your environment\n   * doesn't support it. Recommended for use in Mocha's public APIs.\n   *\n   * @public\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Custom_and_Null_objects|MDN:Map}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Custom_and_Null_objects|MDN:Object.create - Custom objects}\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Custom_and_Null_objects|MDN:Object.assign}\n   * @param {...*} [obj] - Arguments to `Object.assign()`.\n   * @returns {Object} An object with no prototype, having `...obj` properties\n   */\n  exports.createMap = function(obj) {\n    return Object.assign.apply(\n      null,\n      [Object.create(null)].concat(Array.prototype.slice.call(arguments))\n    );\n  };\n\n  /**\n   * Creates a read-only map-like object.\n   *\n   * @description\n   * This differs from {@link module:utils.createMap createMap} only in that\n   * the argument must be non-empty, because the result is frozen.\n   *\n   * @see {@link module:utils.createMap createMap}\n   * @param {...*} [obj] - Arguments to `Object.assign()`.\n   * @returns {Object} A frozen object with no prototype, having `...obj` properties\n   * @throws {TypeError} if argument is not a non-empty object.\n   */\n  exports.defineConstants = function(obj) {\n    if (canonicalType(obj) !== 'object' || !Object.keys(obj).length) {\n      throw new TypeError('Invalid argument; expected a non-empty object');\n    }\n    return Object.freeze(exports.createMap(obj));\n  };\n\n  /**\n   * Returns current working directory\n   *\n   * Wrapper around `process.cwd()` for isolation\n   * @private\n   */\n  exports.cwd = function cwd() {\n    return process$1.cwd();\n  };\n\n  /**\n   * Returns `true` if Mocha is running in a browser.\n   * Checks for `process.browser`.\n   * @returns {boolean}\n   * @private\n   */\n  exports.isBrowser = function isBrowser() {\n    return Boolean(browser$2);\n  };\n\n  /*\n   * Casts `value` to an array; useful for optionally accepting array parameters\n   *\n   * It follows these rules, depending on `value`.  If `value` is...\n   * 1. `undefined`: return an empty Array\n   * 2. `null`: return an array with a single `null` element\n   * 3. Any other object: return the value of `Array.from()` _if_ the object is iterable\n   * 4. otherwise: return an array with a single element, `value`\n   * @param {*} value - Something to cast to an Array\n   * @returns {Array<*>}\n   */\n  exports.castArray = function castArray(value) {\n    if (value === undefined) {\n      return [];\n    }\n    if (value === null) {\n      return [null];\n    }\n    if (\n      typeof value === 'object' &&\n      (typeof value[Symbol.iterator] === 'function' || value.length !== undefined)\n    ) {\n      return Array.from(value);\n    }\n    return [value];\n  };\n\n  exports.constants = exports.defineConstants({\n    MOCHA_ID_PROP_NAME\n  });\n\n  /**\n   * Creates a new unique identifier\n   * @returns {string} Unique identifier\n   */\n  exports.uniqueID = () => nanoid();\n\n  exports.assignNewMochaID = obj => {\n    const id = exports.uniqueID();\n    Object.defineProperty(obj, MOCHA_ID_PROP_NAME, {\n      get() {\n        return id;\n      }\n    });\n    return obj;\n  };\n\n  /**\n   * Retrieves a Mocha ID from an object, if present.\n   * @param {*} [obj] - Object\n   * @returns {string|void}\n   */\n  exports.getMochaID = obj =>\n    obj && typeof obj === 'object' ? obj[MOCHA_ID_PROP_NAME] : undefined;\n  });\n\n  var _nodeResolve_empty = {};\n\n  var _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    'default': _nodeResolve_empty\n  });\n\n  var browser$1 = {\n  \tinfo: 'ℹ️',\n  \tsuccess: '✅',\n  \twarning: '⚠️',\n  \terror: '❌️'\n  };\n\n  /**\n   @module Pending\n  */\n\n  var pending = Pending;\n\n  /**\n   * Initialize a new `Pending` error with the given message.\n   *\n   * @param {string} message\n   */\n  function Pending(message) {\n    this.message = message;\n  }\n\n  /**\n   * Helpers.\n   */\n\n  var s = 1000;\n  var m = s * 60;\n  var h = m * 60;\n  var d = h * 24;\n  var w = d * 7;\n  var y = d * 365.25;\n\n  /**\n   * Parse or format the given `val`.\n   *\n   * Options:\n   *\n   *  - `long` verbose formatting [false]\n   *\n   * @param {String|Number} val\n   * @param {Object} [options]\n   * @throws {Error} throw an error if val is not a non-empty string or a number\n   * @return {String|Number}\n   * @api public\n   */\n\n  var ms = function(val, options) {\n    options = options || {};\n    var type = typeof val;\n    if (type === 'string' && val.length > 0) {\n      return parse(val);\n    } else if (type === 'number' && isFinite(val)) {\n      return options.long ? fmtLong(val) : fmtShort(val);\n    }\n    throw new Error(\n      'val is not a non-empty string or a valid number. val=' +\n        JSON.stringify(val)\n    );\n  };\n\n  /**\n   * Parse the given `str` and return milliseconds.\n   *\n   * @param {String} str\n   * @return {Number}\n   * @api private\n   */\n\n  function parse(str) {\n    str = String(str);\n    if (str.length > 100) {\n      return;\n    }\n    var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n      str\n    );\n    if (!match) {\n      return;\n    }\n    var n = parseFloat(match[1]);\n    var type = (match[2] || 'ms').toLowerCase();\n    switch (type) {\n      case 'years':\n      case 'year':\n      case 'yrs':\n      case 'yr':\n      case 'y':\n        return n * y;\n      case 'weeks':\n      case 'week':\n      case 'w':\n        return n * w;\n      case 'days':\n      case 'day':\n      case 'd':\n        return n * d;\n      case 'hours':\n      case 'hour':\n      case 'hrs':\n      case 'hr':\n      case 'h':\n        return n * h;\n      case 'minutes':\n      case 'minute':\n      case 'mins':\n      case 'min':\n      case 'm':\n        return n * m;\n      case 'seconds':\n      case 'second':\n      case 'secs':\n      case 'sec':\n      case 's':\n        return n * s;\n      case 'milliseconds':\n      case 'millisecond':\n      case 'msecs':\n      case 'msec':\n      case 'ms':\n        return n;\n      default:\n        return undefined;\n    }\n  }\n\n  /**\n   * Short format for `ms`.\n   *\n   * @param {Number} ms\n   * @return {String}\n   * @api private\n   */\n\n  function fmtShort(ms) {\n    var msAbs = Math.abs(ms);\n    if (msAbs >= d) {\n      return Math.round(ms / d) + 'd';\n    }\n    if (msAbs >= h) {\n      return Math.round(ms / h) + 'h';\n    }\n    if (msAbs >= m) {\n      return Math.round(ms / m) + 'm';\n    }\n    if (msAbs >= s) {\n      return Math.round(ms / s) + 's';\n    }\n    return ms + 'ms';\n  }\n\n  /**\n   * Long format for `ms`.\n   *\n   * @param {Number} ms\n   * @return {String}\n   * @api private\n   */\n\n  function fmtLong(ms) {\n    var msAbs = Math.abs(ms);\n    if (msAbs >= d) {\n      return plural(ms, msAbs, d, 'day');\n    }\n    if (msAbs >= h) {\n      return plural(ms, msAbs, h, 'hour');\n    }\n    if (msAbs >= m) {\n      return plural(ms, msAbs, m, 'minute');\n    }\n    if (msAbs >= s) {\n      return plural(ms, msAbs, s, 'second');\n    }\n    return ms + ' ms';\n  }\n\n  /**\n   * Pluralization helper.\n   */\n\n  function plural(ms, msAbs, n, name) {\n    var isPlural = msAbs >= n * 1.5;\n    return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n  }\n\n  /**\n   * This is the common logic for both the Node.js and web browser\n   * implementations of `debug()`.\n   */\n\n  function setup(env) {\n  \tcreateDebug.debug = createDebug;\n  \tcreateDebug.default = createDebug;\n  \tcreateDebug.coerce = coerce;\n  \tcreateDebug.disable = disable;\n  \tcreateDebug.enable = enable;\n  \tcreateDebug.enabled = enabled;\n  \tcreateDebug.humanize = ms;\n  \tcreateDebug.destroy = destroy;\n\n  \tObject.keys(env).forEach(key => {\n  \t\tcreateDebug[key] = env[key];\n  \t});\n\n  \t/**\n  \t* The currently active debug mode names, and names to skip.\n  \t*/\n\n  \tcreateDebug.names = [];\n  \tcreateDebug.skips = [];\n\n  \t/**\n  \t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  \t*\n  \t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  \t*/\n  \tcreateDebug.formatters = {};\n\n  \t/**\n  \t* Selects a color for a debug namespace\n  \t* @param {String} namespace The namespace string for the for the debug instance to be colored\n  \t* @return {Number|String} An ANSI color code for the given namespace\n  \t* @api private\n  \t*/\n  \tfunction selectColor(namespace) {\n  \t\tlet hash = 0;\n\n  \t\tfor (let i = 0; i < namespace.length; i++) {\n  \t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n  \t\t\thash |= 0; // Convert to 32bit integer\n  \t\t}\n\n  \t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  \t}\n  \tcreateDebug.selectColor = selectColor;\n\n  \t/**\n  \t* Create a debugger with the given `namespace`.\n  \t*\n  \t* @param {String} namespace\n  \t* @return {Function}\n  \t* @api public\n  \t*/\n  \tfunction createDebug(namespace) {\n  \t\tlet prevTime;\n  \t\tlet enableOverride = null;\n  \t\tlet namespacesCache;\n  \t\tlet enabledCache;\n\n  \t\tfunction debug(...args) {\n  \t\t\t// Disabled?\n  \t\t\tif (!debug.enabled) {\n  \t\t\t\treturn;\n  \t\t\t}\n\n  \t\t\tconst self = debug;\n\n  \t\t\t// Set `diff` timestamp\n  \t\t\tconst curr = Number(new Date());\n  \t\t\tconst ms = curr - (prevTime || curr);\n  \t\t\tself.diff = ms;\n  \t\t\tself.prev = prevTime;\n  \t\t\tself.curr = curr;\n  \t\t\tprevTime = curr;\n\n  \t\t\targs[0] = createDebug.coerce(args[0]);\n\n  \t\t\tif (typeof args[0] !== 'string') {\n  \t\t\t\t// Anything else let's inspect with %O\n  \t\t\t\targs.unshift('%O');\n  \t\t\t}\n\n  \t\t\t// Apply any `formatters` transformations\n  \t\t\tlet index = 0;\n  \t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n  \t\t\t\t// If we encounter an escaped % then don't increase the array index\n  \t\t\t\tif (match === '%%') {\n  \t\t\t\t\treturn '%';\n  \t\t\t\t}\n  \t\t\t\tindex++;\n  \t\t\t\tconst formatter = createDebug.formatters[format];\n  \t\t\t\tif (typeof formatter === 'function') {\n  \t\t\t\t\tconst val = args[index];\n  \t\t\t\t\tmatch = formatter.call(self, val);\n\n  \t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n  \t\t\t\t\targs.splice(index, 1);\n  \t\t\t\t\tindex--;\n  \t\t\t\t}\n  \t\t\t\treturn match;\n  \t\t\t});\n\n  \t\t\t// Apply env-specific formatting (colors, etc.)\n  \t\t\tcreateDebug.formatArgs.call(self, args);\n\n  \t\t\tconst logFn = self.log || createDebug.log;\n  \t\t\tlogFn.apply(self, args);\n  \t\t}\n\n  \t\tdebug.namespace = namespace;\n  \t\tdebug.useColors = createDebug.useColors();\n  \t\tdebug.color = createDebug.selectColor(namespace);\n  \t\tdebug.extend = extend;\n  \t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n  \t\tObject.defineProperty(debug, 'enabled', {\n  \t\t\tenumerable: true,\n  \t\t\tconfigurable: false,\n  \t\t\tget: () => {\n  \t\t\t\tif (enableOverride !== null) {\n  \t\t\t\t\treturn enableOverride;\n  \t\t\t\t}\n  \t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n  \t\t\t\t\tnamespacesCache = createDebug.namespaces;\n  \t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n  \t\t\t\t}\n\n  \t\t\t\treturn enabledCache;\n  \t\t\t},\n  \t\t\tset: v => {\n  \t\t\t\tenableOverride = v;\n  \t\t\t}\n  \t\t});\n\n  \t\t// Env-specific initialization logic for debug instances\n  \t\tif (typeof createDebug.init === 'function') {\n  \t\t\tcreateDebug.init(debug);\n  \t\t}\n\n  \t\treturn debug;\n  \t}\n\n  \tfunction extend(namespace, delimiter) {\n  \t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  \t\tnewDebug.log = this.log;\n  \t\treturn newDebug;\n  \t}\n\n  \t/**\n  \t* Enables a debug mode by namespaces. This can include modes\n  \t* separated by a colon and wildcards.\n  \t*\n  \t* @param {String} namespaces\n  \t* @api public\n  \t*/\n  \tfunction enable(namespaces) {\n  \t\tcreateDebug.save(namespaces);\n  \t\tcreateDebug.namespaces = namespaces;\n\n  \t\tcreateDebug.names = [];\n  \t\tcreateDebug.skips = [];\n\n  \t\tlet i;\n  \t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  \t\tconst len = split.length;\n\n  \t\tfor (i = 0; i < len; i++) {\n  \t\t\tif (!split[i]) {\n  \t\t\t\t// ignore empty strings\n  \t\t\t\tcontinue;\n  \t\t\t}\n\n  \t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n  \t\t\tif (namespaces[0] === '-') {\n  \t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n  \t\t\t} else {\n  \t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t/**\n  \t* Disable debug output.\n  \t*\n  \t* @return {String} namespaces\n  \t* @api public\n  \t*/\n  \tfunction disable() {\n  \t\tconst namespaces = [\n  \t\t\t...createDebug.names.map(toNamespace),\n  \t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n  \t\t].join(',');\n  \t\tcreateDebug.enable('');\n  \t\treturn namespaces;\n  \t}\n\n  \t/**\n  \t* Returns true if the given mode name is enabled, false otherwise.\n  \t*\n  \t* @param {String} name\n  \t* @return {Boolean}\n  \t* @api public\n  \t*/\n  \tfunction enabled(name) {\n  \t\tif (name[name.length - 1] === '*') {\n  \t\t\treturn true;\n  \t\t}\n\n  \t\tlet i;\n  \t\tlet len;\n\n  \t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n  \t\t\tif (createDebug.skips[i].test(name)) {\n  \t\t\t\treturn false;\n  \t\t\t}\n  \t\t}\n\n  \t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n  \t\t\tif (createDebug.names[i].test(name)) {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t}\n\n  \t\treturn false;\n  \t}\n\n  \t/**\n  \t* Convert regexp to namespace\n  \t*\n  \t* @param {RegExp} regxep\n  \t* @return {String} namespace\n  \t* @api private\n  \t*/\n  \tfunction toNamespace(regexp) {\n  \t\treturn regexp.toString()\n  \t\t\t.substring(2, regexp.toString().length - 2)\n  \t\t\t.replace(/\\.\\*\\?$/, '*');\n  \t}\n\n  \t/**\n  \t* Coerce `val`.\n  \t*\n  \t* @param {Mixed} val\n  \t* @return {Mixed}\n  \t* @api private\n  \t*/\n  \tfunction coerce(val) {\n  \t\tif (val instanceof Error) {\n  \t\t\treturn val.stack || val.message;\n  \t\t}\n  \t\treturn val;\n  \t}\n\n  \t/**\n  \t* XXX DO NOT USE. This is a temporary stub function.\n  \t* XXX It WILL be removed in the next major release.\n  \t*/\n  \tfunction destroy() {\n  \t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n  \t}\n\n  \tcreateDebug.enable(createDebug.load());\n\n  \treturn createDebug;\n  }\n\n  var common$1 = setup;\n\n  var browser = createCommonjsModule(function (module, exports) {\n  /* eslint-env browser */\n\n  /**\n   * This is the web browser implementation of `debug()`.\n   */\n\n  exports.formatArgs = formatArgs;\n  exports.save = save;\n  exports.load = load;\n  exports.useColors = useColors;\n  exports.storage = localstorage();\n  exports.destroy = (() => {\n  \tlet warned = false;\n\n  \treturn () => {\n  \t\tif (!warned) {\n  \t\t\twarned = true;\n  \t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n  \t\t}\n  \t};\n  })();\n\n  /**\n   * Colors.\n   */\n\n  exports.colors = [\n  \t'#0000CC',\n  \t'#0000FF',\n  \t'#0033CC',\n  \t'#0033FF',\n  \t'#0066CC',\n  \t'#0066FF',\n  \t'#0099CC',\n  \t'#0099FF',\n  \t'#00CC00',\n  \t'#00CC33',\n  \t'#00CC66',\n  \t'#00CC99',\n  \t'#00CCCC',\n  \t'#00CCFF',\n  \t'#3300CC',\n  \t'#3300FF',\n  \t'#3333CC',\n  \t'#3333FF',\n  \t'#3366CC',\n  \t'#3366FF',\n  \t'#3399CC',\n  \t'#3399FF',\n  \t'#33CC00',\n  \t'#33CC33',\n  \t'#33CC66',\n  \t'#33CC99',\n  \t'#33CCCC',\n  \t'#33CCFF',\n  \t'#6600CC',\n  \t'#6600FF',\n  \t'#6633CC',\n  \t'#6633FF',\n  \t'#66CC00',\n  \t'#66CC33',\n  \t'#9900CC',\n  \t'#9900FF',\n  \t'#9933CC',\n  \t'#9933FF',\n  \t'#99CC00',\n  \t'#99CC33',\n  \t'#CC0000',\n  \t'#CC0033',\n  \t'#CC0066',\n  \t'#CC0099',\n  \t'#CC00CC',\n  \t'#CC00FF',\n  \t'#CC3300',\n  \t'#CC3333',\n  \t'#CC3366',\n  \t'#CC3399',\n  \t'#CC33CC',\n  \t'#CC33FF',\n  \t'#CC6600',\n  \t'#CC6633',\n  \t'#CC9900',\n  \t'#CC9933',\n  \t'#CCCC00',\n  \t'#CCCC33',\n  \t'#FF0000',\n  \t'#FF0033',\n  \t'#FF0066',\n  \t'#FF0099',\n  \t'#FF00CC',\n  \t'#FF00FF',\n  \t'#FF3300',\n  \t'#FF3333',\n  \t'#FF3366',\n  \t'#FF3399',\n  \t'#FF33CC',\n  \t'#FF33FF',\n  \t'#FF6600',\n  \t'#FF6633',\n  \t'#FF9900',\n  \t'#FF9933',\n  \t'#FFCC00',\n  \t'#FFCC33'\n  ];\n\n  /**\n   * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n   * and the Firebug extension (any Firefox version) are known\n   * to support \"%c\" CSS customizations.\n   *\n   * TODO: add a `localStorage` variable to explicitly enable/disable colors\n   */\n\n  // eslint-disable-next-line complexity\n  function useColors() {\n  \t// NB: In an Electron preload script, document will be defined but not fully\n  \t// initialized. Since we know we're in Chrome, we'll just detect this case\n  \t// explicitly\n  \tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n  \t\treturn true;\n  \t}\n\n  \t// Internet Explorer and Edge do not support colors.\n  \tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n  \t\treturn false;\n  \t}\n\n  \t// Is webkit? http://stackoverflow.com/a/16459606/376773\n  \t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  \treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n  \t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n  \t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n  \t\t// Is firefox >= v31?\n  \t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  \t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n  \t\t// Double check webkit in userAgent just in case we are in a worker\n  \t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n  }\n\n  /**\n   * Colorize log arguments if enabled.\n   *\n   * @api public\n   */\n\n  function formatArgs(args) {\n  \targs[0] = (this.useColors ? '%c' : '') +\n  \t\tthis.namespace +\n  \t\t(this.useColors ? ' %c' : ' ') +\n  \t\targs[0] +\n  \t\t(this.useColors ? '%c ' : ' ') +\n  \t\t'+' + module.exports.humanize(this.diff);\n\n  \tif (!this.useColors) {\n  \t\treturn;\n  \t}\n\n  \tconst c = 'color: ' + this.color;\n  \targs.splice(1, 0, c, 'color: inherit');\n\n  \t// The final \"%c\" is somewhat tricky, because there could be other\n  \t// arguments passed either before or after the %c, so we need to\n  \t// figure out the correct index to insert the CSS into\n  \tlet index = 0;\n  \tlet lastC = 0;\n  \targs[0].replace(/%[a-zA-Z%]/g, match => {\n  \t\tif (match === '%%') {\n  \t\t\treturn;\n  \t\t}\n  \t\tindex++;\n  \t\tif (match === '%c') {\n  \t\t\t// We only are interested in the *last* %c\n  \t\t\t// (the user may have provided their own)\n  \t\t\tlastC = index;\n  \t\t}\n  \t});\n\n  \targs.splice(lastC, 0, c);\n  }\n\n  /**\n   * Invokes `console.debug()` when available.\n   * No-op when `console.debug` is not a \"function\".\n   * If `console.debug` is not available, falls back\n   * to `console.log`.\n   *\n   * @api public\n   */\n  exports.log = console.debug || console.log || (() => {});\n\n  /**\n   * Save `namespaces`.\n   *\n   * @param {String} namespaces\n   * @api private\n   */\n  function save(namespaces) {\n  \ttry {\n  \t\tif (namespaces) {\n  \t\t\texports.storage.setItem('debug', namespaces);\n  \t\t} else {\n  \t\t\texports.storage.removeItem('debug');\n  \t\t}\n  \t} catch (error) {\n  \t\t// Swallow\n  \t\t// XXX (@Qix-) should we be logging these?\n  \t}\n  }\n\n  /**\n   * Load `namespaces`.\n   *\n   * @return {String} returns the previously persisted debug modes\n   * @api private\n   */\n  function load() {\n  \tlet r;\n  \ttry {\n  \t\tr = exports.storage.getItem('debug');\n  \t} catch (error) {\n  \t\t// Swallow\n  \t\t// XXX (@Qix-) should we be logging these?\n  \t}\n\n  \t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  \tif (!r && typeof process$1 !== 'undefined' && 'env' in process$1) {\n  \t\tr = process$1.env.DEBUG;\n  \t}\n\n  \treturn r;\n  }\n\n  /**\n   * Localstorage attempts to return the localstorage.\n   *\n   * This is necessary because safari throws\n   * when a user disables cookies/localstorage\n   * and you attempt to access it.\n   *\n   * @return {LocalStorage}\n   * @api private\n   */\n\n  function localstorage() {\n  \ttry {\n  \t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n  \t\t// The Browser also has localStorage in the global context.\n  \t\treturn localStorage;\n  \t} catch (error) {\n  \t\t// Swallow\n  \t\t// XXX (@Qix-) should we be logging these?\n  \t}\n  }\n\n  module.exports = common$1(exports);\n\n  const {formatters} = module.exports;\n\n  /**\n   * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n   */\n\n  formatters.j = function (v) {\n  \ttry {\n  \t\treturn JSON.stringify(v);\n  \t} catch (error) {\n  \t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n  \t}\n  };\n  });\n\n  const {format} = util;\n\n  /**\n   * Contains error codes, factory functions to create throwable error objects,\n   * and warning/deprecation functions.\n   * @module\n   */\n\n  /**\n   * process.emitWarning or a polyfill\n   * @see https://nodejs.org/api/process.html#process_process_emitwarning_warning_options\n   * @ignore\n   */\n  const emitWarning = (msg, type) => {\n    if (process$1.emitWarning) {\n      process$1.emitWarning(msg, type);\n    } else {\n      /* istanbul ignore next */\n      nextTick$1(function() {\n        console.warn(type + ': ' + msg);\n      });\n    }\n  };\n\n  /**\n   * Show a deprecation warning. Each distinct message is only displayed once.\n   * Ignores empty messages.\n   *\n   * @param {string} [msg] - Warning to print\n   * @private\n   */\n  const deprecate = msg => {\n    msg = String(msg);\n    if (msg && !deprecate.cache[msg]) {\n      deprecate.cache[msg] = true;\n      emitWarning(msg, 'DeprecationWarning');\n    }\n  };\n  deprecate.cache = {};\n\n  /**\n   * Show a generic warning.\n   * Ignores empty messages.\n   *\n   * @param {string} [msg] - Warning to print\n   * @private\n   */\n  const warn = msg => {\n    if (msg) {\n      emitWarning(msg);\n    }\n  };\n\n  /**\n   * When Mocha throws exceptions (or rejects `Promise`s), it attempts to assign a `code` property to the `Error` object, for easier handling. These are the potential values of `code`.\n   * @public\n   * @namespace\n   * @memberof module:lib/errors\n   */\n  var constants$4 = {\n    /**\n     * An unrecoverable error.\n     * @constant\n     * @default\n     */\n    FATAL: 'ERR_MOCHA_FATAL',\n\n    /**\n     * The type of an argument to a function call is invalid\n     * @constant\n     * @default\n     */\n    INVALID_ARG_TYPE: 'ERR_MOCHA_INVALID_ARG_TYPE',\n\n    /**\n     * The value of an argument to a function call is invalid\n     * @constant\n     * @default\n     */\n    INVALID_ARG_VALUE: 'ERR_MOCHA_INVALID_ARG_VALUE',\n\n    /**\n     * Something was thrown, but it wasn't an `Error`\n     * @constant\n     * @default\n     */\n    INVALID_EXCEPTION: 'ERR_MOCHA_INVALID_EXCEPTION',\n\n    /**\n     * An interface (e.g., `Mocha.interfaces`) is unknown or invalid\n     * @constant\n     * @default\n     */\n    INVALID_INTERFACE: 'ERR_MOCHA_INVALID_INTERFACE',\n\n    /**\n     * A reporter (.e.g, `Mocha.reporters`) is unknown or invalid\n     * @constant\n     * @default\n     */\n    INVALID_REPORTER: 'ERR_MOCHA_INVALID_REPORTER',\n\n    /**\n     * `done()` was called twice in a `Test` or `Hook` callback\n     * @constant\n     * @default\n     */\n    MULTIPLE_DONE: 'ERR_MOCHA_MULTIPLE_DONE',\n\n    /**\n     * No files matched the pattern provided by the user\n     * @constant\n     * @default\n     */\n    NO_FILES_MATCH_PATTERN: 'ERR_MOCHA_NO_FILES_MATCH_PATTERN',\n\n    /**\n     * Known, but unsupported behavior of some kind\n     * @constant\n     * @default\n     */\n    UNSUPPORTED: 'ERR_MOCHA_UNSUPPORTED',\n\n    /**\n     * Invalid state transition occurring in `Mocha` instance\n     * @constant\n     * @default\n     */\n    INSTANCE_ALREADY_RUNNING: 'ERR_MOCHA_INSTANCE_ALREADY_RUNNING',\n\n    /**\n     * Invalid state transition occurring in `Mocha` instance\n     * @constant\n     * @default\n     */\n    INSTANCE_ALREADY_DISPOSED: 'ERR_MOCHA_INSTANCE_ALREADY_DISPOSED',\n\n    /**\n     * Use of `only()` w/ `--forbid-only` results in this error.\n     * @constant\n     * @default\n     */\n    FORBIDDEN_EXCLUSIVITY: 'ERR_MOCHA_FORBIDDEN_EXCLUSIVITY',\n\n    /**\n     * To be thrown when a user-defined plugin implementation (e.g., `mochaHooks`) is invalid\n     * @constant\n     * @default\n     */\n    INVALID_PLUGIN_IMPLEMENTATION: 'ERR_MOCHA_INVALID_PLUGIN_IMPLEMENTATION',\n\n    /**\n     * To be thrown when a builtin or third-party plugin definition (the _definition_ of `mochaHooks`) is invalid\n     * @constant\n     * @default\n     */\n    INVALID_PLUGIN_DEFINITION: 'ERR_MOCHA_INVALID_PLUGIN_DEFINITION',\n\n    /**\n     * When a runnable exceeds its allowed run time.\n     * @constant\n     * @default\n     */\n    TIMEOUT: 'ERR_MOCHA_TIMEOUT',\n\n    /**\n     * Input file is not able to be parsed\n     * @constant\n     * @default\n     */\n    UNPARSABLE_FILE: 'ERR_MOCHA_UNPARSABLE_FILE'\n  };\n\n  /**\n   * A set containing all string values of all Mocha error constants, for use by {@link isMochaError}.\n   * @private\n   */\n  const MOCHA_ERRORS = new Set(Object.values(constants$4));\n\n  /**\n   * Creates an error object to be thrown when no files to be tested could be found using specified pattern.\n   *\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @param {string} pattern - User-specified argument value.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createNoFilesMatchPatternError(message, pattern) {\n    var err = new Error(message);\n    err.code = constants$4.NO_FILES_MATCH_PATTERN;\n    err.pattern = pattern;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when the reporter specified in the options was not found.\n   *\n   * @public\n   * @param {string} message - Error message to be displayed.\n   * @param {string} reporter - User-specified reporter value.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createInvalidReporterError(message, reporter) {\n    var err = new TypeError(message);\n    err.code = constants$4.INVALID_REPORTER;\n    err.reporter = reporter;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when the interface specified in the options was not found.\n   *\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @param {string} ui - User-specified interface value.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createInvalidInterfaceError(message, ui) {\n    var err = new Error(message);\n    err.code = constants$4.INVALID_INTERFACE;\n    err.interface = ui;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when a behavior, option, or parameter is unsupported.\n   *\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createUnsupportedError$2(message) {\n    var err = new Error(message);\n    err.code = constants$4.UNSUPPORTED;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when an argument is missing.\n   *\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @param {string} argument - Argument name.\n   * @param {string} expected - Expected argument datatype.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createMissingArgumentError$1(message, argument, expected) {\n    return createInvalidArgumentTypeError$1(message, argument, expected);\n  }\n\n  /**\n   * Creates an error object to be thrown when an argument did not use the supported type\n   *\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @param {string} argument - Argument name.\n   * @param {string} expected - Expected argument datatype.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createInvalidArgumentTypeError$1(message, argument, expected) {\n    var err = new TypeError(message);\n    err.code = constants$4.INVALID_ARG_TYPE;\n    err.argument = argument;\n    err.expected = expected;\n    err.actual = typeof argument;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when an argument did not use the supported value\n   *\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @param {string} argument - Argument name.\n   * @param {string} value - Argument value.\n   * @param {string} [reason] - Why value is invalid.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createInvalidArgumentValueError(message, argument, value, reason) {\n    var err = new TypeError(message);\n    err.code = constants$4.INVALID_ARG_VALUE;\n    err.argument = argument;\n    err.value = value;\n    err.reason = typeof reason !== 'undefined' ? reason : 'is invalid';\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when an exception was caught, but the `Error` is falsy or undefined.\n   *\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createInvalidExceptionError$2(message, value) {\n    var err = new Error(message);\n    err.code = constants$4.INVALID_EXCEPTION;\n    err.valueType = typeof value;\n    err.value = value;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when an unrecoverable error occurs.\n   *\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @returns {Error} instance detailing the error condition\n   */\n  function createFatalError$1(message, value) {\n    var err = new Error(message);\n    err.code = constants$4.FATAL;\n    err.valueType = typeof value;\n    err.value = value;\n    return err;\n  }\n\n  /**\n   * Dynamically creates a plugin-type-specific error based on plugin type\n   * @param {string} message - Error message\n   * @param {\"reporter\"|\"ui\"} pluginType - Plugin type. Future: expand as needed\n   * @param {string} [pluginId] - Name/path of plugin, if any\n   * @throws When `pluginType` is not known\n   * @public\n   * @static\n   * @returns {Error}\n   */\n  function createInvalidLegacyPluginError(message, pluginType, pluginId) {\n    switch (pluginType) {\n      case 'reporter':\n        return createInvalidReporterError(message, pluginId);\n      case 'ui':\n        return createInvalidInterfaceError(message, pluginId);\n      default:\n        throw new Error('unknown pluginType \"' + pluginType + '\"');\n    }\n  }\n\n  /**\n   * **DEPRECATED**.  Use {@link createInvalidLegacyPluginError} instead  Dynamically creates a plugin-type-specific error based on plugin type\n   * @deprecated\n   * @param {string} message - Error message\n   * @param {\"reporter\"|\"interface\"} pluginType - Plugin type. Future: expand as needed\n   * @param {string} [pluginId] - Name/path of plugin, if any\n   * @throws When `pluginType` is not known\n   * @public\n   * @static\n   * @returns {Error}\n   */\n  function createInvalidPluginError(...args) {\n    deprecate('Use createInvalidLegacyPluginError() instead');\n    return createInvalidLegacyPluginError(...args);\n  }\n\n  /**\n   * Creates an error object to be thrown when a mocha object's `run` method is executed while it is already disposed.\n   * @param {string} message The error message to be displayed.\n   * @param {boolean} cleanReferencesAfterRun the value of `cleanReferencesAfterRun`\n   * @param {Mocha} instance the mocha instance that throw this error\n   * @static\n   */\n  function createMochaInstanceAlreadyDisposedError(\n    message,\n    cleanReferencesAfterRun,\n    instance\n  ) {\n    var err = new Error(message);\n    err.code = constants$4.INSTANCE_ALREADY_DISPOSED;\n    err.cleanReferencesAfterRun = cleanReferencesAfterRun;\n    err.instance = instance;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when a mocha object's `run` method is called while a test run is in progress.\n   * @param {string} message The error message to be displayed.\n   * @static\n   * @public\n   */\n  function createMochaInstanceAlreadyRunningError(message, instance) {\n    var err = new Error(message);\n    err.code = constants$4.INSTANCE_ALREADY_RUNNING;\n    err.instance = instance;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when done() is called multiple times in a test\n   *\n   * @public\n   * @param {Runnable} runnable - Original runnable\n   * @param {Error} [originalErr] - Original error, if any\n   * @returns {Error} instance detailing the error condition\n   * @static\n   */\n  function createMultipleDoneError$1(runnable, originalErr) {\n    var title;\n    try {\n      title = format('<%s>', runnable.fullTitle());\n      if (runnable.parent.root) {\n        title += ' (of root suite)';\n      }\n    } catch (ignored) {\n      title = format('<%s> (of unknown suite)', runnable.title);\n    }\n    var message = format(\n      'done() called multiple times in %s %s',\n      runnable.type ? runnable.type : 'unknown runnable',\n      title\n    );\n    if (runnable.file) {\n      message += format(' of file %s', runnable.file);\n    }\n    if (originalErr) {\n      message += format('; in addition, done() received error: %s', originalErr);\n    }\n\n    var err = new Error(message);\n    err.code = constants$4.MULTIPLE_DONE;\n    err.valueType = typeof originalErr;\n    err.value = originalErr;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when `.only()` is used with\n   * `--forbid-only`.\n   * @static\n   * @public\n   * @param {Mocha} mocha - Mocha instance\n   * @returns {Error} Error with code {@link constants.FORBIDDEN_EXCLUSIVITY}\n   */\n  function createForbiddenExclusivityError$1(mocha) {\n    var err = new Error(\n      mocha.isWorker\n        ? '`.only` is not supported in parallel mode'\n        : '`.only` forbidden by --forbid-only'\n    );\n    err.code = constants$4.FORBIDDEN_EXCLUSIVITY;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when a plugin definition is invalid\n   * @static\n   * @param {string} msg - Error message\n   * @param {PluginDefinition} [pluginDef] - Problematic plugin definition\n   * @public\n   * @returns {Error} Error with code {@link constants.INVALID_PLUGIN_DEFINITION}\n   */\n  function createInvalidPluginDefinitionError(msg, pluginDef) {\n    const err = new Error(msg);\n    err.code = constants$4.INVALID_PLUGIN_DEFINITION;\n    err.pluginDef = pluginDef;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when a plugin implementation (user code) is invalid\n   * @static\n   * @param {string} msg - Error message\n   * @param {Object} [opts] - Plugin definition and user-supplied implementation\n   * @param {PluginDefinition} [opts.pluginDef] - Plugin Definition\n   * @param {*} [opts.pluginImpl] - Plugin Implementation (user-supplied)\n   * @public\n   * @returns {Error} Error with code {@link constants.INVALID_PLUGIN_DEFINITION}\n   */\n  function createInvalidPluginImplementationError(\n    msg,\n    {pluginDef, pluginImpl} = {}\n  ) {\n    const err = new Error(msg);\n    err.code = constants$4.INVALID_PLUGIN_IMPLEMENTATION;\n    err.pluginDef = pluginDef;\n    err.pluginImpl = pluginImpl;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when a runnable exceeds its allowed run time.\n   * @static\n   * @param {string} msg - Error message\n   * @param {number} [timeout] - Timeout in ms\n   * @param {string} [file] - File, if given\n   * @returns {MochaTimeoutError}\n   */\n  function createTimeoutError$1(msg, timeout, file) {\n    const err = new Error(msg);\n    err.code = constants$4.TIMEOUT;\n    err.timeout = timeout;\n    err.file = file;\n    return err;\n  }\n\n  /**\n   * Creates an error object to be thrown when file is unparsable\n   * @public\n   * @static\n   * @param {string} message - Error message to be displayed.\n   * @param {string} filename - File name\n   * @returns {Error} Error with code {@link constants.UNPARSABLE_FILE}\n   */\n  function createUnparsableFileError(message, filename) {\n    var err = new Error(message);\n    err.code = constants$4.UNPARSABLE_FILE;\n    return err;\n  }\n\n  /**\n   * Returns `true` if an error came out of Mocha.\n   * _Can suffer from false negatives, but not false positives._\n   * @static\n   * @public\n   * @param {*} err - Error, or anything\n   * @returns {boolean}\n   */\n  const isMochaError$1 = err =>\n    Boolean(err && typeof err === 'object' && MOCHA_ERRORS.has(err.code));\n\n  var errors = {\n    constants: constants$4,\n    createFatalError: createFatalError$1,\n    createForbiddenExclusivityError: createForbiddenExclusivityError$1,\n    createInvalidArgumentTypeError: createInvalidArgumentTypeError$1,\n    createInvalidArgumentValueError,\n    createInvalidExceptionError: createInvalidExceptionError$2,\n    createInvalidInterfaceError,\n    createInvalidLegacyPluginError,\n    createInvalidPluginDefinitionError,\n    createInvalidPluginError,\n    createInvalidPluginImplementationError,\n    createInvalidReporterError,\n    createMissingArgumentError: createMissingArgumentError$1,\n    createMochaInstanceAlreadyDisposedError,\n    createMochaInstanceAlreadyRunningError,\n    createMultipleDoneError: createMultipleDoneError$1,\n    createNoFilesMatchPatternError,\n    createTimeoutError: createTimeoutError$1,\n    createUnparsableFileError,\n    createUnsupportedError: createUnsupportedError$2,\n    deprecate,\n    isMochaError: isMochaError$1,\n    warn\n  };\n\n  var EventEmitter$1 = EventEmitter$2.EventEmitter;\n\n  var debug$1 = browser('mocha:runnable');\n\n\n  const {\n    createInvalidExceptionError: createInvalidExceptionError$1,\n    createMultipleDoneError,\n    createTimeoutError\n  } = errors;\n\n  /**\n   * Save timer references to avoid Sinon interfering (see GH-237).\n   * @private\n   */\n  var Date$4 = commonjsGlobal.Date;\n  var setTimeout$3 = commonjsGlobal.setTimeout;\n  var clearTimeout$1 = commonjsGlobal.clearTimeout;\n  var toString = Object.prototype.toString;\n\n  var runnable = Runnable;\n\n  /**\n   * Initialize a new `Runnable` with the given `title` and callback `fn`.\n   *\n   * @class\n   * @extends external:EventEmitter\n   * @public\n   * @param {String} title\n   * @param {Function} fn\n   */\n  function Runnable(title, fn) {\n    this.title = title;\n    this.fn = fn;\n    this.body = (fn || '').toString();\n    this.async = fn && fn.length;\n    this.sync = !this.async;\n    this._timeout = 2000;\n    this._slow = 75;\n    this._retries = -1;\n    utils.assignNewMochaID(this);\n    Object.defineProperty(this, 'id', {\n      get() {\n        return utils.getMochaID(this);\n      }\n    });\n    this.reset();\n  }\n\n  /**\n   * Inherit from `EventEmitter.prototype`.\n   */\n  utils.inherits(Runnable, EventEmitter$1);\n\n  /**\n   * Resets the state initially or for a next run.\n   */\n  Runnable.prototype.reset = function() {\n    this.timedOut = false;\n    this._currentRetry = 0;\n    this.pending = false;\n    delete this.state;\n    delete this.err;\n  };\n\n  /**\n   * Get current timeout value in msecs.\n   *\n   * @private\n   * @returns {number} current timeout threshold value\n   */\n  /**\n   * @summary\n   * Set timeout threshold value (msecs).\n   *\n   * @description\n   * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n   * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n   * If clamped value matches either range endpoint, timeouts will be disabled.\n   *\n   * @private\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n   * @param {number|string} ms - Timeout threshold value.\n   * @returns {Runnable} this\n   * @chainable\n   */\n  Runnable.prototype.timeout = function(ms) {\n    if (!arguments.length) {\n      return this._timeout;\n    }\n    if (typeof ms === 'string') {\n      ms = ms$1(ms);\n    }\n\n    // Clamp to range\n    var INT_MAX = Math.pow(2, 31) - 1;\n    var range = [0, INT_MAX];\n    ms = utils.clamp(ms, range);\n\n    // see #1652 for reasoning\n    if (ms === range[0] || ms === range[1]) {\n      this._timeout = 0;\n    } else {\n      this._timeout = ms;\n    }\n    debug$1('timeout %d', this._timeout);\n\n    if (this.timer) {\n      this.resetTimeout();\n    }\n    return this;\n  };\n\n  /**\n   * Set or get slow `ms`.\n   *\n   * @private\n   * @param {number|string} ms\n   * @return {Runnable|number} ms or Runnable instance.\n   */\n  Runnable.prototype.slow = function(ms) {\n    if (!arguments.length || typeof ms === 'undefined') {\n      return this._slow;\n    }\n    if (typeof ms === 'string') {\n      ms = ms$1(ms);\n    }\n    debug$1('slow %d', ms);\n    this._slow = ms;\n    return this;\n  };\n\n  /**\n   * Halt and mark as pending.\n   *\n   * @memberof Mocha.Runnable\n   * @public\n   */\n  Runnable.prototype.skip = function() {\n    this.pending = true;\n    throw new pending('sync skip; aborting execution');\n  };\n\n  /**\n   * Check if this runnable or its parent suite is marked as pending.\n   *\n   * @private\n   */\n  Runnable.prototype.isPending = function() {\n    return this.pending || (this.parent && this.parent.isPending());\n  };\n\n  /**\n   * Return `true` if this Runnable has failed.\n   * @return {boolean}\n   * @private\n   */\n  Runnable.prototype.isFailed = function() {\n    return !this.isPending() && this.state === constants$3.STATE_FAILED;\n  };\n\n  /**\n   * Return `true` if this Runnable has passed.\n   * @return {boolean}\n   * @private\n   */\n  Runnable.prototype.isPassed = function() {\n    return !this.isPending() && this.state === constants$3.STATE_PASSED;\n  };\n\n  /**\n   * Set or get number of retries.\n   *\n   * @private\n   */\n  Runnable.prototype.retries = function(n) {\n    if (!arguments.length) {\n      return this._retries;\n    }\n    this._retries = n;\n  };\n\n  /**\n   * Set or get current retry\n   *\n   * @private\n   */\n  Runnable.prototype.currentRetry = function(n) {\n    if (!arguments.length) {\n      return this._currentRetry;\n    }\n    this._currentRetry = n;\n  };\n\n  /**\n   * Return the full title generated by recursively concatenating the parent's\n   * full title.\n   *\n   * @memberof Mocha.Runnable\n   * @public\n   * @return {string}\n   */\n  Runnable.prototype.fullTitle = function() {\n    return this.titlePath().join(' ');\n  };\n\n  /**\n   * Return the title path generated by concatenating the parent's title path with the title.\n   *\n   * @memberof Mocha.Runnable\n   * @public\n   * @return {string}\n   */\n  Runnable.prototype.titlePath = function() {\n    return this.parent.titlePath().concat([this.title]);\n  };\n\n  /**\n   * Clear the timeout.\n   *\n   * @private\n   */\n  Runnable.prototype.clearTimeout = function() {\n    clearTimeout$1(this.timer);\n  };\n\n  /**\n   * Reset the timeout.\n   *\n   * @private\n   */\n  Runnable.prototype.resetTimeout = function() {\n    var self = this;\n    var ms = this.timeout();\n\n    if (ms === 0) {\n      return;\n    }\n    this.clearTimeout();\n    this.timer = setTimeout$3(function() {\n      if (self.timeout() === 0) {\n        return;\n      }\n      self.callback(self._timeoutError(ms));\n      self.timedOut = true;\n    }, ms);\n  };\n\n  /**\n   * Set or get a list of whitelisted globals for this test run.\n   *\n   * @private\n   * @param {string[]} globals\n   */\n  Runnable.prototype.globals = function(globals) {\n    if (!arguments.length) {\n      return this._allowedGlobals;\n    }\n    this._allowedGlobals = globals;\n  };\n\n  /**\n   * Run the test and invoke `fn(err)`.\n   *\n   * @param {Function} fn\n   * @private\n   */\n  Runnable.prototype.run = function(fn) {\n    var self = this;\n    var start = new Date$4();\n    var ctx = this.ctx;\n    var finished;\n    var errorWasHandled = false;\n\n    if (this.isPending()) return fn();\n\n    // Sometimes the ctx exists, but it is not runnable\n    if (ctx && ctx.runnable) {\n      ctx.runnable(this);\n    }\n\n    // called multiple times\n    function multiple(err) {\n      if (errorWasHandled) {\n        return;\n      }\n      errorWasHandled = true;\n      self.emit('error', createMultipleDoneError(self, err));\n    }\n\n    // finished\n    function done(err) {\n      var ms = self.timeout();\n      if (self.timedOut) {\n        return;\n      }\n\n      if (finished) {\n        return multiple(err);\n      }\n\n      self.clearTimeout();\n      self.duration = new Date$4() - start;\n      finished = true;\n      if (!err && self.duration > ms && ms > 0) {\n        err = self._timeoutError(ms);\n      }\n      fn(err);\n    }\n\n    // for .resetTimeout() and Runner#uncaught()\n    this.callback = done;\n\n    if (this.fn && typeof this.fn.call !== 'function') {\n      done(\n        new TypeError(\n          'A runnable must be passed a function as its second argument.'\n        )\n      );\n      return;\n    }\n\n    // explicit async with `done` argument\n    if (this.async) {\n      this.resetTimeout();\n\n      // allows skip() to be used in an explicit async context\n      this.skip = function asyncSkip() {\n        this.pending = true;\n        done();\n        // halt execution, the uncaught handler will ignore the failure.\n        throw new pending('async skip; aborting execution');\n      };\n\n      try {\n        callFnAsync(this.fn);\n      } catch (err) {\n        // handles async runnables which actually run synchronously\n        errorWasHandled = true;\n        if (err instanceof pending) {\n          return; // done() is already called in this.skip()\n        } else if (this.allowUncaught) {\n          throw err;\n        }\n        done(Runnable.toValueOrError(err));\n      }\n      return;\n    }\n\n    // sync or promise-returning\n    try {\n      callFn(this.fn);\n    } catch (err) {\n      errorWasHandled = true;\n      if (err instanceof pending) {\n        return done();\n      } else if (this.allowUncaught) {\n        throw err;\n      }\n      done(Runnable.toValueOrError(err));\n    }\n\n    function callFn(fn) {\n      var result = fn.call(ctx);\n      if (result && typeof result.then === 'function') {\n        self.resetTimeout();\n        result.then(\n          function() {\n            done();\n            // Return null so libraries like bluebird do not warn about\n            // subsequently constructed Promises.\n            return null;\n          },\n          function(reason) {\n            done(reason || new Error('Promise rejected with no or falsy reason'));\n          }\n        );\n      } else {\n        if (self.asyncOnly) {\n          return done(\n            new Error(\n              '--async-only option in use without declaring `done()` or returning a promise'\n            )\n          );\n        }\n\n        done();\n      }\n    }\n\n    function callFnAsync(fn) {\n      var result = fn.call(ctx, function(err) {\n        if (err instanceof Error || toString.call(err) === '[object Error]') {\n          return done(err);\n        }\n        if (err) {\n          if (Object.prototype.toString.call(err) === '[object Object]') {\n            return done(\n              new Error('done() invoked with non-Error: ' + JSON.stringify(err))\n            );\n          }\n          return done(new Error('done() invoked with non-Error: ' + err));\n        }\n        if (result && utils.isPromise(result)) {\n          return done(\n            new Error(\n              'Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'\n            )\n          );\n        }\n\n        done();\n      });\n    }\n  };\n\n  /**\n   * Instantiates a \"timeout\" error\n   *\n   * @param {number} ms - Timeout (in milliseconds)\n   * @returns {Error} a \"timeout\" error\n   * @private\n   */\n  Runnable.prototype._timeoutError = function(ms) {\n    let msg = `Timeout of ${ms}ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.`;\n    if (this.file) {\n      msg += ' (' + this.file + ')';\n    }\n    return createTimeoutError(msg, ms, this.file);\n  };\n\n  var constants$3 = utils.defineConstants(\n    /**\n     * {@link Runnable}-related constants.\n     * @public\n     * @memberof Runnable\n     * @readonly\n     * @static\n     * @alias constants\n     * @enum {string}\n     */\n    {\n      /**\n       * Value of `state` prop when a `Runnable` has failed\n       */\n      STATE_FAILED: 'failed',\n      /**\n       * Value of `state` prop when a `Runnable` has passed\n       */\n      STATE_PASSED: 'passed',\n      /**\n       * Value of `state` prop when a `Runnable` has been skipped by user\n       */\n      STATE_PENDING: 'pending'\n    }\n  );\n\n  /**\n   * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n   * @param {*} [value] - Value to return, if present\n   * @returns {*|Error} `value`, otherwise an `Error`\n   * @private\n   */\n  Runnable.toValueOrError = function(value) {\n    return (\n      value ||\n      createInvalidExceptionError$1(\n        'Runnable failed with falsy or undefined exception. Please throw an Error instead.',\n        value\n      )\n    );\n  };\n\n  Runnable.constants = constants$3;\n\n  const {inherits, constants: constants$2} = utils;\n  const {MOCHA_ID_PROP_NAME: MOCHA_ID_PROP_NAME$1} = constants$2;\n\n  /**\n   * Expose `Hook`.\n   */\n\n  var hook = Hook;\n\n  /**\n   * Initialize a new `Hook` with the given `title` and callback `fn`\n   *\n   * @class\n   * @extends Runnable\n   * @param {String} title\n   * @param {Function} fn\n   */\n  function Hook(title, fn) {\n    runnable.call(this, title, fn);\n    this.type = 'hook';\n  }\n\n  /**\n   * Inherit from `Runnable.prototype`.\n   */\n  inherits(Hook, runnable);\n\n  /**\n   * Resets the state for a next run.\n   */\n  Hook.prototype.reset = function() {\n    runnable.prototype.reset.call(this);\n    delete this._error;\n  };\n\n  /**\n   * Get or set the test `err`.\n   *\n   * @memberof Hook\n   * @public\n   * @param {Error} err\n   * @return {Error}\n   */\n  Hook.prototype.error = function(err) {\n    if (!arguments.length) {\n      err = this._error;\n      this._error = null;\n      return err;\n    }\n\n    this._error = err;\n  };\n\n  /**\n   * Returns an object suitable for IPC.\n   * Functions are represented by keys beginning with `$$`.\n   * @private\n   * @returns {Object}\n   */\n  Hook.prototype.serialize = function serialize() {\n    return {\n      $$currentRetry: this.currentRetry(),\n      $$fullTitle: this.fullTitle(),\n      $$isPending: Boolean(this.isPending()),\n      $$titlePath: this.titlePath(),\n      ctx:\n        this.ctx && this.ctx.currentTest\n          ? {\n              currentTest: {\n                title: this.ctx.currentTest.title,\n                [MOCHA_ID_PROP_NAME$1]: this.ctx.currentTest.id\n              }\n            }\n          : {},\n      duration: this.duration,\n      file: this.file,\n      parent: {\n        $$fullTitle: this.parent.fullTitle(),\n        [MOCHA_ID_PROP_NAME$1]: this.parent.id\n      },\n      state: this.state,\n      title: this.title,\n      type: this.type,\n      [MOCHA_ID_PROP_NAME$1]: this.id\n    };\n  };\n\n  var suite = createCommonjsModule(function (module, exports) {\n\n  /**\n   * Module dependencies.\n   * @private\n   */\n  const {EventEmitter} = EventEmitter$2;\n\n  var {\n    assignNewMochaID,\n    clamp,\n    constants: utilsConstants,\n    defineConstants,\n    getMochaID,\n    inherits,\n    isString\n  } = utils;\n  const debug = browser('mocha:suite');\n\n\n\n  const {MOCHA_ID_PROP_NAME} = utilsConstants;\n\n  /**\n   * Expose `Suite`.\n   */\n\n  module.exports = Suite;\n\n  /**\n   * Create a new `Suite` with the given `title` and parent `Suite`.\n   *\n   * @public\n   * @param {Suite} parent - Parent suite (required!)\n   * @param {string} title - Title\n   * @return {Suite}\n   */\n  Suite.create = function(parent, title) {\n    var suite = new Suite(title, parent.ctx);\n    suite.parent = parent;\n    title = suite.fullTitle();\n    parent.addSuite(suite);\n    return suite;\n  };\n\n  /**\n   * Constructs a new `Suite` instance with the given `title`, `ctx`, and `isRoot`.\n   *\n   * @public\n   * @class\n   * @extends EventEmitter\n   * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter|EventEmitter}\n   * @param {string} title - Suite title.\n   * @param {Context} parentContext - Parent context instance.\n   * @param {boolean} [isRoot=false] - Whether this is the root suite.\n   */\n  function Suite(title, parentContext, isRoot) {\n    if (!isString(title)) {\n      throw errors.createInvalidArgumentTypeError(\n        'Suite argument \"title\" must be a string. Received type \"' +\n          typeof title +\n          '\"',\n        'title',\n        'string'\n      );\n    }\n    this.title = title;\n    function Context() {}\n    Context.prototype = parentContext;\n    this.ctx = new Context();\n    this.suites = [];\n    this.tests = [];\n    this.root = isRoot === true;\n    this.pending = false;\n    this._retries = -1;\n    this._beforeEach = [];\n    this._beforeAll = [];\n    this._afterEach = [];\n    this._afterAll = [];\n    this._timeout = 2000;\n    this._slow = 75;\n    this._bail = false;\n    this._onlyTests = [];\n    this._onlySuites = [];\n    assignNewMochaID(this);\n\n    Object.defineProperty(this, 'id', {\n      get() {\n        return getMochaID(this);\n      }\n    });\n\n    this.reset();\n  }\n\n  /**\n   * Inherit from `EventEmitter.prototype`.\n   */\n  inherits(Suite, EventEmitter);\n\n  /**\n   * Resets the state initially or for a next run.\n   */\n  Suite.prototype.reset = function() {\n    this.delayed = false;\n    function doReset(thingToReset) {\n      thingToReset.reset();\n    }\n    this.suites.forEach(doReset);\n    this.tests.forEach(doReset);\n    this._beforeEach.forEach(doReset);\n    this._afterEach.forEach(doReset);\n    this._beforeAll.forEach(doReset);\n    this._afterAll.forEach(doReset);\n  };\n\n  /**\n   * Return a clone of this `Suite`.\n   *\n   * @private\n   * @return {Suite}\n   */\n  Suite.prototype.clone = function() {\n    var suite = new Suite(this.title);\n    debug('clone');\n    suite.ctx = this.ctx;\n    suite.root = this.root;\n    suite.timeout(this.timeout());\n    suite.retries(this.retries());\n    suite.slow(this.slow());\n    suite.bail(this.bail());\n    return suite;\n  };\n\n  /**\n   * Set or get timeout `ms` or short-hand such as \"2s\".\n   *\n   * @private\n   * @todo Do not attempt to set value if `ms` is undefined\n   * @param {number|string} ms\n   * @return {Suite|number} for chaining\n   */\n  Suite.prototype.timeout = function(ms) {\n    if (!arguments.length) {\n      return this._timeout;\n    }\n    if (typeof ms === 'string') {\n      ms = ms$1(ms);\n    }\n\n    // Clamp to range\n    var INT_MAX = Math.pow(2, 31) - 1;\n    var range = [0, INT_MAX];\n    ms = clamp(ms, range);\n\n    debug('timeout %d', ms);\n    this._timeout = parseInt(ms, 10);\n    return this;\n  };\n\n  /**\n   * Set or get number of times to retry a failed test.\n   *\n   * @private\n   * @param {number|string} n\n   * @return {Suite|number} for chaining\n   */\n  Suite.prototype.retries = function(n) {\n    if (!arguments.length) {\n      return this._retries;\n    }\n    debug('retries %d', n);\n    this._retries = parseInt(n, 10) || 0;\n    return this;\n  };\n\n  /**\n   * Set or get slow `ms` or short-hand such as \"2s\".\n   *\n   * @private\n   * @param {number|string} ms\n   * @return {Suite|number} for chaining\n   */\n  Suite.prototype.slow = function(ms) {\n    if (!arguments.length) {\n      return this._slow;\n    }\n    if (typeof ms === 'string') {\n      ms = ms$1(ms);\n    }\n    debug('slow %d', ms);\n    this._slow = ms;\n    return this;\n  };\n\n  /**\n   * Set or get whether to bail after first error.\n   *\n   * @private\n   * @param {boolean} bail\n   * @return {Suite|number} for chaining\n   */\n  Suite.prototype.bail = function(bail) {\n    if (!arguments.length) {\n      return this._bail;\n    }\n    debug('bail %s', bail);\n    this._bail = bail;\n    return this;\n  };\n\n  /**\n   * Check if this suite or its parent suite is marked as pending.\n   *\n   * @private\n   */\n  Suite.prototype.isPending = function() {\n    return this.pending || (this.parent && this.parent.isPending());\n  };\n\n  /**\n   * Generic hook-creator.\n   * @private\n   * @param {string} title - Title of hook\n   * @param {Function} fn - Hook callback\n   * @returns {Hook} A new hook\n   */\n  Suite.prototype._createHook = function(title, fn) {\n    var hook$1 = new hook(title, fn);\n    hook$1.parent = this;\n    hook$1.timeout(this.timeout());\n    hook$1.retries(this.retries());\n    hook$1.slow(this.slow());\n    hook$1.ctx = this.ctx;\n    hook$1.file = this.file;\n    return hook$1;\n  };\n\n  /**\n   * Run `fn(test[, done])` before running tests.\n   *\n   * @private\n   * @param {string} title\n   * @param {Function} fn\n   * @return {Suite} for chaining\n   */\n  Suite.prototype.beforeAll = function(title, fn) {\n    if (this.isPending()) {\n      return this;\n    }\n    if (typeof title === 'function') {\n      fn = title;\n      title = fn.name;\n    }\n    title = '\"before all\" hook' + (title ? ': ' + title : '');\n\n    var hook = this._createHook(title, fn);\n    this._beforeAll.push(hook);\n    this.emit(constants.EVENT_SUITE_ADD_HOOK_BEFORE_ALL, hook);\n    return this;\n  };\n\n  /**\n   * Run `fn(test[, done])` after running tests.\n   *\n   * @private\n   * @param {string} title\n   * @param {Function} fn\n   * @return {Suite} for chaining\n   */\n  Suite.prototype.afterAll = function(title, fn) {\n    if (this.isPending()) {\n      return this;\n    }\n    if (typeof title === 'function') {\n      fn = title;\n      title = fn.name;\n    }\n    title = '\"after all\" hook' + (title ? ': ' + title : '');\n\n    var hook = this._createHook(title, fn);\n    this._afterAll.push(hook);\n    this.emit(constants.EVENT_SUITE_ADD_HOOK_AFTER_ALL, hook);\n    return this;\n  };\n\n  /**\n   * Run `fn(test[, done])` before each test case.\n   *\n   * @private\n   * @param {string} title\n   * @param {Function} fn\n   * @return {Suite} for chaining\n   */\n  Suite.prototype.beforeEach = function(title, fn) {\n    if (this.isPending()) {\n      return this;\n    }\n    if (typeof title === 'function') {\n      fn = title;\n      title = fn.name;\n    }\n    title = '\"before each\" hook' + (title ? ': ' + title : '');\n\n    var hook = this._createHook(title, fn);\n    this._beforeEach.push(hook);\n    this.emit(constants.EVENT_SUITE_ADD_HOOK_BEFORE_EACH, hook);\n    return this;\n  };\n\n  /**\n   * Run `fn(test[, done])` after each test case.\n   *\n   * @private\n   * @param {string} title\n   * @param {Function} fn\n   * @return {Suite} for chaining\n   */\n  Suite.prototype.afterEach = function(title, fn) {\n    if (this.isPending()) {\n      return this;\n    }\n    if (typeof title === 'function') {\n      fn = title;\n      title = fn.name;\n    }\n    title = '\"after each\" hook' + (title ? ': ' + title : '');\n\n    var hook = this._createHook(title, fn);\n    this._afterEach.push(hook);\n    this.emit(constants.EVENT_SUITE_ADD_HOOK_AFTER_EACH, hook);\n    return this;\n  };\n\n  /**\n   * Add a test `suite`.\n   *\n   * @private\n   * @param {Suite} suite\n   * @return {Suite} for chaining\n   */\n  Suite.prototype.addSuite = function(suite) {\n    suite.parent = this;\n    suite.root = false;\n    suite.timeout(this.timeout());\n    suite.retries(this.retries());\n    suite.slow(this.slow());\n    suite.bail(this.bail());\n    this.suites.push(suite);\n    this.emit(constants.EVENT_SUITE_ADD_SUITE, suite);\n    return this;\n  };\n\n  /**\n   * Add a `test` to this suite.\n   *\n   * @private\n   * @param {Test} test\n   * @return {Suite} for chaining\n   */\n  Suite.prototype.addTest = function(test) {\n    test.parent = this;\n    test.timeout(this.timeout());\n    test.retries(this.retries());\n    test.slow(this.slow());\n    test.ctx = this.ctx;\n    this.tests.push(test);\n    this.emit(constants.EVENT_SUITE_ADD_TEST, test);\n    return this;\n  };\n\n  /**\n   * Return the full title generated by recursively concatenating the parent's\n   * full title.\n   *\n   * @memberof Suite\n   * @public\n   * @return {string}\n   */\n  Suite.prototype.fullTitle = function() {\n    return this.titlePath().join(' ');\n  };\n\n  /**\n   * Return the title path generated by recursively concatenating the parent's\n   * title path.\n   *\n   * @memberof Suite\n   * @public\n   * @return {string}\n   */\n  Suite.prototype.titlePath = function() {\n    var result = [];\n    if (this.parent) {\n      result = result.concat(this.parent.titlePath());\n    }\n    if (!this.root) {\n      result.push(this.title);\n    }\n    return result;\n  };\n\n  /**\n   * Return the total number of tests.\n   *\n   * @memberof Suite\n   * @public\n   * @return {number}\n   */\n  Suite.prototype.total = function() {\n    return (\n      this.suites.reduce(function(sum, suite) {\n        return sum + suite.total();\n      }, 0) + this.tests.length\n    );\n  };\n\n  /**\n   * Iterates through each suite recursively to find all tests. Applies a\n   * function in the format `fn(test)`.\n   *\n   * @private\n   * @param {Function} fn\n   * @return {Suite}\n   */\n  Suite.prototype.eachTest = function(fn) {\n    this.tests.forEach(fn);\n    this.suites.forEach(function(suite) {\n      suite.eachTest(fn);\n    });\n    return this;\n  };\n\n  /**\n   * This will run the root suite if we happen to be running in delayed mode.\n   * @private\n   */\n  Suite.prototype.run = function run() {\n    if (this.root) {\n      this.emit(constants.EVENT_ROOT_SUITE_RUN);\n    }\n  };\n\n  /**\n   * Determines whether a suite has an `only` test or suite as a descendant.\n   *\n   * @private\n   * @returns {Boolean}\n   */\n  Suite.prototype.hasOnly = function hasOnly() {\n    return (\n      this._onlyTests.length > 0 ||\n      this._onlySuites.length > 0 ||\n      this.suites.some(function(suite) {\n        return suite.hasOnly();\n      })\n    );\n  };\n\n  /**\n   * Filter suites based on `isOnly` logic.\n   *\n   * @private\n   * @returns {Boolean}\n   */\n  Suite.prototype.filterOnly = function filterOnly() {\n    if (this._onlyTests.length) {\n      // If the suite contains `only` tests, run those and ignore any nested suites.\n      this.tests = this._onlyTests;\n      this.suites = [];\n    } else {\n      // Otherwise, do not run any of the tests in this suite.\n      this.tests = [];\n      this._onlySuites.forEach(function(onlySuite) {\n        // If there are other `only` tests/suites nested in the current `only` suite, then filter that `only` suite.\n        // Otherwise, all of the tests on this `only` suite should be run, so don't filter it.\n        if (onlySuite.hasOnly()) {\n          onlySuite.filterOnly();\n        }\n      });\n      // Run the `only` suites, as well as any other suites that have `only` tests/suites as descendants.\n      var onlySuites = this._onlySuites;\n      this.suites = this.suites.filter(function(childSuite) {\n        return onlySuites.indexOf(childSuite) !== -1 || childSuite.filterOnly();\n      });\n    }\n    // Keep the suite only if there is something to run\n    return this.tests.length > 0 || this.suites.length > 0;\n  };\n\n  /**\n   * Adds a suite to the list of subsuites marked `only`.\n   *\n   * @private\n   * @param {Suite} suite\n   */\n  Suite.prototype.appendOnlySuite = function(suite) {\n    this._onlySuites.push(suite);\n  };\n\n  /**\n   * Marks a suite to be `only`.\n   *\n   * @private\n   */\n  Suite.prototype.markOnly = function() {\n    this.parent && this.parent.appendOnlySuite(this);\n  };\n\n  /**\n   * Adds a test to the list of tests marked `only`.\n   *\n   * @private\n   * @param {Test} test\n   */\n  Suite.prototype.appendOnlyTest = function(test) {\n    this._onlyTests.push(test);\n  };\n\n  /**\n   * Returns the array of hooks by hook name; see `HOOK_TYPE_*` constants.\n   * @private\n   */\n  Suite.prototype.getHooks = function getHooks(name) {\n    return this['_' + name];\n  };\n\n  /**\n   * cleans all references from this suite and all child suites.\n   */\n  Suite.prototype.dispose = function() {\n    this.suites.forEach(function(suite) {\n      suite.dispose();\n    });\n    this.cleanReferences();\n  };\n\n  /**\n   * Cleans up the references to all the deferred functions\n   * (before/after/beforeEach/afterEach) and tests of a Suite.\n   * These must be deleted otherwise a memory leak can happen,\n   * as those functions may reference variables from closures,\n   * thus those variables can never be garbage collected as long\n   * as the deferred functions exist.\n   *\n   * @private\n   */\n  Suite.prototype.cleanReferences = function cleanReferences() {\n    function cleanArrReferences(arr) {\n      for (var i = 0; i < arr.length; i++) {\n        delete arr[i].fn;\n      }\n    }\n\n    if (Array.isArray(this._beforeAll)) {\n      cleanArrReferences(this._beforeAll);\n    }\n\n    if (Array.isArray(this._beforeEach)) {\n      cleanArrReferences(this._beforeEach);\n    }\n\n    if (Array.isArray(this._afterAll)) {\n      cleanArrReferences(this._afterAll);\n    }\n\n    if (Array.isArray(this._afterEach)) {\n      cleanArrReferences(this._afterEach);\n    }\n\n    for (var i = 0; i < this.tests.length; i++) {\n      delete this.tests[i].fn;\n    }\n  };\n\n  /**\n   * Returns an object suitable for IPC.\n   * Functions are represented by keys beginning with `$$`.\n   * @private\n   * @returns {Object}\n   */\n  Suite.prototype.serialize = function serialize() {\n    return {\n      _bail: this._bail,\n      $$fullTitle: this.fullTitle(),\n      $$isPending: Boolean(this.isPending()),\n      root: this.root,\n      title: this.title,\n      [MOCHA_ID_PROP_NAME]: this.id,\n      parent: this.parent ? {[MOCHA_ID_PROP_NAME]: this.parent.id} : null\n    };\n  };\n\n  var constants = defineConstants(\n    /**\n     * {@link Suite}-related constants.\n     * @public\n     * @memberof Suite\n     * @alias constants\n     * @readonly\n     * @static\n     * @enum {string}\n     */\n    {\n      /**\n       * Event emitted after a test file has been loaded. Not emitted in browser.\n       */\n      EVENT_FILE_POST_REQUIRE: 'post-require',\n      /**\n       * Event emitted before a test file has been loaded. In browser, this is emitted once an interface has been selected.\n       */\n      EVENT_FILE_PRE_REQUIRE: 'pre-require',\n      /**\n       * Event emitted immediately after a test file has been loaded. Not emitted in browser.\n       */\n      EVENT_FILE_REQUIRE: 'require',\n      /**\n       * Event emitted when `global.run()` is called (use with `delay` option).\n       */\n      EVENT_ROOT_SUITE_RUN: 'run',\n\n      /**\n       * Namespace for collection of a `Suite`'s \"after all\" hooks.\n       */\n      HOOK_TYPE_AFTER_ALL: 'afterAll',\n      /**\n       * Namespace for collection of a `Suite`'s \"after each\" hooks.\n       */\n      HOOK_TYPE_AFTER_EACH: 'afterEach',\n      /**\n       * Namespace for collection of a `Suite`'s \"before all\" hooks.\n       */\n      HOOK_TYPE_BEFORE_ALL: 'beforeAll',\n      /**\n       * Namespace for collection of a `Suite`'s \"before each\" hooks.\n       */\n      HOOK_TYPE_BEFORE_EACH: 'beforeEach',\n\n      /**\n       * Emitted after a child `Suite` has been added to a `Suite`.\n       */\n      EVENT_SUITE_ADD_SUITE: 'suite',\n      /**\n       * Emitted after an \"after all\" `Hook` has been added to a `Suite`.\n       */\n      EVENT_SUITE_ADD_HOOK_AFTER_ALL: 'afterAll',\n      /**\n       * Emitted after an \"after each\" `Hook` has been added to a `Suite`.\n       */\n      EVENT_SUITE_ADD_HOOK_AFTER_EACH: 'afterEach',\n      /**\n       * Emitted after an \"before all\" `Hook` has been added to a `Suite`.\n       */\n      EVENT_SUITE_ADD_HOOK_BEFORE_ALL: 'beforeAll',\n      /**\n       * Emitted after an \"before each\" `Hook` has been added to a `Suite`.\n       */\n      EVENT_SUITE_ADD_HOOK_BEFORE_EACH: 'beforeEach',\n      /**\n       * Emitted after a `Test` has been added to a `Suite`.\n       */\n      EVENT_SUITE_ADD_TEST: 'test'\n    }\n  );\n\n  Suite.constants = constants;\n  });\n\n  /**\n   * Module dependencies.\n   * @private\n   */\n  var EventEmitter = EventEmitter$2.EventEmitter;\n\n\n  var debug = browser('mocha:runner');\n\n\n  var HOOK_TYPE_BEFORE_EACH = suite.constants.HOOK_TYPE_BEFORE_EACH;\n  var HOOK_TYPE_AFTER_EACH = suite.constants.HOOK_TYPE_AFTER_EACH;\n  var HOOK_TYPE_AFTER_ALL = suite.constants.HOOK_TYPE_AFTER_ALL;\n  var HOOK_TYPE_BEFORE_ALL = suite.constants.HOOK_TYPE_BEFORE_ALL;\n  var EVENT_ROOT_SUITE_RUN = suite.constants.EVENT_ROOT_SUITE_RUN;\n  var STATE_FAILED = runnable.constants.STATE_FAILED;\n  var STATE_PASSED = runnable.constants.STATE_PASSED;\n  var STATE_PENDING = runnable.constants.STATE_PENDING;\n  var stackFilter = utils.stackTraceFilter();\n  var stringify = utils.stringify;\n\n  const {\n    createInvalidExceptionError,\n    createUnsupportedError: createUnsupportedError$1,\n    createFatalError,\n    isMochaError,\n    constants: errorConstants\n  } = errors;\n\n  /**\n   * Non-enumerable globals.\n   * @private\n   * @readonly\n   */\n  var globals = [\n    'setTimeout',\n    'clearTimeout',\n    'setInterval',\n    'clearInterval',\n    'XMLHttpRequest',\n    'Date',\n    'setImmediate',\n    'clearImmediate'\n  ];\n\n  var constants$1 = utils.defineConstants(\n    /**\n     * {@link Runner}-related constants.\n     * @public\n     * @memberof Runner\n     * @readonly\n     * @alias constants\n     * @static\n     * @enum {string}\n     */\n    {\n      /**\n       * Emitted when {@link Hook} execution begins\n       */\n      EVENT_HOOK_BEGIN: 'hook',\n      /**\n       * Emitted when {@link Hook} execution ends\n       */\n      EVENT_HOOK_END: 'hook end',\n      /**\n       * Emitted when Root {@link Suite} execution begins (all files have been parsed and hooks/tests are ready for execution)\n       */\n      EVENT_RUN_BEGIN: 'start',\n      /**\n       * Emitted when Root {@link Suite} execution has been delayed via `delay` option\n       */\n      EVENT_DELAY_BEGIN: 'waiting',\n      /**\n       * Emitted when delayed Root {@link Suite} execution is triggered by user via `global.run()`\n       */\n      EVENT_DELAY_END: 'ready',\n      /**\n       * Emitted when Root {@link Suite} execution ends\n       */\n      EVENT_RUN_END: 'end',\n      /**\n       * Emitted when {@link Suite} execution begins\n       */\n      EVENT_SUITE_BEGIN: 'suite',\n      /**\n       * Emitted when {@link Suite} execution ends\n       */\n      EVENT_SUITE_END: 'suite end',\n      /**\n       * Emitted when {@link Test} execution begins\n       */\n      EVENT_TEST_BEGIN: 'test',\n      /**\n       * Emitted when {@link Test} execution ends\n       */\n      EVENT_TEST_END: 'test end',\n      /**\n       * Emitted when {@link Test} execution fails\n       */\n      EVENT_TEST_FAIL: 'fail',\n      /**\n       * Emitted when {@link Test} execution succeeds\n       */\n      EVENT_TEST_PASS: 'pass',\n      /**\n       * Emitted when {@link Test} becomes pending\n       */\n      EVENT_TEST_PENDING: 'pending',\n      /**\n       * Emitted when {@link Test} execution has failed, but will retry\n       */\n      EVENT_TEST_RETRY: 'retry',\n      /**\n       * Initial state of Runner\n       */\n      STATE_IDLE: 'idle',\n      /**\n       * State set to this value when the Runner has started running\n       */\n      STATE_RUNNING: 'running',\n      /**\n       * State set to this value when the Runner has stopped\n       */\n      STATE_STOPPED: 'stopped'\n    }\n  );\n\n  class Runner extends EventEmitter {\n    /**\n     * Initialize a `Runner` at the Root {@link Suite}, which represents a hierarchy of {@link Suite|Suites} and {@link Test|Tests}.\n     *\n     * @extends external:EventEmitter\n     * @public\n     * @class\n     * @param {Suite} suite - Root suite\n     * @param {Object|boolean} [opts] - Options. If `boolean` (deprecated), whether to delay execution of root suite until ready.\n     * @param {boolean} [opts.cleanReferencesAfterRun] - Whether to clean references to test fns and hooks when a suite is done.\n     * @param {boolean} [opts.delay] - Whether to delay execution of root suite until ready.\n     * @param {boolean} [opts.dryRun] - Whether to report tests without running them.\n     * @param {boolean} [options.failZero] - Whether to fail test run if zero tests encountered.\n     */\n    constructor(suite, opts) {\n      super();\n      if (opts === undefined) {\n        opts = {};\n      }\n      if (typeof opts === 'boolean') {\n        // TODO: remove this\n        errors.deprecate(\n          '\"Runner(suite: Suite, delay: boolean)\" is deprecated. Use \"Runner(suite: Suite, {delay: boolean})\" instead.'\n        );\n        this._delay = opts;\n        opts = {};\n      } else {\n        this._delay = opts.delay;\n      }\n      var self = this;\n      this._globals = [];\n      this._abort = false;\n      this.suite = suite;\n      this._opts = opts;\n      this.state = constants$1.STATE_IDLE;\n      this.total = suite.total();\n      this.failures = 0;\n      /**\n       * @type {Map<EventEmitter,Map<string,Set<EventListener>>>}\n       */\n      this._eventListeners = new Map();\n      this.on(constants$1.EVENT_TEST_END, function(test) {\n        if (test.type === 'test' && test.retriedTest() && test.parent) {\n          var idx =\n            test.parent.tests && test.parent.tests.indexOf(test.retriedTest());\n          if (idx > -1) test.parent.tests[idx] = test;\n        }\n        self.checkGlobals(test);\n      });\n      this.on(constants$1.EVENT_HOOK_END, function(hook) {\n        self.checkGlobals(hook);\n      });\n      this._defaultGrep = /.*/;\n      this.grep(this._defaultGrep);\n      this.globals(this.globalProps());\n\n      this.uncaught = this._uncaught.bind(this);\n      this.unhandled = (reason, promise) => {\n        if (isMochaError(reason)) {\n          debug(\n            'trapped unhandled rejection coming out of Mocha; forwarding to uncaught handler:',\n            reason\n          );\n          this.uncaught(reason);\n        } else {\n          debug(\n            'trapped unhandled rejection from (probably) user code; re-emitting on process'\n          );\n          this._removeEventListener(\n            process$1,\n            'unhandledRejection',\n            this.unhandled\n          );\n          try {\n            process$1.emit('unhandledRejection', reason, promise);\n          } finally {\n            this._addEventListener(process$1, 'unhandledRejection', this.unhandled);\n          }\n        }\n      };\n    }\n  }\n\n  /**\n   * Wrapper for setImmediate, process.nextTick, or browser polyfill.\n   *\n   * @param {Function} fn\n   * @private\n   */\n  Runner.immediately = commonjsGlobal.setImmediate || nextTick$1;\n\n  /**\n   * Replacement for `target.on(eventName, listener)` that does bookkeeping to remove them when this runner instance is disposed.\n   * @param {EventEmitter} target - The `EventEmitter`\n   * @param {string} eventName - The event name\n   * @param {string} fn - Listener function\n   * @private\n   */\n  Runner.prototype._addEventListener = function(target, eventName, listener) {\n    debug(\n      '_addEventListener(): adding for event %s; %d current listeners',\n      eventName,\n      target.listenerCount(eventName)\n    );\n    /* istanbul ignore next */\n    if (\n      this._eventListeners.has(target) &&\n      this._eventListeners.get(target).has(eventName) &&\n      this._eventListeners\n        .get(target)\n        .get(eventName)\n        .has(listener)\n    ) {\n      debug(\n        'warning: tried to attach duplicate event listener for %s',\n        eventName\n      );\n      return;\n    }\n    target.on(eventName, listener);\n    const targetListeners = this._eventListeners.has(target)\n      ? this._eventListeners.get(target)\n      : new Map();\n    const targetEventListeners = targetListeners.has(eventName)\n      ? targetListeners.get(eventName)\n      : new Set();\n    targetEventListeners.add(listener);\n    targetListeners.set(eventName, targetEventListeners);\n    this._eventListeners.set(target, targetListeners);\n  };\n\n  /**\n   * Replacement for `target.removeListener(eventName, listener)` that also updates the bookkeeping.\n   * @param {EventEmitter} target - The `EventEmitter`\n   * @param {string} eventName - The event name\n   * @param {function} listener - Listener function\n   * @private\n   */\n  Runner.prototype._removeEventListener = function(target, eventName, listener) {\n    target.removeListener(eventName, listener);\n\n    if (this._eventListeners.has(target)) {\n      const targetListeners = this._eventListeners.get(target);\n      if (targetListeners.has(eventName)) {\n        const targetEventListeners = targetListeners.get(eventName);\n        targetEventListeners.delete(listener);\n        if (!targetEventListeners.size) {\n          targetListeners.delete(eventName);\n        }\n      }\n      if (!targetListeners.size) {\n        this._eventListeners.delete(target);\n      }\n    } else {\n      debug('trying to remove listener for untracked object %s', target);\n    }\n  };\n\n  /**\n   * Removes all event handlers set during a run on this instance.\n   * Remark: this does _not_ clean/dispose the tests or suites themselves.\n   */\n  Runner.prototype.dispose = function() {\n    this.removeAllListeners();\n    this._eventListeners.forEach((targetListeners, target) => {\n      targetListeners.forEach((targetEventListeners, eventName) => {\n        targetEventListeners.forEach(listener => {\n          target.removeListener(eventName, listener);\n        });\n      });\n    });\n    this._eventListeners.clear();\n  };\n\n  /**\n   * Run tests with full titles matching `re`. Updates runner.total\n   * with number of tests matched.\n   *\n   * @public\n   * @memberof Runner\n   * @param {RegExp} re\n   * @param {boolean} invert\n   * @return {Runner} Runner instance.\n   */\n  Runner.prototype.grep = function(re, invert) {\n    debug('grep(): setting to %s', re);\n    this._grep = re;\n    this._invert = invert;\n    this.total = this.grepTotal(this.suite);\n    return this;\n  };\n\n  /**\n   * Returns the number of tests matching the grep search for the\n   * given suite.\n   *\n   * @memberof Runner\n   * @public\n   * @param {Suite} suite\n   * @return {number}\n   */\n  Runner.prototype.grepTotal = function(suite) {\n    var self = this;\n    var total = 0;\n\n    suite.eachTest(function(test) {\n      var match = self._grep.test(test.fullTitle());\n      if (self._invert) {\n        match = !match;\n      }\n      if (match) {\n        total++;\n      }\n    });\n\n    return total;\n  };\n\n  /**\n   * Return a list of global properties.\n   *\n   * @return {Array}\n   * @private\n   */\n  Runner.prototype.globalProps = function() {\n    var props = Object.keys(commonjsGlobal);\n\n    // non-enumerables\n    for (var i = 0; i < globals.length; ++i) {\n      if (~props.indexOf(globals[i])) {\n        continue;\n      }\n      props.push(globals[i]);\n    }\n\n    return props;\n  };\n\n  /**\n   * Allow the given `arr` of globals.\n   *\n   * @public\n   * @memberof Runner\n   * @param {Array} arr\n   * @return {Runner} Runner instance.\n   */\n  Runner.prototype.globals = function(arr) {\n    if (!arguments.length) {\n      return this._globals;\n    }\n    debug('globals(): setting to %O', arr);\n    this._globals = this._globals.concat(arr);\n    return this;\n  };\n\n  /**\n   * Check for global variable leaks.\n   *\n   * @private\n   */\n  Runner.prototype.checkGlobals = function(test) {\n    if (!this.checkLeaks) {\n      return;\n    }\n    var ok = this._globals;\n\n    var globals = this.globalProps();\n    var leaks;\n\n    if (test) {\n      ok = ok.concat(test._allowedGlobals || []);\n    }\n\n    if (this.prevGlobalsLength === globals.length) {\n      return;\n    }\n    this.prevGlobalsLength = globals.length;\n\n    leaks = filterLeaks(ok, globals);\n    this._globals = this._globals.concat(leaks);\n\n    if (leaks.length) {\n      var msg = `global leak(s) detected: ${leaks.map(e => `'${e}'`).join(', ')}`;\n      this.fail(test, new Error(msg));\n    }\n  };\n\n  /**\n   * Fail the given `test`.\n   *\n   * If `test` is a hook, failures work in the following pattern:\n   * - If bail, run corresponding `after each` and `after` hooks,\n   *   then exit\n   * - Failed `before` hook skips all tests in a suite and subsuites,\n   *   but jumps to corresponding `after` hook\n   * - Failed `before each` hook skips remaining tests in a\n   *   suite and jumps to corresponding `after each` hook,\n   *   which is run only once\n   * - Failed `after` hook does not alter execution order\n   * - Failed `after each` hook skips remaining tests in a\n   *   suite and subsuites, but executes other `after each`\n   *   hooks\n   *\n   * @private\n   * @param {Runnable} test\n   * @param {Error} err\n   * @param {boolean} [force=false] - Whether to fail a pending test.\n   */\n  Runner.prototype.fail = function(test, err, force) {\n    force = force === true;\n    if (test.isPending() && !force) {\n      return;\n    }\n    if (this.state === constants$1.STATE_STOPPED) {\n      if (err.code === errorConstants.MULTIPLE_DONE) {\n        throw err;\n      }\n      throw createFatalError(\n        'Test failed after root suite execution completed!',\n        err\n      );\n    }\n\n    ++this.failures;\n    debug('total number of failures: %d', this.failures);\n    test.state = STATE_FAILED;\n\n    if (!isError(err)) {\n      err = thrown2Error(err);\n    }\n\n    try {\n      err.stack =\n        this.fullStackTrace || !err.stack ? err.stack : stackFilter(err.stack);\n    } catch (ignore) {\n      // some environments do not take kindly to monkeying with the stack\n    }\n\n    this.emit(constants$1.EVENT_TEST_FAIL, test, err);\n  };\n\n  /**\n   * Run hook `name` callbacks and then invoke `fn()`.\n   *\n   * @private\n   * @param {string} name\n   * @param {Function} fn\n   */\n\n  Runner.prototype.hook = function(name, fn) {\n    if (this._opts.dryRun) return fn();\n\n    var suite = this.suite;\n    var hooks = suite.getHooks(name);\n    var self = this;\n\n    function next(i) {\n      var hook = hooks[i];\n      if (!hook) {\n        return fn();\n      }\n      self.currentRunnable = hook;\n\n      if (name === HOOK_TYPE_BEFORE_ALL) {\n        hook.ctx.currentTest = hook.parent.tests[0];\n      } else if (name === HOOK_TYPE_AFTER_ALL) {\n        hook.ctx.currentTest = hook.parent.tests[hook.parent.tests.length - 1];\n      } else {\n        hook.ctx.currentTest = self.test;\n      }\n\n      setHookTitle(hook);\n\n      hook.allowUncaught = self.allowUncaught;\n\n      self.emit(constants$1.EVENT_HOOK_BEGIN, hook);\n\n      if (!hook.listeners('error').length) {\n        self._addEventListener(hook, 'error', function(err) {\n          self.fail(hook, err);\n        });\n      }\n\n      hook.run(function cbHookRun(err) {\n        var testError = hook.error();\n        if (testError) {\n          self.fail(self.test, testError);\n        }\n        // conditional skip\n        if (hook.pending) {\n          if (name === HOOK_TYPE_AFTER_EACH) {\n            // TODO define and implement use case\n            if (self.test) {\n              self.test.pending = true;\n            }\n          } else if (name === HOOK_TYPE_BEFORE_EACH) {\n            if (self.test) {\n              self.test.pending = true;\n            }\n            self.emit(constants$1.EVENT_HOOK_END, hook);\n            hook.pending = false; // activates hook for next test\n            return fn(new Error('abort hookDown'));\n          } else if (name === HOOK_TYPE_BEFORE_ALL) {\n            suite.tests.forEach(function(test) {\n              test.pending = true;\n            });\n            suite.suites.forEach(function(suite) {\n              suite.pending = true;\n            });\n            hooks = [];\n          } else {\n            hook.pending = false;\n            var errForbid = createUnsupportedError$1('`this.skip` forbidden');\n            self.fail(hook, errForbid);\n            return fn(errForbid);\n          }\n        } else if (err) {\n          self.fail(hook, err);\n          // stop executing hooks, notify callee of hook err\n          return fn(err);\n        }\n        self.emit(constants$1.EVENT_HOOK_END, hook);\n        delete hook.ctx.currentTest;\n        setHookTitle(hook);\n        next(++i);\n      });\n\n      function setHookTitle(hook) {\n        hook.originalTitle = hook.originalTitle || hook.title;\n        if (hook.ctx && hook.ctx.currentTest) {\n          hook.title = `${hook.originalTitle} for \"${hook.ctx.currentTest.title}\"`;\n        } else {\n          var parentTitle;\n          if (hook.parent.title) {\n            parentTitle = hook.parent.title;\n          } else {\n            parentTitle = hook.parent.root ? '{root}' : '';\n          }\n          hook.title = `${hook.originalTitle} in \"${parentTitle}\"`;\n        }\n      }\n    }\n\n    Runner.immediately(function() {\n      next(0);\n    });\n  };\n\n  /**\n   * Run hook `name` for the given array of `suites`\n   * in order, and callback `fn(err, errSuite)`.\n   *\n   * @private\n   * @param {string} name\n   * @param {Array} suites\n   * @param {Function} fn\n   */\n  Runner.prototype.hooks = function(name, suites, fn) {\n    var self = this;\n    var orig = this.suite;\n\n    function next(suite) {\n      self.suite = suite;\n\n      if (!suite) {\n        self.suite = orig;\n        return fn();\n      }\n\n      self.hook(name, function(err) {\n        if (err) {\n          var errSuite = self.suite;\n          self.suite = orig;\n          return fn(err, errSuite);\n        }\n\n        next(suites.pop());\n      });\n    }\n\n    next(suites.pop());\n  };\n\n  /**\n   * Run 'afterEach' hooks from bottom up.\n   *\n   * @param {String} name\n   * @param {Function} fn\n   * @private\n   */\n  Runner.prototype.hookUp = function(name, fn) {\n    var suites = [this.suite].concat(this.parents()).reverse();\n    this.hooks(name, suites, fn);\n  };\n\n  /**\n   * Run 'beforeEach' hooks from top level down.\n   *\n   * @param {String} name\n   * @param {Function} fn\n   * @private\n   */\n  Runner.prototype.hookDown = function(name, fn) {\n    var suites = [this.suite].concat(this.parents());\n    this.hooks(name, suites, fn);\n  };\n\n  /**\n   * Return an array of parent Suites from\n   * closest to furthest.\n   *\n   * @return {Array}\n   * @private\n   */\n  Runner.prototype.parents = function() {\n    var suite = this.suite;\n    var suites = [];\n    while (suite.parent) {\n      suite = suite.parent;\n      suites.push(suite);\n    }\n    return suites;\n  };\n\n  /**\n   * Run the current test and callback `fn(err)`.\n   *\n   * @param {Function} fn\n   * @private\n   */\n  Runner.prototype.runTest = function(fn) {\n    if (this._opts.dryRun) return fn();\n\n    var self = this;\n    var test = this.test;\n\n    if (!test) {\n      return;\n    }\n\n    if (this.asyncOnly) {\n      test.asyncOnly = true;\n    }\n    this._addEventListener(test, 'error', function(err) {\n      self.fail(test, err);\n    });\n    if (this.allowUncaught) {\n      test.allowUncaught = true;\n      return test.run(fn);\n    }\n    try {\n      test.run(fn);\n    } catch (err) {\n      fn(err);\n    }\n  };\n\n  /**\n   * Run tests in the given `suite` and invoke the callback `fn()` when complete.\n   *\n   * @private\n   * @param {Suite} suite\n   * @param {Function} fn\n   */\n  Runner.prototype.runTests = function(suite, fn) {\n    var self = this;\n    var tests = suite.tests.slice();\n    var test;\n\n    function hookErr(_, errSuite, after) {\n      // before/after Each hook for errSuite failed:\n      var orig = self.suite;\n\n      // for failed 'after each' hook start from errSuite parent,\n      // otherwise start from errSuite itself\n      self.suite = after ? errSuite.parent : errSuite;\n\n      if (self.suite) {\n        self.hookUp(HOOK_TYPE_AFTER_EACH, function(err2, errSuite2) {\n          self.suite = orig;\n          // some hooks may fail even now\n          if (err2) {\n            return hookErr(err2, errSuite2, true);\n          }\n          // report error suite\n          fn(errSuite);\n        });\n      } else {\n        // there is no need calling other 'after each' hooks\n        self.suite = orig;\n        fn(errSuite);\n      }\n    }\n\n    function next(err, errSuite) {\n      // if we bail after first err\n      if (self.failures && suite._bail) {\n        tests = [];\n      }\n\n      if (self._abort) {\n        return fn();\n      }\n\n      if (err) {\n        return hookErr(err, errSuite, true);\n      }\n\n      // next test\n      test = tests.shift();\n\n      // all done\n      if (!test) {\n        return fn();\n      }\n\n      // grep\n      var match = self._grep.test(test.fullTitle());\n      if (self._invert) {\n        match = !match;\n      }\n      if (!match) {\n        // Run immediately only if we have defined a grep. When we\n        // define a grep — It can cause maximum callstack error if\n        // the grep is doing a large recursive loop by neglecting\n        // all tests. The run immediately function also comes with\n        // a performance cost. So we don't want to run immediately\n        // if we run the whole test suite, because running the whole\n        // test suite don't do any immediate recursive loops. Thus,\n        // allowing a JS runtime to breathe.\n        if (self._grep !== self._defaultGrep) {\n          Runner.immediately(next);\n        } else {\n          next();\n        }\n        return;\n      }\n\n      // static skip, no hooks are executed\n      if (test.isPending()) {\n        if (self.forbidPending) {\n          self.fail(test, new Error('Pending test forbidden'), true);\n        } else {\n          test.state = STATE_PENDING;\n          self.emit(constants$1.EVENT_TEST_PENDING, test);\n        }\n        self.emit(constants$1.EVENT_TEST_END, test);\n        return next();\n      }\n\n      // execute test and hook(s)\n      self.emit(constants$1.EVENT_TEST_BEGIN, (self.test = test));\n      self.hookDown(HOOK_TYPE_BEFORE_EACH, function(err, errSuite) {\n        // conditional skip within beforeEach\n        if (test.isPending()) {\n          if (self.forbidPending) {\n            self.fail(test, new Error('Pending test forbidden'), true);\n          } else {\n            test.state = STATE_PENDING;\n            self.emit(constants$1.EVENT_TEST_PENDING, test);\n          }\n          self.emit(constants$1.EVENT_TEST_END, test);\n          // skip inner afterEach hooks below errSuite level\n          var origSuite = self.suite;\n          self.suite = errSuite || self.suite;\n          return self.hookUp(HOOK_TYPE_AFTER_EACH, function(e, eSuite) {\n            self.suite = origSuite;\n            next(e, eSuite);\n          });\n        }\n        if (err) {\n          return hookErr(err, errSuite, false);\n        }\n        self.currentRunnable = self.test;\n        self.runTest(function(err) {\n          test = self.test;\n          // conditional skip within it\n          if (test.pending) {\n            if (self.forbidPending) {\n              self.fail(test, new Error('Pending test forbidden'), true);\n            } else {\n              test.state = STATE_PENDING;\n              self.emit(constants$1.EVENT_TEST_PENDING, test);\n            }\n            self.emit(constants$1.EVENT_TEST_END, test);\n            return self.hookUp(HOOK_TYPE_AFTER_EACH, next);\n          } else if (err) {\n            var retry = test.currentRetry();\n            if (retry < test.retries()) {\n              var clonedTest = test.clone();\n              clonedTest.currentRetry(retry + 1);\n              tests.unshift(clonedTest);\n\n              self.emit(constants$1.EVENT_TEST_RETRY, test, err);\n\n              // Early return + hook trigger so that it doesn't\n              // increment the count wrong\n              return self.hookUp(HOOK_TYPE_AFTER_EACH, next);\n            } else {\n              self.fail(test, err);\n            }\n            self.emit(constants$1.EVENT_TEST_END, test);\n            return self.hookUp(HOOK_TYPE_AFTER_EACH, next);\n          }\n\n          test.state = STATE_PASSED;\n          self.emit(constants$1.EVENT_TEST_PASS, test);\n          self.emit(constants$1.EVENT_TEST_END, test);\n          self.hookUp(HOOK_TYPE_AFTER_EACH, next);\n        });\n      });\n    }\n\n    this.next = next;\n    this.hookErr = hookErr;\n    next();\n  };\n\n  /**\n   * Run the given `suite` and invoke the callback `fn()` when complete.\n   *\n   * @private\n   * @param {Suite} suite\n   * @param {Function} fn\n   */\n  Runner.prototype.runSuite = function(suite, fn) {\n    var i = 0;\n    var self = this;\n    var total = this.grepTotal(suite);\n\n    debug('runSuite(): running %s', suite.fullTitle());\n\n    if (!total || (self.failures && suite._bail)) {\n      debug('runSuite(): bailing');\n      return fn();\n    }\n\n    this.emit(constants$1.EVENT_SUITE_BEGIN, (this.suite = suite));\n\n    function next(errSuite) {\n      if (errSuite) {\n        // current suite failed on a hook from errSuite\n        if (errSuite === suite) {\n          // if errSuite is current suite\n          // continue to the next sibling suite\n          return done();\n        }\n        // errSuite is among the parents of current suite\n        // stop execution of errSuite and all sub-suites\n        return done(errSuite);\n      }\n\n      if (self._abort) {\n        return done();\n      }\n\n      var curr = suite.suites[i++];\n      if (!curr) {\n        return done();\n      }\n\n      // Avoid grep neglecting large number of tests causing a\n      // huge recursive loop and thus a maximum call stack error.\n      // See comment in `this.runTests()` for more information.\n      if (self._grep !== self._defaultGrep) {\n        Runner.immediately(function() {\n          self.runSuite(curr, next);\n        });\n      } else {\n        self.runSuite(curr, next);\n      }\n    }\n\n    function done(errSuite) {\n      self.suite = suite;\n      self.nextSuite = next;\n\n      // remove reference to test\n      delete self.test;\n\n      self.hook(HOOK_TYPE_AFTER_ALL, function() {\n        self.emit(constants$1.EVENT_SUITE_END, suite);\n        fn(errSuite);\n      });\n    }\n\n    this.nextSuite = next;\n\n    this.hook(HOOK_TYPE_BEFORE_ALL, function(err) {\n      if (err) {\n        return done();\n      }\n      self.runTests(suite, next);\n    });\n  };\n\n  /**\n   * Handle uncaught exceptions within runner.\n   *\n   * This function is bound to the instance as `Runner#uncaught` at instantiation\n   * time. It's intended to be listening on the `Process.uncaughtException` event.\n   * In order to not leak EE listeners, we need to ensure no more than a single\n   * `uncaughtException` listener exists per `Runner`.  The only way to do\n   * this--because this function needs the context (and we don't have lambdas)--is\n   * to use `Function.prototype.bind`. We need strict equality to unregister and\n   * _only_ unregister the _one_ listener we set from the\n   * `Process.uncaughtException` event; would be poor form to just remove\n   * everything. See {@link Runner#run} for where the event listener is registered\n   * and unregistered.\n   * @param {Error} err - Some uncaught error\n   * @private\n   */\n  Runner.prototype._uncaught = function(err) {\n    // this is defensive to prevent future developers from mis-calling this function.\n    // it's more likely that it'd be called with the incorrect context--say, the global\n    // `process` object--than it would to be called with a context that is not a \"subclass\"\n    // of `Runner`.\n    if (!(this instanceof Runner)) {\n      throw createFatalError(\n        'Runner#uncaught() called with invalid context',\n        this\n      );\n    }\n    if (err instanceof pending) {\n      debug('uncaught(): caught a Pending');\n      return;\n    }\n    // browser does not exit script when throwing in global.onerror()\n    if (this.allowUncaught && !utils.isBrowser()) {\n      debug('uncaught(): bubbling exception due to --allow-uncaught');\n      throw err;\n    }\n\n    if (this.state === constants$1.STATE_STOPPED) {\n      debug('uncaught(): throwing after run has completed!');\n      throw err;\n    }\n\n    if (err) {\n      debug('uncaught(): got truthy exception %O', err);\n    } else {\n      debug('uncaught(): undefined/falsy exception');\n      err = createInvalidExceptionError(\n        'Caught falsy/undefined exception which would otherwise be uncaught. No stack trace found; try a debugger',\n        err\n      );\n    }\n\n    if (!isError(err)) {\n      err = thrown2Error(err);\n      debug('uncaught(): converted \"error\" %o to Error', err);\n    }\n    err.uncaught = true;\n\n    var runnable$1 = this.currentRunnable;\n\n    if (!runnable$1) {\n      runnable$1 = new runnable('Uncaught error outside test suite');\n      debug('uncaught(): no current Runnable; created a phony one');\n      runnable$1.parent = this.suite;\n\n      if (this.state === constants$1.STATE_RUNNING) {\n        debug('uncaught(): failing gracefully');\n        this.fail(runnable$1, err);\n      } else {\n        // Can't recover from this failure\n        debug('uncaught(): test run has not yet started; unrecoverable');\n        this.emit(constants$1.EVENT_RUN_BEGIN);\n        this.fail(runnable$1, err);\n        this.emit(constants$1.EVENT_RUN_END);\n      }\n\n      return;\n    }\n\n    runnable$1.clearTimeout();\n\n    if (runnable$1.isFailed()) {\n      debug('uncaught(): Runnable has already failed');\n      // Ignore error if already failed\n      return;\n    } else if (runnable$1.isPending()) {\n      debug('uncaught(): pending Runnable wound up failing!');\n      // report 'pending test' retrospectively as failed\n      this.fail(runnable$1, err, true);\n      return;\n    }\n\n    // we cannot recover gracefully if a Runnable has already passed\n    // then fails asynchronously\n    if (runnable$1.isPassed()) {\n      debug('uncaught(): Runnable has already passed; bailing gracefully');\n      this.fail(runnable$1, err);\n      this.abort();\n    } else {\n      debug('uncaught(): forcing Runnable to complete with Error');\n      return runnable$1.callback(err);\n    }\n  };\n\n  /**\n   * Run the root suite and invoke `fn(failures)`\n   * on completion.\n   *\n   * @public\n   * @memberof Runner\n   * @param {Function} fn - Callback when finished\n   * @param {{files: string[], options: Options}} [opts] - For subclasses\n   * @returns {Runner} Runner instance.\n   */\n  Runner.prototype.run = function(fn, opts = {}) {\n    var rootSuite = this.suite;\n    var options = opts.options || {};\n\n    debug('run(): got options: %O', options);\n    fn = fn || function() {};\n\n    const end = () => {\n      if (!this.total && this._opts.failZero) this.failures = 1;\n\n      debug('run(): root suite completed; emitting %s', constants$1.EVENT_RUN_END);\n      this.emit(constants$1.EVENT_RUN_END);\n    };\n\n    const begin = () => {\n      debug('run(): emitting %s', constants$1.EVENT_RUN_BEGIN);\n      this.emit(constants$1.EVENT_RUN_BEGIN);\n      debug('run(): emitted %s', constants$1.EVENT_RUN_BEGIN);\n\n      this.runSuite(rootSuite, end);\n    };\n\n    const prepare = () => {\n      debug('run(): starting');\n      // If there is an `only` filter\n      if (rootSuite.hasOnly()) {\n        rootSuite.filterOnly();\n        debug('run(): filtered exclusive Runnables');\n      }\n      this.state = constants$1.STATE_RUNNING;\n      if (this._delay) {\n        this.emit(constants$1.EVENT_DELAY_END);\n        debug('run(): \"delay\" ended');\n      }\n\n      return begin();\n    };\n\n    // references cleanup to avoid memory leaks\n    if (this._opts.cleanReferencesAfterRun) {\n      this.on(constants$1.EVENT_SUITE_END, suite => {\n        suite.cleanReferences();\n      });\n    }\n\n    // callback\n    this.on(constants$1.EVENT_RUN_END, function() {\n      this.state = constants$1.STATE_STOPPED;\n      debug('run(): emitted %s', constants$1.EVENT_RUN_END);\n      fn(this.failures);\n    });\n\n    this._removeEventListener(process$1, 'uncaughtException', this.uncaught);\n    this._removeEventListener(process$1, 'unhandledRejection', this.unhandled);\n    this._addEventListener(process$1, 'uncaughtException', this.uncaught);\n    this._addEventListener(process$1, 'unhandledRejection', this.unhandled);\n\n    if (this._delay) {\n      // for reporters, I guess.\n      // might be nice to debounce some dots while we wait.\n      this.emit(constants$1.EVENT_DELAY_BEGIN, rootSuite);\n      rootSuite.once(EVENT_ROOT_SUITE_RUN, prepare);\n      debug('run(): waiting for green light due to --delay');\n    } else {\n      Runner.immediately(prepare);\n    }\n\n    return this;\n  };\n\n  /**\n   * Toggle partial object linking behavior; used for building object references from\n   * unique ID's. Does nothing in serial mode, because the object references already exist.\n   * Subclasses can implement this (e.g., `ParallelBufferedRunner`)\n   * @abstract\n   * @param {boolean} [value] - If `true`, enable partial object linking, otherwise disable\n   * @returns {Runner}\n   * @chainable\n   * @public\n   * @example\n   * // this reporter needs proper object references when run in parallel mode\n   * class MyReporter() {\n   *   constructor(runner) {\n   *     this.runner.linkPartialObjects(true)\n   *       .on(EVENT_SUITE_BEGIN, suite => {\n             // this Suite may be the same object...\n   *       })\n   *       .on(EVENT_TEST_BEGIN, test => {\n   *         // ...as the `test.parent` property\n   *       });\n   *   }\n   * }\n   */\n  Runner.prototype.linkPartialObjects = function(value) {\n    return this;\n  };\n\n  /*\n   * Like {@link Runner#run}, but does not accept a callback and returns a `Promise` instead of a `Runner`.\n   * This function cannot reject; an `unhandledRejection` event will bubble up to the `process` object instead.\n   * @public\n   * @memberof Runner\n   * @param {Object} [opts] - Options for {@link Runner#run}\n   * @returns {Promise<number>} Failure count\n   */\n  Runner.prototype.runAsync = async function runAsync(opts = {}) {\n    return new Promise(resolve => {\n      this.run(resolve, opts);\n    });\n  };\n\n  /**\n   * Cleanly abort execution.\n   *\n   * @memberof Runner\n   * @public\n   * @return {Runner} Runner instance.\n   */\n  Runner.prototype.abort = function() {\n    debug('abort(): aborting');\n    this._abort = true;\n\n    return this;\n  };\n\n  /**\n   * Returns `true` if Mocha is running in parallel mode.  For reporters.\n   *\n   * Subclasses should return an appropriate value.\n   * @public\n   * @returns {false}\n   */\n  Runner.prototype.isParallelMode = function isParallelMode() {\n    return false;\n  };\n\n  /**\n   * Configures an alternate reporter for worker processes to use. Subclasses\n   * using worker processes should implement this.\n   * @public\n   * @param {string} path - Absolute path to alternate reporter for worker processes to use\n   * @returns {Runner}\n   * @throws When in serial mode\n   * @chainable\n   * @abstract\n   */\n  Runner.prototype.workerReporter = function() {\n    throw createUnsupportedError$1('workerReporter() not supported in serial mode');\n  };\n\n  /**\n   * Filter leaks with the given globals flagged as `ok`.\n   *\n   * @private\n   * @param {Array} ok\n   * @param {Array} globals\n   * @return {Array}\n   */\n  function filterLeaks(ok, globals) {\n    return globals.filter(function(key) {\n      // Firefox and Chrome exposes iframes as index inside the window object\n      if (/^\\d+/.test(key)) {\n        return false;\n      }\n\n      // in firefox\n      // if runner runs in an iframe, this iframe's window.getInterface method\n      // not init at first it is assigned in some seconds\n      if (commonjsGlobal.navigator && /^getInterface/.test(key)) {\n        return false;\n      }\n\n      // an iframe could be approached by window[iframeIndex]\n      // in ie6,7,8 and opera, iframeIndex is enumerable, this could cause leak\n      if (commonjsGlobal.navigator && /^\\d+/.test(key)) {\n        return false;\n      }\n\n      // Opera and IE expose global variables for HTML element IDs (issue #243)\n      if (/^mocha-/.test(key)) {\n        return false;\n      }\n\n      var matched = ok.filter(function(ok) {\n        if (~ok.indexOf('*')) {\n          return key.indexOf(ok.split('*')[0]) === 0;\n        }\n        return key === ok;\n      });\n      return !matched.length && (!commonjsGlobal.navigator || key !== 'onerror');\n    });\n  }\n\n  /**\n   * Check if argument is an instance of Error object or a duck-typed equivalent.\n   *\n   * @private\n   * @param {Object} err - object to check\n   * @param {string} err.message - error message\n   * @returns {boolean}\n   */\n  function isError(err) {\n    return err instanceof Error || (err && typeof err.message === 'string');\n  }\n\n  /**\n   *\n   * Converts thrown non-extensible type into proper Error.\n   *\n   * @private\n   * @param {*} thrown - Non-extensible type thrown by code\n   * @return {Error}\n   */\n  function thrown2Error(err) {\n    return new Error(\n      `the ${utils.canonicalType(err)} ${stringify(\n      err\n    )} was thrown, throw an Error :)`\n    );\n  }\n\n  Runner.constants = constants$1;\n\n  /**\n   * Node.js' `EventEmitter`\n   * @external EventEmitter\n   * @see {@link https://nodejs.org/api/events.html#events_class_eventemitter}\n   */\n\n  var runner = Runner;\n\n  var require$$10 = getCjsExportFromNamespace(_nodeResolve_empty$1);\n\n  var base = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Base\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n\n\n\n\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\n  const isBrowser = utils.isBrowser();\n\n  function getBrowserWindowSize() {\n    if ('innerHeight' in commonjsGlobal) {\n      return [commonjsGlobal.innerHeight, commonjsGlobal.innerWidth];\n    }\n    // In a Web Worker, the DOM Window is not available.\n    return [640, 480];\n  }\n\n  /**\n   * Expose `Base`.\n   */\n\n  exports = module.exports = Base;\n\n  /**\n   * Check if both stdio streams are associated with a tty.\n   */\n\n  var isatty = isBrowser || (process$1.stdout.isTTY && process$1.stderr.isTTY);\n\n  /**\n   * Save log references to avoid tests interfering (see GH-3604).\n   */\n  var consoleLog = console.log;\n\n  /**\n   * Enable coloring by default, except in the browser interface.\n   */\n\n  exports.useColors =\n    !isBrowser &&\n    (require$$10.stdout || process$1.env.MOCHA_COLORS !== undefined);\n\n  /**\n   * Inline diffs instead of +/-\n   */\n\n  exports.inlineDiffs = false;\n\n  /**\n   * Default color map.\n   */\n\n  exports.colors = {\n    pass: 90,\n    fail: 31,\n    'bright pass': 92,\n    'bright fail': 91,\n    'bright yellow': 93,\n    pending: 36,\n    suite: 0,\n    'error title': 0,\n    'error message': 31,\n    'error stack': 90,\n    checkmark: 32,\n    fast: 90,\n    medium: 33,\n    slow: 31,\n    green: 32,\n    light: 90,\n    'diff gutter': 90,\n    'diff added': 32,\n    'diff removed': 31,\n    'diff added inline': '30;42',\n    'diff removed inline': '30;41'\n  };\n\n  /**\n   * Default symbol map.\n   */\n\n  exports.symbols = {\n    ok: browser$1.success,\n    err: browser$1.error,\n    dot: '.',\n    comma: ',',\n    bang: '!'\n  };\n\n  /**\n   * Color `str` with the given `type`,\n   * allowing colors to be disabled,\n   * as well as user-defined color\n   * schemes.\n   *\n   * @private\n   * @param {string} type\n   * @param {string} str\n   * @return {string}\n   */\n  var color = (exports.color = function(type, str) {\n    if (!exports.useColors) {\n      return String(str);\n    }\n    return '\\u001b[' + exports.colors[type] + 'm' + str + '\\u001b[0m';\n  });\n\n  /**\n   * Expose term window size, with some defaults for when stderr is not a tty.\n   */\n\n  exports.window = {\n    width: 75\n  };\n\n  if (isatty) {\n    if (isBrowser) {\n      exports.window.width = getBrowserWindowSize()[1];\n    } else {\n      exports.window.width = process$1.stdout.getWindowSize(1)[0];\n    }\n  }\n\n  /**\n   * Expose some basic cursor interactions that are common among reporters.\n   */\n\n  exports.cursor = {\n    hide: function() {\n      isatty && process$1.stdout.write('\\u001b[?25l');\n    },\n\n    show: function() {\n      isatty && process$1.stdout.write('\\u001b[?25h');\n    },\n\n    deleteLine: function() {\n      isatty && process$1.stdout.write('\\u001b[2K');\n    },\n\n    beginningOfLine: function() {\n      isatty && process$1.stdout.write('\\u001b[0G');\n    },\n\n    CR: function() {\n      if (isatty) {\n        exports.cursor.deleteLine();\n        exports.cursor.beginningOfLine();\n      } else {\n        process$1.stdout.write('\\r');\n      }\n    }\n  };\n\n  var showDiff = (exports.showDiff = function(err) {\n    return (\n      err &&\n      err.showDiff !== false &&\n      sameType(err.actual, err.expected) &&\n      err.expected !== undefined\n    );\n  });\n\n  function stringifyDiffObjs(err) {\n    if (!utils.isString(err.actual) || !utils.isString(err.expected)) {\n      err.actual = utils.stringify(err.actual);\n      err.expected = utils.stringify(err.expected);\n    }\n  }\n\n  /**\n   * Returns a diff between 2 strings with coloured ANSI output.\n   *\n   * @description\n   * The diff will be either inline or unified dependent on the value\n   * of `Base.inlineDiff`.\n   *\n   * @param {string} actual\n   * @param {string} expected\n   * @return {string} Diff\n   */\n  var generateDiff = (exports.generateDiff = function(actual, expected) {\n    try {\n      const diffSize = 2048;\n      if (actual.length > diffSize) {\n        actual = actual.substring(0, diffSize) + ' ... Lines skipped';\n      }\n      if (expected.length > diffSize) {\n        expected = expected.substring(0, diffSize) + ' ... Lines skipped';\n      }\n      return exports.inlineDiffs\n        ? inlineDiff(actual, expected)\n        : unifiedDiff(actual, expected);\n    } catch (err) {\n      var msg =\n        '\\n      ' +\n        color('diff added', '+ expected') +\n        ' ' +\n        color('diff removed', '- actual:  failed to generate Mocha diff') +\n        '\\n';\n      return msg;\n    }\n  });\n\n  /**\n   * Outputs the given `failures` as a list.\n   *\n   * @public\n   * @memberof Mocha.reporters.Base\n   * @variation 1\n   * @param {Object[]} failures - Each is Test instance with corresponding\n   *     Error property\n   */\n  exports.list = function(failures) {\n    var multipleErr, multipleTest;\n    Base.consoleLog();\n    failures.forEach(function(test, i) {\n      // format\n      var fmt =\n        color('error title', '  %s) %s:\\n') +\n        color('error message', '     %s') +\n        color('error stack', '\\n%s\\n');\n\n      // msg\n      var msg;\n      var err;\n      if (test.err && test.err.multiple) {\n        if (multipleTest !== test) {\n          multipleTest = test;\n          multipleErr = [test.err].concat(test.err.multiple);\n        }\n        err = multipleErr.shift();\n      } else {\n        err = test.err;\n      }\n      var message;\n      if (typeof err.inspect === 'function') {\n        message = err.inspect() + '';\n      } else if (err.message && typeof err.message.toString === 'function') {\n        message = err.message + '';\n      } else {\n        message = '';\n      }\n      var stack = err.stack || message;\n      var index = message ? stack.indexOf(message) : -1;\n\n      if (index === -1) {\n        msg = message;\n      } else {\n        index += message.length;\n        msg = stack.slice(0, index);\n        // remove msg from stack\n        stack = stack.slice(index + 1);\n      }\n\n      // uncaught\n      if (err.uncaught) {\n        msg = 'Uncaught ' + msg;\n      }\n      // explicitly show diff\n      if (!exports.hideDiff && showDiff(err)) {\n        stringifyDiffObjs(err);\n        fmt =\n          color('error title', '  %s) %s:\\n%s') + color('error stack', '\\n%s\\n');\n        var match = message.match(/^([^:]+): expected/);\n        msg = '\\n      ' + color('error message', match ? match[1] : msg);\n\n        msg += generateDiff(err.actual, err.expected);\n      }\n\n      // indent stack trace\n      stack = stack.replace(/^/gm, '  ');\n\n      // indented test title\n      var testTitle = '';\n      test.titlePath().forEach(function(str, index) {\n        if (index !== 0) {\n          testTitle += '\\n     ';\n        }\n        for (var i = 0; i < index; i++) {\n          testTitle += '  ';\n        }\n        testTitle += str;\n      });\n\n      Base.consoleLog(fmt, i + 1, testTitle, msg, stack);\n    });\n  };\n\n  /**\n   * Constructs a new `Base` reporter instance.\n   *\n   * @description\n   * All other reporters generally inherit from this reporter.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function Base(runner, options) {\n    var failures = (this.failures = []);\n\n    if (!runner) {\n      throw new TypeError('Missing runner argument');\n    }\n    this.options = options || {};\n    this.runner = runner;\n    this.stats = runner.stats; // assigned so Reporters keep a closer reference\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      if (test.duration > test.slow()) {\n        test.speed = 'slow';\n      } else if (test.duration > test.slow() / 2) {\n        test.speed = 'medium';\n      } else {\n        test.speed = 'fast';\n      }\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test, err) {\n      if (showDiff(err)) {\n        stringifyDiffObjs(err);\n      }\n      // more than one error per test\n      if (test.err && err instanceof Error) {\n        test.err.multiple = (test.err.multiple || []).concat(err);\n      } else {\n        test.err = err;\n      }\n      failures.push(test);\n    });\n  }\n\n  /**\n   * Outputs common epilogue used by many of the bundled reporters.\n   *\n   * @public\n   * @memberof Mocha.reporters\n   */\n  Base.prototype.epilogue = function() {\n    var stats = this.stats;\n    var fmt;\n\n    Base.consoleLog();\n\n    // passes\n    fmt =\n      color('bright pass', ' ') +\n      color('green', ' %d passing') +\n      color('light', ' (%s)');\n\n    Base.consoleLog(fmt, stats.passes || 0, ms$1(stats.duration));\n\n    // pending\n    if (stats.pending) {\n      fmt = color('pending', ' ') + color('pending', ' %d pending');\n\n      Base.consoleLog(fmt, stats.pending);\n    }\n\n    // failures\n    if (stats.failures) {\n      fmt = color('fail', '  %d failing');\n\n      Base.consoleLog(fmt, stats.failures);\n\n      Base.list(this.failures);\n      Base.consoleLog();\n    }\n\n    Base.consoleLog();\n  };\n\n  /**\n   * Pads the given `str` to `len`.\n   *\n   * @private\n   * @param {string} str\n   * @param {string} len\n   * @return {string}\n   */\n  function pad(str, len) {\n    str = String(str);\n    return Array(len - str.length + 1).join(' ') + str;\n  }\n\n  /**\n   * Returns inline diff between 2 strings with coloured ANSI output.\n   *\n   * @private\n   * @param {String} actual\n   * @param {String} expected\n   * @return {string} Diff\n   */\n  function inlineDiff(actual, expected) {\n    var msg = errorDiff(actual, expected);\n\n    // linenos\n    var lines = msg.split('\\n');\n    if (lines.length > 4) {\n      var width = String(lines.length).length;\n      msg = lines\n        .map(function(str, i) {\n          return pad(++i, width) + ' |' + ' ' + str;\n        })\n        .join('\\n');\n    }\n\n    // legend\n    msg =\n      '\\n' +\n      color('diff removed inline', 'actual') +\n      ' ' +\n      color('diff added inline', 'expected') +\n      '\\n\\n' +\n      msg +\n      '\\n';\n\n    // indent\n    msg = msg.replace(/^/gm, '      ');\n    return msg;\n  }\n\n  /**\n   * Returns unified diff between two strings with coloured ANSI output.\n   *\n   * @private\n   * @param {String} actual\n   * @param {String} expected\n   * @return {string} The diff.\n   */\n  function unifiedDiff(actual, expected) {\n    var indent = '      ';\n    function cleanUp(line) {\n      if (line[0] === '+') {\n        return indent + colorLines('diff added', line);\n      }\n      if (line[0] === '-') {\n        return indent + colorLines('diff removed', line);\n      }\n      if (line.match(/@@/)) {\n        return '--';\n      }\n      if (line.match(/\\\\ No newline/)) {\n        return null;\n      }\n      return indent + line;\n    }\n    function notBlank(line) {\n      return typeof line !== 'undefined' && line !== null;\n    }\n    var msg = diff$1.createPatch('string', actual, expected);\n    var lines = msg.split('\\n').splice(5);\n    return (\n      '\\n      ' +\n      colorLines('diff added', '+ expected') +\n      ' ' +\n      colorLines('diff removed', '- actual') +\n      '\\n\\n' +\n      lines\n        .map(cleanUp)\n        .filter(notBlank)\n        .join('\\n')\n    );\n  }\n\n  /**\n   * Returns character diff for `err`.\n   *\n   * @private\n   * @param {String} actual\n   * @param {String} expected\n   * @return {string} the diff\n   */\n  function errorDiff(actual, expected) {\n    return diff$1\n      .diffWordsWithSpace(actual, expected)\n      .map(function(str) {\n        if (str.added) {\n          return colorLines('diff added inline', str.value);\n        }\n        if (str.removed) {\n          return colorLines('diff removed inline', str.value);\n        }\n        return str.value;\n      })\n      .join('');\n  }\n\n  /**\n   * Colors lines for `str`, using the color `name`.\n   *\n   * @private\n   * @param {string} name\n   * @param {string} str\n   * @return {string}\n   */\n  function colorLines(name, str) {\n    return str\n      .split('\\n')\n      .map(function(str) {\n        return color(name, str);\n      })\n      .join('\\n');\n  }\n\n  /**\n   * Object#toString reference.\n   */\n  var objToString = Object.prototype.toString;\n\n  /**\n   * Checks that a / b have the same type.\n   *\n   * @private\n   * @param {Object} a\n   * @param {Object} b\n   * @return {boolean}\n   */\n  function sameType(a, b) {\n    return objToString.call(a) === objToString.call(b);\n  }\n\n  Base.consoleLog = consoleLog;\n\n  Base.abstract = true;\n  });\n\n  var dot = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Dot\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n  var inherits = utils.inherits;\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\n  /**\n   * Expose `Dot`.\n   */\n\n  module.exports = Dot;\n\n  /**\n   * Constructs a new `Dot` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function Dot(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var width = (base.window.width * 0.75) | 0;\n    var n = -1;\n\n    runner.on(EVENT_RUN_BEGIN, function() {\n      process$1.stdout.write('\\n');\n    });\n\n    runner.on(EVENT_TEST_PENDING, function() {\n      if (++n % width === 0) {\n        process$1.stdout.write('\\n  ');\n      }\n      process$1.stdout.write(base.color('pending', base.symbols.comma));\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      if (++n % width === 0) {\n        process$1.stdout.write('\\n  ');\n      }\n      if (test.speed === 'slow') {\n        process$1.stdout.write(base.color('bright yellow', base.symbols.dot));\n      } else {\n        process$1.stdout.write(base.color(test.speed, base.symbols.dot));\n      }\n    });\n\n    runner.on(EVENT_TEST_FAIL, function() {\n      if (++n % width === 0) {\n        process$1.stdout.write('\\n  ');\n      }\n      process$1.stdout.write(base.color('fail', base.symbols.bang));\n    });\n\n    runner.once(EVENT_RUN_END, function() {\n      process$1.stdout.write('\\n');\n      self.epilogue();\n    });\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(Dot, base);\n\n  Dot.description = 'dot matrix representation';\n  });\n\n  var doc = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Doc\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n  var EVENT_SUITE_END = constants.EVENT_SUITE_END;\n\n  /**\n   * Expose `Doc`.\n   */\n\n  module.exports = Doc;\n\n  /**\n   * Constructs a new `Doc` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function Doc(runner, options) {\n    base.call(this, runner, options);\n\n    var indents = 2;\n\n    function indent() {\n      return Array(indents).join('  ');\n    }\n\n    runner.on(EVENT_SUITE_BEGIN, function(suite) {\n      if (suite.root) {\n        return;\n      }\n      ++indents;\n      base.consoleLog('%s<section class=\"suite\">', indent());\n      ++indents;\n      base.consoleLog('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\n      base.consoleLog('%s<dl>', indent());\n    });\n\n    runner.on(EVENT_SUITE_END, function(suite) {\n      if (suite.root) {\n        return;\n      }\n      base.consoleLog('%s</dl>', indent());\n      --indents;\n      base.consoleLog('%s</section>', indent());\n      --indents;\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      base.consoleLog('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\n      base.consoleLog('%s  <dt>%s</dt>', indent(), utils.escape(test.file));\n      var code = utils.escape(utils.clean(test.body));\n      base.consoleLog('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test, err) {\n      base.consoleLog(\n        '%s  <dt class=\"error\">%s</dt>',\n        indent(),\n        utils.escape(test.title)\n      );\n      base.consoleLog(\n        '%s  <dt class=\"error\">%s</dt>',\n        indent(),\n        utils.escape(test.file)\n      );\n      var code = utils.escape(utils.clean(test.body));\n      base.consoleLog(\n        '%s  <dd class=\"error\"><pre><code>%s</code></pre></dd>',\n        indent(),\n        code\n      );\n      base.consoleLog(\n        '%s  <dd class=\"error\">%s</dd>',\n        indent(),\n        utils.escape(err)\n      );\n    });\n  }\n\n  Doc.description = 'HTML documentation';\n  });\n\n  var tap = createCommonjsModule(function (module, exports) {\n  /**\n   * @module TAP\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var EVENT_TEST_END = constants.EVENT_TEST_END;\n  var inherits = utils.inherits;\n  var sprintf = util.format;\n\n  /**\n   * Expose `TAP`.\n   */\n\n  module.exports = TAP;\n\n  /**\n   * Constructs a new `TAP` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function TAP(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var n = 1;\n\n    var tapVersion = '12';\n    if (options && options.reporterOptions) {\n      if (options.reporterOptions.tapVersion) {\n        tapVersion = options.reporterOptions.tapVersion.toString();\n      }\n    }\n\n    this._producer = createProducer(tapVersion);\n\n    runner.once(EVENT_RUN_BEGIN, function() {\n      self._producer.writeVersion();\n    });\n\n    runner.on(EVENT_TEST_END, function() {\n      ++n;\n    });\n\n    runner.on(EVENT_TEST_PENDING, function(test) {\n      self._producer.writePending(n, test);\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      self._producer.writePass(n, test);\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test, err) {\n      self._producer.writeFail(n, test, err);\n    });\n\n    runner.once(EVENT_RUN_END, function() {\n      self._producer.writeEpilogue(runner.stats);\n    });\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(TAP, base);\n\n  /**\n   * Returns a TAP-safe title of `test`.\n   *\n   * @private\n   * @param {Test} test - Test instance.\n   * @return {String} title with any hash character removed\n   */\n  function title(test) {\n    return test.fullTitle().replace(/#/g, '');\n  }\n\n  /**\n   * Writes newline-terminated formatted string to reporter output stream.\n   *\n   * @private\n   * @param {string} format - `printf`-like format string\n   * @param {...*} [varArgs] - Format string arguments\n   */\n  function println(format, varArgs) {\n    var vargs = Array.from(arguments);\n    vargs[0] += '\\n';\n    process$1.stdout.write(sprintf.apply(null, vargs));\n  }\n\n  /**\n   * Returns a `tapVersion`-appropriate TAP producer instance, if possible.\n   *\n   * @private\n   * @param {string} tapVersion - Version of TAP specification to produce.\n   * @returns {TAPProducer} specification-appropriate instance\n   * @throws {Error} if specification version has no associated producer.\n   */\n  function createProducer(tapVersion) {\n    var producers = {\n      '12': new TAP12Producer(),\n      '13': new TAP13Producer()\n    };\n    var producer = producers[tapVersion];\n\n    if (!producer) {\n      throw new Error(\n        'invalid or unsupported TAP version: ' + JSON.stringify(tapVersion)\n      );\n    }\n\n    return producer;\n  }\n\n  /**\n   * @summary\n   * Constructs a new TAPProducer.\n   *\n   * @description\n   * <em>Only</em> to be used as an abstract base class.\n   *\n   * @private\n   * @constructor\n   */\n  function TAPProducer() {}\n\n  /**\n   * Writes the TAP version to reporter output stream.\n   *\n   * @abstract\n   */\n  TAPProducer.prototype.writeVersion = function() {};\n\n  /**\n   * Writes the plan to reporter output stream.\n   *\n   * @abstract\n   * @param {number} ntests - Number of tests that are planned to run.\n   */\n  TAPProducer.prototype.writePlan = function(ntests) {\n    println('%d..%d', 1, ntests);\n  };\n\n  /**\n   * Writes that test passed to reporter output stream.\n   *\n   * @abstract\n   * @param {number} n - Index of test that passed.\n   * @param {Test} test - Instance containing test information.\n   */\n  TAPProducer.prototype.writePass = function(n, test) {\n    println('ok %d %s', n, title(test));\n  };\n\n  /**\n   * Writes that test was skipped to reporter output stream.\n   *\n   * @abstract\n   * @param {number} n - Index of test that was skipped.\n   * @param {Test} test - Instance containing test information.\n   */\n  TAPProducer.prototype.writePending = function(n, test) {\n    println('ok %d %s # SKIP -', n, title(test));\n  };\n\n  /**\n   * Writes that test failed to reporter output stream.\n   *\n   * @abstract\n   * @param {number} n - Index of test that failed.\n   * @param {Test} test - Instance containing test information.\n   * @param {Error} err - Reason the test failed.\n   */\n  TAPProducer.prototype.writeFail = function(n, test, err) {\n    println('not ok %d %s', n, title(test));\n  };\n\n  /**\n   * Writes the summary epilogue to reporter output stream.\n   *\n   * @abstract\n   * @param {Object} stats - Object containing run statistics.\n   */\n  TAPProducer.prototype.writeEpilogue = function(stats) {\n    // :TBD: Why is this not counting pending tests?\n    println('# tests ' + (stats.passes + stats.failures));\n    println('# pass ' + stats.passes);\n    // :TBD: Why are we not showing pending results?\n    println('# fail ' + stats.failures);\n    this.writePlan(stats.passes + stats.failures + stats.pending);\n  };\n\n  /**\n   * @summary\n   * Constructs a new TAP12Producer.\n   *\n   * @description\n   * Produces output conforming to the TAP12 specification.\n   *\n   * @private\n   * @constructor\n   * @extends TAPProducer\n   * @see {@link https://testanything.org/tap-specification.html|Specification}\n   */\n  function TAP12Producer() {\n    /**\n     * Writes that test failed to reporter output stream, with error formatting.\n     * @override\n     */\n    this.writeFail = function(n, test, err) {\n      TAPProducer.prototype.writeFail.call(this, n, test, err);\n      if (err.message) {\n        println(err.message.replace(/^/gm, '  '));\n      }\n      if (err.stack) {\n        println(err.stack.replace(/^/gm, '  '));\n      }\n    };\n  }\n\n  /**\n   * Inherit from `TAPProducer.prototype`.\n   */\n  inherits(TAP12Producer, TAPProducer);\n\n  /**\n   * @summary\n   * Constructs a new TAP13Producer.\n   *\n   * @description\n   * Produces output conforming to the TAP13 specification.\n   *\n   * @private\n   * @constructor\n   * @extends TAPProducer\n   * @see {@link https://testanything.org/tap-version-13-specification.html|Specification}\n   */\n  function TAP13Producer() {\n    /**\n     * Writes the TAP version to reporter output stream.\n     * @override\n     */\n    this.writeVersion = function() {\n      println('TAP version 13');\n    };\n\n    /**\n     * Writes that test failed to reporter output stream, with error formatting.\n     * @override\n     */\n    this.writeFail = function(n, test, err) {\n      TAPProducer.prototype.writeFail.call(this, n, test, err);\n      var emitYamlBlock = err.message != null || err.stack != null;\n      if (emitYamlBlock) {\n        println(indent(1) + '---');\n        if (err.message) {\n          println(indent(2) + 'message: |-');\n          println(err.message.replace(/^/gm, indent(3)));\n        }\n        if (err.stack) {\n          println(indent(2) + 'stack: |-');\n          println(err.stack.replace(/^/gm, indent(3)));\n        }\n        println(indent(1) + '...');\n      }\n    };\n\n    function indent(level) {\n      return Array(level + 1).join('  ');\n    }\n  }\n\n  /**\n   * Inherit from `TAPProducer.prototype`.\n   */\n  inherits(TAP13Producer, TAPProducer);\n\n  TAP.description = 'TAP-compatible output';\n  });\n\n  var fs = {};\n\n  var json = createCommonjsModule(function (module, exports) {\n  /**\n   * @module JSON\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n\n\n  const createUnsupportedError = errors.createUnsupportedError;\n\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_TEST_END = constants.EVENT_TEST_END;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\n  /**\n   * Expose `JSON`.\n   */\n\n  module.exports = JSONReporter;\n\n  /**\n   * Constructs a new `JSON` reporter instance.\n   *\n   * @public\n   * @class JSON\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function JSONReporter(runner, options = {}) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var tests = [];\n    var pending = [];\n    var failures = [];\n    var passes = [];\n    var output;\n\n    if (options.reporterOption && options.reporterOption.output) {\n      if (utils.isBrowser()) {\n        throw createUnsupportedError('file output not supported in browser');\n      }\n      output = options.reporterOption.output;\n    }\n\n    runner.on(EVENT_TEST_END, function(test) {\n      tests.push(test);\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      passes.push(test);\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test) {\n      failures.push(test);\n    });\n\n    runner.on(EVENT_TEST_PENDING, function(test) {\n      pending.push(test);\n    });\n\n    runner.once(EVENT_RUN_END, function() {\n      var obj = {\n        stats: self.stats,\n        tests: tests.map(clean),\n        pending: pending.map(clean),\n        failures: failures.map(clean),\n        passes: passes.map(clean)\n      };\n\n      runner.testResults = obj;\n\n      var json = JSON.stringify(obj, null, 2);\n      if (output) {\n        try {\n          fs.mkdirSync(path.dirname(output), {recursive: true});\n          fs.writeFileSync(output, json);\n        } catch (err) {\n          console.error(\n            `${base.symbols.err} [mocha] writing output to \"${output}\" failed: ${err.message}\\n`\n          );\n          process$1.stdout.write(json);\n        }\n      } else {\n        process$1.stdout.write(json);\n      }\n    });\n  }\n\n  /**\n   * Return a plain-object representation of `test`\n   * free of cyclic properties etc.\n   *\n   * @private\n   * @param {Object} test\n   * @return {Object}\n   */\n  function clean(test) {\n    var err = test.err || {};\n    if (err instanceof Error) {\n      err = errorJSON(err);\n    }\n\n    return {\n      title: test.title,\n      fullTitle: test.fullTitle(),\n      file: test.file,\n      duration: test.duration,\n      currentRetry: test.currentRetry(),\n      speed: test.speed,\n      err: cleanCycles(err)\n    };\n  }\n\n  /**\n   * Replaces any circular references inside `obj` with '[object Object]'\n   *\n   * @private\n   * @param {Object} obj\n   * @return {Object}\n   */\n  function cleanCycles(obj) {\n    var cache = [];\n    return JSON.parse(\n      JSON.stringify(obj, function(key, value) {\n        if (typeof value === 'object' && value !== null) {\n          if (cache.indexOf(value) !== -1) {\n            // Instead of going in a circle, we'll print [object Object]\n            return '' + value;\n          }\n          cache.push(value);\n        }\n\n        return value;\n      })\n    );\n  }\n\n  /**\n   * Transform an Error object into a JSON object.\n   *\n   * @private\n   * @param {Error} err\n   * @return {Object}\n   */\n  function errorJSON(err) {\n    var res = {};\n    Object.getOwnPropertyNames(err).forEach(function(key) {\n      res[key] = err[key];\n    }, err);\n    return res;\n  }\n\n  JSONReporter.description = 'single JSON object';\n  });\n\n  /**\n   @module browser/Progress\n  */\n\n  /**\n   * Expose `Progress`.\n   */\n\n  var progress$1 = Progress;\n\n  /**\n   * Initialize a new `Progress` indicator.\n   */\n  function Progress() {\n    this.percent = 0;\n    this.size(0);\n    this.fontSize(11);\n    this.font('helvetica, arial, sans-serif');\n  }\n\n  /**\n   * Set progress size to `size`.\n   *\n   * @public\n   * @param {number} size\n   * @return {Progress} Progress instance.\n   */\n  Progress.prototype.size = function(size) {\n    this._size = size;\n    return this;\n  };\n\n  /**\n   * Set text to `text`.\n   *\n   * @public\n   * @param {string} text\n   * @return {Progress} Progress instance.\n   */\n  Progress.prototype.text = function(text) {\n    this._text = text;\n    return this;\n  };\n\n  /**\n   * Set font size to `size`.\n   *\n   * @public\n   * @param {number} size\n   * @return {Progress} Progress instance.\n   */\n  Progress.prototype.fontSize = function(size) {\n    this._fontSize = size;\n    return this;\n  };\n\n  /**\n   * Set font to `family`.\n   *\n   * @param {string} family\n   * @return {Progress} Progress instance.\n   */\n  Progress.prototype.font = function(family) {\n    this._font = family;\n    return this;\n  };\n\n  /**\n   * Update percentage to `n`.\n   *\n   * @param {number} n\n   * @return {Progress} Progress instance.\n   */\n  Progress.prototype.update = function(n) {\n    this.percent = n;\n    return this;\n  };\n\n  /**\n   * Draw on `ctx`.\n   *\n   * @param {CanvasRenderingContext2d} ctx\n   * @return {Progress} Progress instance.\n   */\n  Progress.prototype.draw = function(ctx) {\n    try {\n      var percent = Math.min(this.percent, 100);\n      var size = this._size;\n      var half = size / 2;\n      var x = half;\n      var y = half;\n      var rad = half - 1;\n      var fontSize = this._fontSize;\n\n      ctx.font = fontSize + 'px ' + this._font;\n\n      var angle = Math.PI * 2 * (percent / 100);\n      ctx.clearRect(0, 0, size, size);\n\n      // outer circle\n      ctx.strokeStyle = '#9f9f9f';\n      ctx.beginPath();\n      ctx.arc(x, y, rad, 0, angle, false);\n      ctx.stroke();\n\n      // inner circle\n      ctx.strokeStyle = '#eee';\n      ctx.beginPath();\n      ctx.arc(x, y, rad - 1, 0, angle, true);\n      ctx.stroke();\n\n      // text\n      var text = this._text || (percent | 0) + '%';\n      var w = ctx.measureText(text).width;\n\n      ctx.fillText(text, x - w / 2 + 1, y + fontSize / 2 - 1);\n    } catch (ignore) {\n      // don't fail if we can't render progress\n    }\n    return this;\n  };\n\n  var html = createCommonjsModule(function (module, exports) {\n\n  /* eslint-env browser */\n  /**\n   * @module HTML\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n\n\n\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n  var EVENT_SUITE_END = constants.EVENT_SUITE_END;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var escape = utils.escape;\n\n  /**\n   * Save timer references to avoid Sinon interfering (see GH-237).\n   */\n\n  var Date = commonjsGlobal.Date;\n\n  /**\n   * Expose `HTML`.\n   */\n\n  module.exports = HTML;\n\n  /**\n   * Stats template.\n   */\n\n  var statsTemplate =\n    '<ul id=\"mocha-stats\">' +\n    '<li class=\"progress\"><canvas width=\"40\" height=\"40\"></canvas></li>' +\n    '<li class=\"passes\"><a href=\"javascript:void(0);\">passes:</a> <em>0</em></li>' +\n    '<li class=\"failures\"><a href=\"javascript:void(0);\">failures:</a> <em>0</em></li>' +\n    '<li class=\"duration\">duration: <em>0</em>s</li>' +\n    '</ul>';\n\n  var playIcon = '&#x2023;';\n\n  /**\n   * Constructs a new `HTML` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function HTML(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var stats = this.stats;\n    var stat = fragment(statsTemplate);\n    var items = stat.getElementsByTagName('li');\n    var passes = items[1].getElementsByTagName('em')[0];\n    var passesLink = items[1].getElementsByTagName('a')[0];\n    var failures = items[2].getElementsByTagName('em')[0];\n    var failuresLink = items[2].getElementsByTagName('a')[0];\n    var duration = items[3].getElementsByTagName('em')[0];\n    var canvas = stat.getElementsByTagName('canvas')[0];\n    var report = fragment('<ul id=\"mocha-report\"></ul>');\n    var stack = [report];\n    var progress;\n    var ctx;\n    var root = document.getElementById('mocha');\n\n    if (canvas.getContext) {\n      var ratio = window.devicePixelRatio || 1;\n      canvas.style.width = canvas.width;\n      canvas.style.height = canvas.height;\n      canvas.width *= ratio;\n      canvas.height *= ratio;\n      ctx = canvas.getContext('2d');\n      ctx.scale(ratio, ratio);\n      progress = new progress$1();\n    }\n\n    if (!root) {\n      return error('#mocha div missing, add it to your document');\n    }\n\n    // pass toggle\n    on(passesLink, 'click', function(evt) {\n      evt.preventDefault();\n      unhide();\n      var name = /pass/.test(report.className) ? '' : ' pass';\n      report.className = report.className.replace(/fail|pass/g, '') + name;\n      if (report.className.trim()) {\n        hideSuitesWithout('test pass');\n      }\n    });\n\n    // failure toggle\n    on(failuresLink, 'click', function(evt) {\n      evt.preventDefault();\n      unhide();\n      var name = /fail/.test(report.className) ? '' : ' fail';\n      report.className = report.className.replace(/fail|pass/g, '') + name;\n      if (report.className.trim()) {\n        hideSuitesWithout('test fail');\n      }\n    });\n\n    root.appendChild(stat);\n    root.appendChild(report);\n\n    if (progress) {\n      progress.size(40);\n    }\n\n    runner.on(EVENT_SUITE_BEGIN, function(suite) {\n      if (suite.root) {\n        return;\n      }\n\n      // suite\n      var url = self.suiteURL(suite);\n      var el = fragment(\n        '<li class=\"suite\"><h1><a href=\"%s\">%s</a></h1></li>',\n        url,\n        escape(suite.title)\n      );\n\n      // container\n      stack[0].appendChild(el);\n      stack.unshift(document.createElement('ul'));\n      el.appendChild(stack[0]);\n    });\n\n    runner.on(EVENT_SUITE_END, function(suite) {\n      if (suite.root) {\n        updateStats();\n        return;\n      }\n      stack.shift();\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      var url = self.testURL(test);\n      var markup =\n        '<li class=\"test pass %e\"><h2>%e<span class=\"duration\">%ems</span> ' +\n        '<a href=\"%s\" class=\"replay\">' +\n        playIcon +\n        '</a></h2></li>';\n      var el = fragment(markup, test.speed, test.title, test.duration, url);\n      self.addCodeToggle(el, test.body);\n      appendToStack(el);\n      updateStats();\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test) {\n      var el = fragment(\n        '<li class=\"test fail\"><h2>%e <a href=\"%e\" class=\"replay\">' +\n          playIcon +\n          '</a></h2></li>',\n        test.title,\n        self.testURL(test)\n      );\n      var stackString; // Note: Includes leading newline\n      var message = test.err.toString();\n\n      // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we\n      // check for the result of the stringifying.\n      if (message === '[object Error]') {\n        message = test.err.message;\n      }\n\n      if (test.err.stack) {\n        var indexOfMessage = test.err.stack.indexOf(test.err.message);\n        if (indexOfMessage === -1) {\n          stackString = test.err.stack;\n        } else {\n          stackString = test.err.stack.substr(\n            test.err.message.length + indexOfMessage\n          );\n        }\n      } else if (test.err.sourceURL && test.err.line !== undefined) {\n        // Safari doesn't give you a stack. Let's at least provide a source line.\n        stackString = '\\n(' + test.err.sourceURL + ':' + test.err.line + ')';\n      }\n\n      stackString = stackString || '';\n\n      if (test.err.htmlMessage && stackString) {\n        el.appendChild(\n          fragment(\n            '<div class=\"html-error\">%s\\n<pre class=\"error\">%e</pre></div>',\n            test.err.htmlMessage,\n            stackString\n          )\n        );\n      } else if (test.err.htmlMessage) {\n        el.appendChild(\n          fragment('<div class=\"html-error\">%s</div>', test.err.htmlMessage)\n        );\n      } else {\n        el.appendChild(\n          fragment('<pre class=\"error\">%e%e</pre>', message, stackString)\n        );\n      }\n\n      self.addCodeToggle(el, test.body);\n      appendToStack(el);\n      updateStats();\n    });\n\n    runner.on(EVENT_TEST_PENDING, function(test) {\n      var el = fragment(\n        '<li class=\"test pass pending\"><h2>%e</h2></li>',\n        test.title\n      );\n      appendToStack(el);\n      updateStats();\n    });\n\n    function appendToStack(el) {\n      // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.\n      if (stack[0]) {\n        stack[0].appendChild(el);\n      }\n    }\n\n    function updateStats() {\n      // TODO: add to stats\n      var percent = ((stats.tests / runner.total) * 100) | 0;\n      if (progress) {\n        progress.update(percent).draw(ctx);\n      }\n\n      // update stats\n      var ms = new Date() - stats.start;\n      text(passes, stats.passes);\n      text(failures, stats.failures);\n      text(duration, (ms / 1000).toFixed(2));\n    }\n  }\n\n  /**\n   * Makes a URL, preserving querystring (\"search\") parameters.\n   *\n   * @param {string} s\n   * @return {string} A new URL.\n   */\n  function makeUrl(s) {\n    var search = window.location.search;\n\n    // Remove previous grep query parameter if present\n    if (search) {\n      search = search.replace(/[?&]grep=[^&\\s]*/g, '').replace(/^&/, '?');\n    }\n\n    return (\n      window.location.pathname +\n      (search ? search + '&' : '?') +\n      'grep=' +\n      encodeURIComponent(escapeStringRegexp(s))\n    );\n  }\n\n  /**\n   * Provide suite URL.\n   *\n   * @param {Object} [suite]\n   */\n  HTML.prototype.suiteURL = function(suite) {\n    return makeUrl(suite.fullTitle());\n  };\n\n  /**\n   * Provide test URL.\n   *\n   * @param {Object} [test]\n   */\n  HTML.prototype.testURL = function(test) {\n    return makeUrl(test.fullTitle());\n  };\n\n  /**\n   * Adds code toggle functionality for the provided test's list element.\n   *\n   * @param {HTMLLIElement} el\n   * @param {string} contents\n   */\n  HTML.prototype.addCodeToggle = function(el, contents) {\n    var h2 = el.getElementsByTagName('h2')[0];\n\n    on(h2, 'click', function() {\n      pre.style.display = pre.style.display === 'none' ? 'block' : 'none';\n    });\n\n    var pre = fragment('<pre><code>%e</code></pre>', utils.clean(contents));\n    el.appendChild(pre);\n    pre.style.display = 'none';\n  };\n\n  /**\n   * Display error `msg`.\n   *\n   * @param {string} msg\n   */\n  function error(msg) {\n    document.body.appendChild(fragment('<div id=\"mocha-error\">%s</div>', msg));\n  }\n\n  /**\n   * Return a DOM fragment from `html`.\n   *\n   * @param {string} html\n   */\n  function fragment(html) {\n    var args = arguments;\n    var div = document.createElement('div');\n    var i = 1;\n\n    div.innerHTML = html.replace(/%([se])/g, function(_, type) {\n      switch (type) {\n        case 's':\n          return String(args[i++]);\n        case 'e':\n          return escape(args[i++]);\n        // no default\n      }\n    });\n\n    return div.firstChild;\n  }\n\n  /**\n   * Check for suites that do not have elements\n   * with `classname`, and hide them.\n   *\n   * @param {text} classname\n   */\n  function hideSuitesWithout(classname) {\n    var suites = document.getElementsByClassName('suite');\n    for (var i = 0; i < suites.length; i++) {\n      var els = suites[i].getElementsByClassName(classname);\n      if (!els.length) {\n        suites[i].className += ' hidden';\n      }\n    }\n  }\n\n  /**\n   * Unhide .hidden suites.\n   */\n  function unhide() {\n    var els = document.getElementsByClassName('suite hidden');\n    while (els.length > 0) {\n      els[0].className = els[0].className.replace('suite hidden', 'suite');\n    }\n  }\n\n  /**\n   * Set an element's text contents.\n   *\n   * @param {HTMLElement} el\n   * @param {string} contents\n   */\n  function text(el, contents) {\n    if (el.textContent) {\n      el.textContent = contents;\n    } else {\n      el.innerText = contents;\n    }\n  }\n\n  /**\n   * Listen on `event` with callback `fn`.\n   */\n  function on(el, event, fn) {\n    if (el.addEventListener) {\n      el.addEventListener(event, fn, false);\n    } else {\n      el.attachEvent('on' + event, fn);\n    }\n  }\n\n  HTML.browserOnly = true;\n  });\n\n  var list = createCommonjsModule(function (module, exports) {\n  /**\n   * @module List\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n  var inherits = utils.inherits;\n  var constants = runner.constants;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_TEST_BEGIN = constants.EVENT_TEST_BEGIN;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var color = base.color;\n  var cursor = base.cursor;\n\n  /**\n   * Expose `List`.\n   */\n\n  module.exports = List;\n\n  /**\n   * Constructs a new `List` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function List(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var n = 0;\n\n    runner.on(EVENT_RUN_BEGIN, function() {\n      base.consoleLog();\n    });\n\n    runner.on(EVENT_TEST_BEGIN, function(test) {\n      process$1.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));\n    });\n\n    runner.on(EVENT_TEST_PENDING, function(test) {\n      var fmt = color('checkmark', '  -') + color('pending', ' %s');\n      base.consoleLog(fmt, test.fullTitle());\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      var fmt =\n        color('checkmark', '  ' + base.symbols.ok) +\n        color('pass', ' %s: ') +\n        color(test.speed, '%dms');\n      cursor.CR();\n      base.consoleLog(fmt, test.fullTitle(), test.duration);\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test) {\n      cursor.CR();\n      base.consoleLog(color('fail', '  %d) %s'), ++n, test.fullTitle());\n    });\n\n    runner.once(EVENT_RUN_END, self.epilogue.bind(self));\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(List, base);\n\n  List.description = 'like \"spec\" reporter but flat';\n  });\n\n  var min = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Min\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n  var inherits = utils.inherits;\n  var constants = runner.constants;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n\n  /**\n   * Expose `Min`.\n   */\n\n  module.exports = Min;\n\n  /**\n   * Constructs a new `Min` reporter instance.\n   *\n   * @description\n   * This minimal test reporter is best used with '--watch'.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function Min(runner, options) {\n    base.call(this, runner, options);\n\n    runner.on(EVENT_RUN_BEGIN, function() {\n      // clear screen\n      process$1.stdout.write('\\u001b[2J');\n      // set cursor position\n      process$1.stdout.write('\\u001b[1;3H');\n    });\n\n    runner.once(EVENT_RUN_END, this.epilogue.bind(this));\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(Min, base);\n\n  Min.description = 'essentially just a summary';\n  });\n\n  var spec = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Spec\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n  var constants = runner.constants;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n  var EVENT_SUITE_END = constants.EVENT_SUITE_END;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var inherits = utils.inherits;\n  var color = base.color;\n\n  /**\n   * Expose `Spec`.\n   */\n\n  module.exports = Spec;\n\n  /**\n   * Constructs a new `Spec` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function Spec(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var indents = 0;\n    var n = 0;\n\n    function indent() {\n      return Array(indents).join('  ');\n    }\n\n    runner.on(EVENT_RUN_BEGIN, function() {\n      base.consoleLog();\n    });\n\n    runner.on(EVENT_SUITE_BEGIN, function(suite) {\n      ++indents;\n      base.consoleLog(color('suite', '%s%s'), indent(), suite.title);\n    });\n\n    runner.on(EVENT_SUITE_END, function() {\n      --indents;\n      if (indents === 1) {\n        base.consoleLog();\n      }\n    });\n\n    runner.on(EVENT_TEST_PENDING, function(test) {\n      var fmt = indent() + color('pending', '  - %s');\n      base.consoleLog(fmt, test.title);\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      var fmt;\n      if (test.speed === 'fast') {\n        fmt =\n          indent() +\n          color('checkmark', '  ' + base.symbols.ok) +\n          color('pass', ' %s');\n        base.consoleLog(fmt, test.title);\n      } else {\n        fmt =\n          indent() +\n          color('checkmark', '  ' + base.symbols.ok) +\n          color('pass', ' %s') +\n          color(test.speed, ' (%dms)');\n        base.consoleLog(fmt, test.title, test.duration);\n      }\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test) {\n      base.consoleLog(indent() + color('fail', '  %d) %s'), ++n, test.title);\n    });\n\n    runner.once(EVENT_RUN_END, self.epilogue.bind(self));\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(Spec, base);\n\n  Spec.description = 'hierarchical & verbose [default]';\n  });\n\n  var nyan = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Nyan\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n  var constants = runner.constants;\n  var inherits = utils.inherits;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n\n  /**\n   * Expose `Dot`.\n   */\n\n  module.exports = NyanCat;\n\n  /**\n   * Constructs a new `Nyan` reporter instance.\n   *\n   * @public\n   * @class Nyan\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function NyanCat(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var width = (base.window.width * 0.75) | 0;\n    var nyanCatWidth = (this.nyanCatWidth = 11);\n\n    this.colorIndex = 0;\n    this.numberOfLines = 4;\n    this.rainbowColors = self.generateColors();\n    this.scoreboardWidth = 5;\n    this.tick = 0;\n    this.trajectories = [[], [], [], []];\n    this.trajectoryWidthMax = width - nyanCatWidth;\n\n    runner.on(EVENT_RUN_BEGIN, function() {\n      base.cursor.hide();\n      self.draw();\n    });\n\n    runner.on(EVENT_TEST_PENDING, function() {\n      self.draw();\n    });\n\n    runner.on(EVENT_TEST_PASS, function() {\n      self.draw();\n    });\n\n    runner.on(EVENT_TEST_FAIL, function() {\n      self.draw();\n    });\n\n    runner.once(EVENT_RUN_END, function() {\n      base.cursor.show();\n      for (var i = 0; i < self.numberOfLines; i++) {\n        write('\\n');\n      }\n      self.epilogue();\n    });\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(NyanCat, base);\n\n  /**\n   * Draw the nyan cat\n   *\n   * @private\n   */\n\n  NyanCat.prototype.draw = function() {\n    this.appendRainbow();\n    this.drawScoreboard();\n    this.drawRainbow();\n    this.drawNyanCat();\n    this.tick = !this.tick;\n  };\n\n  /**\n   * Draw the \"scoreboard\" showing the number\n   * of passes, failures and pending tests.\n   *\n   * @private\n   */\n\n  NyanCat.prototype.drawScoreboard = function() {\n    var stats = this.stats;\n\n    function draw(type, n) {\n      write(' ');\n      write(base.color(type, n));\n      write('\\n');\n    }\n\n    draw('green', stats.passes);\n    draw('fail', stats.failures);\n    draw('pending', stats.pending);\n    write('\\n');\n\n    this.cursorUp(this.numberOfLines);\n  };\n\n  /**\n   * Append the rainbow.\n   *\n   * @private\n   */\n\n  NyanCat.prototype.appendRainbow = function() {\n    var segment = this.tick ? '_' : '-';\n    var rainbowified = this.rainbowify(segment);\n\n    for (var index = 0; index < this.numberOfLines; index++) {\n      var trajectory = this.trajectories[index];\n      if (trajectory.length >= this.trajectoryWidthMax) {\n        trajectory.shift();\n      }\n      trajectory.push(rainbowified);\n    }\n  };\n\n  /**\n   * Draw the rainbow.\n   *\n   * @private\n   */\n\n  NyanCat.prototype.drawRainbow = function() {\n    var self = this;\n\n    this.trajectories.forEach(function(line) {\n      write('\\u001b[' + self.scoreboardWidth + 'C');\n      write(line.join(''));\n      write('\\n');\n    });\n\n    this.cursorUp(this.numberOfLines);\n  };\n\n  /**\n   * Draw the nyan cat\n   *\n   * @private\n   */\n  NyanCat.prototype.drawNyanCat = function() {\n    var self = this;\n    var startWidth = this.scoreboardWidth + this.trajectories[0].length;\n    var dist = '\\u001b[' + startWidth + 'C';\n    var padding = '';\n\n    write(dist);\n    write('_,------,');\n    write('\\n');\n\n    write(dist);\n    padding = self.tick ? '  ' : '   ';\n    write('_|' + padding + '/\\\\_/\\\\ ');\n    write('\\n');\n\n    write(dist);\n    padding = self.tick ? '_' : '__';\n    var tail = self.tick ? '~' : '^';\n    write(tail + '|' + padding + this.face() + ' ');\n    write('\\n');\n\n    write(dist);\n    padding = self.tick ? ' ' : '  ';\n    write(padding + '\"\"  \"\" ');\n    write('\\n');\n\n    this.cursorUp(this.numberOfLines);\n  };\n\n  /**\n   * Draw nyan cat face.\n   *\n   * @private\n   * @return {string}\n   */\n\n  NyanCat.prototype.face = function() {\n    var stats = this.stats;\n    if (stats.failures) {\n      return '( x .x)';\n    } else if (stats.pending) {\n      return '( o .o)';\n    } else if (stats.passes) {\n      return '( ^ .^)';\n    }\n    return '( - .-)';\n  };\n\n  /**\n   * Move cursor up `n`.\n   *\n   * @private\n   * @param {number} n\n   */\n\n  NyanCat.prototype.cursorUp = function(n) {\n    write('\\u001b[' + n + 'A');\n  };\n\n  /**\n   * Move cursor down `n`.\n   *\n   * @private\n   * @param {number} n\n   */\n\n  NyanCat.prototype.cursorDown = function(n) {\n    write('\\u001b[' + n + 'B');\n  };\n\n  /**\n   * Generate rainbow colors.\n   *\n   * @private\n   * @return {Array}\n   */\n  NyanCat.prototype.generateColors = function() {\n    var colors = [];\n\n    for (var i = 0; i < 6 * 7; i++) {\n      var pi3 = Math.floor(Math.PI / 3);\n      var n = i * (1.0 / 6);\n      var r = Math.floor(3 * Math.sin(n) + 3);\n      var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\n      var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\n      colors.push(36 * r + 6 * g + b + 16);\n    }\n\n    return colors;\n  };\n\n  /**\n   * Apply rainbow to the given `str`.\n   *\n   * @private\n   * @param {string} str\n   * @return {string}\n   */\n  NyanCat.prototype.rainbowify = function(str) {\n    if (!base.useColors) {\n      return str;\n    }\n    var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\n    this.colorIndex += 1;\n    return '\\u001b[38;5;' + color + 'm' + str + '\\u001b[0m';\n  };\n\n  /**\n   * Stdout helper.\n   *\n   * @param {string} string A message to write to stdout.\n   */\n  function write(string) {\n    process$1.stdout.write(string);\n  }\n\n  NyanCat.description = '\"nyan cat\"';\n  });\n\n  var xunit = createCommonjsModule(function (module, exports) {\n  /**\n   * @module XUnit\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n\n\n\n\n  var createUnsupportedError = errors.createUnsupportedError;\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var STATE_FAILED = runnable.constants.STATE_FAILED;\n  var inherits = utils.inherits;\n  var escape = utils.escape;\n\n  /**\n   * Save timer references to avoid Sinon interfering (see GH-237).\n   */\n  var Date = commonjsGlobal.Date;\n\n  /**\n   * Expose `XUnit`.\n   */\n\n  module.exports = XUnit;\n\n  /**\n   * Constructs a new `XUnit` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function XUnit(runner, options) {\n    base.call(this, runner, options);\n\n    var stats = this.stats;\n    var tests = [];\n    var self = this;\n\n    // the name of the test suite, as it will appear in the resulting XML file\n    var suiteName;\n\n    // the default name of the test suite if none is provided\n    var DEFAULT_SUITE_NAME = 'Mocha Tests';\n\n    if (options && options.reporterOptions) {\n      if (options.reporterOptions.output) {\n        {\n          throw createUnsupportedError('file output not supported in browser');\n        }\n      }\n\n      // get the suite name from the reporter options (if provided)\n      suiteName = options.reporterOptions.suiteName;\n    }\n\n    // fall back to the default suite name\n    suiteName = suiteName || DEFAULT_SUITE_NAME;\n\n    runner.on(EVENT_TEST_PENDING, function(test) {\n      tests.push(test);\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      tests.push(test);\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test) {\n      tests.push(test);\n    });\n\n    runner.once(EVENT_RUN_END, function() {\n      self.write(\n        tag(\n          'testsuite',\n          {\n            name: suiteName,\n            tests: stats.tests,\n            failures: 0,\n            errors: stats.failures,\n            skipped: stats.tests - stats.failures - stats.passes,\n            timestamp: new Date().toUTCString(),\n            time: stats.duration / 1000 || 0\n          },\n          false\n        )\n      );\n\n      tests.forEach(function(t) {\n        self.test(t);\n      });\n\n      self.write('</testsuite>');\n    });\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(XUnit, base);\n\n  /**\n   * Override done to close the stream (if it's a file).\n   *\n   * @param failures\n   * @param {Function} fn\n   */\n  XUnit.prototype.done = function(failures, fn) {\n    if (this.fileStream) {\n      this.fileStream.end(function() {\n        fn(failures);\n      });\n    } else {\n      fn(failures);\n    }\n  };\n\n  /**\n   * Write out the given line.\n   *\n   * @param {string} line\n   */\n  XUnit.prototype.write = function(line) {\n    if (this.fileStream) {\n      this.fileStream.write(line + '\\n');\n    } else if (typeof process$1 === 'object' && process$1.stdout) {\n      process$1.stdout.write(line + '\\n');\n    } else {\n      base.consoleLog(line);\n    }\n  };\n\n  /**\n   * Output tag for the given `test.`\n   *\n   * @param {Test} test\n   */\n  XUnit.prototype.test = function(test) {\n    base.useColors = false;\n\n    var attrs = {\n      classname: test.parent.fullTitle(),\n      name: test.title,\n      time: test.duration / 1000 || 0\n    };\n\n    if (test.state === STATE_FAILED) {\n      var err = test.err;\n      var diff =\n        !base.hideDiff && base.showDiff(err)\n          ? '\\n' + base.generateDiff(err.actual, err.expected)\n          : '';\n      this.write(\n        tag(\n          'testcase',\n          attrs,\n          false,\n          tag(\n            'failure',\n            {},\n            false,\n            escape(err.message) + escape(diff) + '\\n' + escape(err.stack)\n          )\n        )\n      );\n    } else if (test.isPending()) {\n      this.write(tag('testcase', attrs, false, tag('skipped', {}, true)));\n    } else {\n      this.write(tag('testcase', attrs, true));\n    }\n  };\n\n  /**\n   * HTML tag helper.\n   *\n   * @param name\n   * @param attrs\n   * @param close\n   * @param content\n   * @return {string}\n   */\n  function tag(name, attrs, close, content) {\n    var end = close ? '/>' : '>';\n    var pairs = [];\n    var tag;\n\n    for (var key in attrs) {\n      if (Object.prototype.hasOwnProperty.call(attrs, key)) {\n        pairs.push(key + '=\"' + escape(attrs[key]) + '\"');\n      }\n    }\n\n    tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\n    if (content) {\n      tag += content + '</' + name + end;\n    }\n    return tag;\n  }\n\n  XUnit.description = 'XUnit-compatible XML output';\n  });\n\n  var markdown = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Markdown\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n\n  var constants = runner.constants;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n  var EVENT_SUITE_END = constants.EVENT_SUITE_END;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n\n  /**\n   * Constants\n   */\n\n  var SUITE_PREFIX = '$';\n\n  /**\n   * Expose `Markdown`.\n   */\n\n  module.exports = Markdown;\n\n  /**\n   * Constructs a new `Markdown` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function Markdown(runner, options) {\n    base.call(this, runner, options);\n\n    var level = 0;\n    var buf = '';\n\n    function title(str) {\n      return Array(level).join('#') + ' ' + str;\n    }\n\n    function mapTOC(suite, obj) {\n      var ret = obj;\n      var key = SUITE_PREFIX + suite.title;\n\n      obj = obj[key] = obj[key] || {suite: suite};\n      suite.suites.forEach(function(suite) {\n        mapTOC(suite, obj);\n      });\n\n      return ret;\n    }\n\n    function stringifyTOC(obj, level) {\n      ++level;\n      var buf = '';\n      var link;\n      for (var key in obj) {\n        if (key === 'suite') {\n          continue;\n        }\n        if (key !== SUITE_PREFIX) {\n          link = ' - [' + key.substring(1) + ']';\n          link += '(#' + utils.slug(obj[key].suite.fullTitle()) + ')\\n';\n          buf += Array(level).join('  ') + link;\n        }\n        buf += stringifyTOC(obj[key], level);\n      }\n      return buf;\n    }\n\n    function generateTOC(suite) {\n      var obj = mapTOC(suite, {});\n      return stringifyTOC(obj, 0);\n    }\n\n    generateTOC(runner.suite);\n\n    runner.on(EVENT_SUITE_BEGIN, function(suite) {\n      ++level;\n      var slug = utils.slug(suite.fullTitle());\n      buf += '<a name=\"' + slug + '\"></a>' + '\\n';\n      buf += title(suite.title) + '\\n';\n    });\n\n    runner.on(EVENT_SUITE_END, function() {\n      --level;\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      var code = utils.clean(test.body);\n      buf += test.title + '.\\n';\n      buf += '\\n```js\\n';\n      buf += code + '\\n';\n      buf += '```\\n\\n';\n    });\n\n    runner.once(EVENT_RUN_END, function() {\n      process$1.stdout.write('# TOC\\n');\n      process$1.stdout.write(generateTOC(runner.suite));\n      process$1.stdout.write(buf);\n    });\n  }\n\n  Markdown.description = 'GitHub Flavored Markdown';\n  });\n\n  var progress = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Progress\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n  var constants = runner.constants;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_TEST_END = constants.EVENT_TEST_END;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var inherits = utils.inherits;\n  var color = base.color;\n  var cursor = base.cursor;\n\n  /**\n   * Expose `Progress`.\n   */\n\n  module.exports = Progress;\n\n  /**\n   * General progress bar color.\n   */\n\n  base.colors.progress = 90;\n\n  /**\n   * Constructs a new `Progress` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function Progress(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var width = (base.window.width * 0.5) | 0;\n    var total = runner.total;\n    var complete = 0;\n    var lastN = -1;\n\n    // default chars\n    options = options || {};\n    var reporterOptions = options.reporterOptions || {};\n\n    options.open = reporterOptions.open || '[';\n    options.complete = reporterOptions.complete || '▬';\n    options.incomplete = reporterOptions.incomplete || base.symbols.dot;\n    options.close = reporterOptions.close || ']';\n    options.verbose = reporterOptions.verbose || false;\n\n    // tests started\n    runner.on(EVENT_RUN_BEGIN, function() {\n      process$1.stdout.write('\\n');\n      cursor.hide();\n    });\n\n    // tests complete\n    runner.on(EVENT_TEST_END, function() {\n      complete++;\n\n      var percent = complete / total;\n      var n = (width * percent) | 0;\n      var i = width - n;\n\n      if (n === lastN && !options.verbose) {\n        // Don't re-render the line if it hasn't changed\n        return;\n      }\n      lastN = n;\n\n      cursor.CR();\n      process$1.stdout.write('\\u001b[J');\n      process$1.stdout.write(color('progress', '  ' + options.open));\n      process$1.stdout.write(Array(n).join(options.complete));\n      process$1.stdout.write(Array(i).join(options.incomplete));\n      process$1.stdout.write(color('progress', options.close));\n      if (options.verbose) {\n        process$1.stdout.write(color('progress', ' ' + complete + ' of ' + total));\n      }\n    });\n\n    // tests are complete, output some stats\n    // and the failures if any\n    runner.once(EVENT_RUN_END, function() {\n      cursor.show();\n      process$1.stdout.write('\\n');\n      self.epilogue();\n    });\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(Progress, base);\n\n  Progress.description = 'a progress bar';\n  });\n\n  var landing = createCommonjsModule(function (module, exports) {\n  /**\n   * @module Landing\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n  var inherits = utils.inherits;\n  var constants = runner.constants;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_TEST_END = constants.EVENT_TEST_END;\n  var STATE_FAILED = runnable.constants.STATE_FAILED;\n\n  var cursor = base.cursor;\n  var color = base.color;\n\n  /**\n   * Expose `Landing`.\n   */\n\n  module.exports = Landing;\n\n  /**\n   * Airplane color.\n   */\n\n  base.colors.plane = 0;\n\n  /**\n   * Airplane crash color.\n   */\n\n  base.colors['plane crash'] = 31;\n\n  /**\n   * Runway color.\n   */\n\n  base.colors.runway = 90;\n\n  /**\n   * Constructs a new `Landing` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function Landing(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var width = (base.window.width * 0.75) | 0;\n    var stream = process$1.stdout;\n\n    var plane = color('plane', '✈');\n    var crashed = -1;\n    var n = 0;\n    var total = 0;\n\n    function runway() {\n      var buf = Array(width).join('-');\n      return '  ' + color('runway', buf);\n    }\n\n    runner.on(EVENT_RUN_BEGIN, function() {\n      stream.write('\\n\\n\\n  ');\n      cursor.hide();\n    });\n\n    runner.on(EVENT_TEST_END, function(test) {\n      // check if the plane crashed\n      var col = crashed === -1 ? ((width * ++n) / ++total) | 0 : crashed;\n      // show the crash\n      if (test.state === STATE_FAILED) {\n        plane = color('plane crash', '✈');\n        crashed = col;\n      }\n\n      // render landing strip\n      stream.write('\\u001b[' + (width + 1) + 'D\\u001b[2A');\n      stream.write(runway());\n      stream.write('\\n  ');\n      stream.write(color('runway', Array(col).join('⋅')));\n      stream.write(plane);\n      stream.write(color('runway', Array(width - col).join('⋅') + '\\n'));\n      stream.write(runway());\n      stream.write('\\u001b[0m');\n    });\n\n    runner.once(EVENT_RUN_END, function() {\n      cursor.show();\n      process$1.stdout.write('\\n');\n      self.epilogue();\n    });\n\n    // if cursor is hidden when we ctrl-C, then it will remain hidden unless...\n    process$1.once('SIGINT', function() {\n      cursor.show();\n      nextTick$1(function() {\n        process$1.kill(process$1.pid, 'SIGINT');\n      });\n    });\n  }\n\n  /**\n   * Inherit from `Base.prototype`.\n   */\n  inherits(Landing, base);\n\n  Landing.description = 'Unicode landing strip';\n  });\n\n  var jsonStream = createCommonjsModule(function (module, exports) {\n  /**\n   * @module JSONStream\n   */\n  /**\n   * Module dependencies.\n   */\n\n\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n\n  /**\n   * Expose `JSONStream`.\n   */\n\n  module.exports = JSONStream;\n\n  /**\n   * Constructs a new `JSONStream` reporter instance.\n   *\n   * @public\n   * @class\n   * @memberof Mocha.reporters\n   * @extends Mocha.reporters.Base\n   * @param {Runner} runner - Instance triggers reporter actions.\n   * @param {Object} [options] - runner options\n   */\n  function JSONStream(runner, options) {\n    base.call(this, runner, options);\n\n    var self = this;\n    var total = runner.total;\n\n    runner.once(EVENT_RUN_BEGIN, function() {\n      writeEvent(['start', {total: total}]);\n    });\n\n    runner.on(EVENT_TEST_PASS, function(test) {\n      writeEvent(['pass', clean(test)]);\n    });\n\n    runner.on(EVENT_TEST_FAIL, function(test, err) {\n      test = clean(test);\n      test.err = err.message;\n      test.stack = err.stack || null;\n      writeEvent(['fail', test]);\n    });\n\n    runner.once(EVENT_RUN_END, function() {\n      writeEvent(['end', self.stats]);\n    });\n  }\n\n  /**\n   * Mocha event to be written to the output stream.\n   * @typedef {Array} JSONStream~MochaEvent\n   */\n\n  /**\n   * Writes Mocha event to reporter output stream.\n   *\n   * @private\n   * @param {JSONStream~MochaEvent} event - Mocha event to be output.\n   */\n  function writeEvent(event) {\n    process$1.stdout.write(JSON.stringify(event) + '\\n');\n  }\n\n  /**\n   * Returns an object literal representation of `test`\n   * free of cyclic properties, etc.\n   *\n   * @private\n   * @param {Test} test - Instance used as data source.\n   * @return {Object} object containing pared-down test instance data\n   */\n  function clean(test) {\n    return {\n      title: test.title,\n      fullTitle: test.fullTitle(),\n      file: test.file,\n      duration: test.duration,\n      currentRetry: test.currentRetry(),\n      speed: test.speed\n    };\n  }\n\n  JSONStream.description = 'newline delimited JSON events';\n  });\n\n  var reporters = createCommonjsModule(function (module, exports) {\n\n  // Alias exports to a their normalized format Mocha#reporter to prevent a need\n  // for dynamic (try/catch) requires, which Browserify doesn't handle.\n  exports.Base = exports.base = base;\n  exports.Dot = exports.dot = dot;\n  exports.Doc = exports.doc = doc;\n  exports.TAP = exports.tap = tap;\n  exports.JSON = exports.json = json;\n  exports.HTML = exports.html = html;\n  exports.List = exports.list = list;\n  exports.Min = exports.min = min;\n  exports.Spec = exports.spec = spec;\n  exports.Nyan = exports.nyan = nyan;\n  exports.XUnit = exports.xunit = xunit;\n  exports.Markdown = exports.markdown = markdown;\n  exports.Progress = exports.progress = progress;\n  exports.Landing = exports.landing = landing;\n  exports.JSONStream = exports['json-stream'] = jsonStream;\n  });\n\n  var name = \"mocha\";\n  var version = \"9.1.3\";\n  var homepage = \"https://mochajs.org/\";\n  var notifyLogo = \"https://ibin.co/4QuRuGjXvl36.png\";\n  var _package = {\n  \tname: name,\n  \tversion: version,\n  \thomepage: homepage,\n  \tnotifyLogo: notifyLogo\n  };\n\n  var _package$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    name: name,\n    version: version,\n    homepage: homepage,\n    notifyLogo: notifyLogo,\n    'default': _package\n  });\n\n  var require$$9 = getCjsExportFromNamespace(_package$1);\n\n  /**\n   * Web Notifications module.\n   * @module Growl\n   */\n\n  /**\n   * Save timer references to avoid Sinon interfering (see GH-237).\n   */\n  var Date$3 = commonjsGlobal.Date;\n  var setTimeout$2 = commonjsGlobal.setTimeout;\n  var EVENT_RUN_END$1 = runner.constants.EVENT_RUN_END;\n  var isBrowser = utils.isBrowser;\n\n  /**\n   * Checks if browser notification support exists.\n   *\n   * @public\n   * @see {@link https://caniuse.com/#feat=notifications|Browser support (notifications)}\n   * @see {@link https://caniuse.com/#feat=promises|Browser support (promises)}\n   * @see {@link Mocha#growl}\n   * @see {@link Mocha#isGrowlCapable}\n   * @return {boolean} whether browser notification support exists\n   */\n  var isCapable = function() {\n    var hasNotificationSupport = 'Notification' in window;\n    var hasPromiseSupport = typeof Promise === 'function';\n    return isBrowser() && hasNotificationSupport && hasPromiseSupport;\n  };\n\n  /**\n   * Implements browser notifications as a pseudo-reporter.\n   *\n   * @public\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/notification|Notification API}\n   * @see {@link https://developers.google.com/web/fundamentals/push-notifications/display-a-notification|Displaying a Notification}\n   * @see {@link Growl#isPermitted}\n   * @see {@link Mocha#_growl}\n   * @param {Runner} runner - Runner instance.\n   */\n  var notify = function(runner) {\n    var promise = isPermitted();\n\n    /**\n     * Attempt notification.\n     */\n    var sendNotification = function() {\n      // If user hasn't responded yet... \"No notification for you!\" (Seinfeld)\n      Promise.race([promise, Promise.resolve(undefined)])\n        .then(canNotify)\n        .then(function() {\n          display(runner);\n        })\n        .catch(notPermitted);\n    };\n\n    runner.once(EVENT_RUN_END$1, sendNotification);\n  };\n\n  /**\n   * Checks if browser notification is permitted by user.\n   *\n   * @private\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Notification/permission|Notification.permission}\n   * @see {@link Mocha#growl}\n   * @see {@link Mocha#isGrowlPermitted}\n   * @returns {Promise<boolean>} promise determining if browser notification\n   *     permissible when fulfilled.\n   */\n  function isPermitted() {\n    var permitted = {\n      granted: function allow() {\n        return Promise.resolve(true);\n      },\n      denied: function deny() {\n        return Promise.resolve(false);\n      },\n      default: function ask() {\n        return Notification.requestPermission().then(function(permission) {\n          return permission === 'granted';\n        });\n      }\n    };\n\n    return permitted[Notification.permission]();\n  }\n\n  /**\n   * @summary\n   * Determines if notification should proceed.\n   *\n   * @description\n   * Notification shall <strong>not</strong> proceed unless `value` is true.\n   *\n   * `value` will equal one of:\n   * <ul>\n   *   <li><code>true</code> (from `isPermitted`)</li>\n   *   <li><code>false</code> (from `isPermitted`)</li>\n   *   <li><code>undefined</code> (from `Promise.race`)</li>\n   * </ul>\n   *\n   * @private\n   * @param {boolean|undefined} value - Determines if notification permissible.\n   * @returns {Promise<undefined>} Notification can proceed\n   */\n  function canNotify(value) {\n    if (!value) {\n      var why = value === false ? 'blocked' : 'unacknowledged';\n      var reason = 'not permitted by user (' + why + ')';\n      return Promise.reject(new Error(reason));\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Displays the notification.\n   *\n   * @private\n   * @param {Runner} runner - Runner instance.\n   */\n  function display(runner) {\n    var stats = runner.stats;\n    var symbol = {\n      cross: '\\u274C',\n      tick: '\\u2705'\n    };\n    var logo = require$$9.notifyLogo;\n    var _message;\n    var message;\n    var title;\n\n    if (stats.failures) {\n      _message = stats.failures + ' of ' + stats.tests + ' tests failed';\n      message = symbol.cross + ' ' + _message;\n      title = 'Failed';\n    } else {\n      _message = stats.passes + ' tests passed in ' + stats.duration + 'ms';\n      message = symbol.tick + ' ' + _message;\n      title = 'Passed';\n    }\n\n    // Send notification\n    var options = {\n      badge: logo,\n      body: message,\n      dir: 'ltr',\n      icon: logo,\n      lang: 'en-US',\n      name: 'mocha',\n      requireInteraction: false,\n      timestamp: Date$3.now()\n    };\n    var notification = new Notification(title, options);\n\n    // Autoclose after brief delay (makes various browsers act same)\n    var FORCE_DURATION = 4000;\n    setTimeout$2(notification.close.bind(notification), FORCE_DURATION);\n  }\n\n  /**\n   * As notifications are tangential to our purpose, just log the error.\n   *\n   * @private\n   * @param {Error} err - Why notification didn't happen.\n   */\n  function notPermitted(err) {\n    console.error('notification error:', err.message);\n  }\n\n  var growl = {\n  \tisCapable: isCapable,\n  \tnotify: notify\n  };\n\n  var diff = true;\n  var extension = [\n  \t\"js\",\n  \t\"cjs\",\n  \t\"mjs\"\n  ];\n  var reporter = \"spec\";\n  var slow = 75;\n  var timeout = 2000;\n  var ui = \"bdd\";\n  var mocharc$1 = {\n  \tdiff: diff,\n  \textension: extension,\n  \t\"package\": \"./package.json\",\n  \treporter: reporter,\n  \tslow: slow,\n  \ttimeout: timeout,\n  \tui: ui,\n  \t\"watch-ignore\": [\n  \t\"node_modules\",\n  \t\".git\"\n  ]\n  };\n\n  var mocharc$2 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    diff: diff,\n    extension: extension,\n    reporter: reporter,\n    slow: slow,\n    timeout: timeout,\n    ui: ui,\n    'default': mocharc$1\n  });\n\n  /**\n   * Provides a factory function for a {@link StatsCollector} object.\n   * @module\n   */\n\n  var constants = runner.constants;\n  var EVENT_TEST_PASS = constants.EVENT_TEST_PASS;\n  var EVENT_TEST_FAIL = constants.EVENT_TEST_FAIL;\n  var EVENT_SUITE_BEGIN = constants.EVENT_SUITE_BEGIN;\n  var EVENT_RUN_BEGIN = constants.EVENT_RUN_BEGIN;\n  var EVENT_TEST_PENDING = constants.EVENT_TEST_PENDING;\n  var EVENT_RUN_END = constants.EVENT_RUN_END;\n  var EVENT_TEST_END = constants.EVENT_TEST_END;\n\n  /**\n   * Test statistics collector.\n   *\n   * @public\n   * @typedef {Object} StatsCollector\n   * @property {number} suites - integer count of suites run.\n   * @property {number} tests - integer count of tests run.\n   * @property {number} passes - integer count of passing tests.\n   * @property {number} pending - integer count of pending tests.\n   * @property {number} failures - integer count of failed tests.\n   * @property {Date} start - time when testing began.\n   * @property {Date} end - time when testing concluded.\n   * @property {number} duration - number of msecs that testing took.\n   */\n\n  var Date$2 = commonjsGlobal.Date;\n\n  /**\n   * Provides stats such as test duration, number of tests passed / failed etc., by listening for events emitted by `runner`.\n   *\n   * @private\n   * @param {Runner} runner - Runner instance\n   * @throws {TypeError} If falsy `runner`\n   */\n  function createStatsCollector(runner) {\n    /**\n     * @type StatsCollector\n     */\n    var stats = {\n      suites: 0,\n      tests: 0,\n      passes: 0,\n      pending: 0,\n      failures: 0\n    };\n\n    if (!runner) {\n      throw new TypeError('Missing runner argument');\n    }\n\n    runner.stats = stats;\n\n    runner.once(EVENT_RUN_BEGIN, function() {\n      stats.start = new Date$2();\n    });\n    runner.on(EVENT_SUITE_BEGIN, function(suite) {\n      suite.root || stats.suites++;\n    });\n    runner.on(EVENT_TEST_PASS, function() {\n      stats.passes++;\n    });\n    runner.on(EVENT_TEST_FAIL, function() {\n      stats.failures++;\n    });\n    runner.on(EVENT_TEST_PENDING, function() {\n      stats.pending++;\n    });\n    runner.on(EVENT_TEST_END, function() {\n      stats.tests++;\n    });\n    runner.once(EVENT_RUN_END, function() {\n      stats.end = new Date$2();\n      stats.duration = stats.end - stats.start;\n    });\n  }\n\n  var statsCollector = createStatsCollector;\n\n  var createInvalidArgumentTypeError = errors.createInvalidArgumentTypeError;\n  var isString = utils.isString;\n\n  const {MOCHA_ID_PROP_NAME} = utils.constants;\n\n  var test = Test;\n\n  /**\n   * Initialize a new `Test` with the given `title` and callback `fn`.\n   *\n   * @public\n   * @class\n   * @extends Runnable\n   * @param {String} title - Test title (required)\n   * @param {Function} [fn] - Test callback.  If omitted, the Test is considered \"pending\"\n   */\n  function Test(title, fn) {\n    if (!isString(title)) {\n      throw createInvalidArgumentTypeError(\n        'Test argument \"title\" should be a string. Received type \"' +\n          typeof title +\n          '\"',\n        'title',\n        'string'\n      );\n    }\n    this.type = 'test';\n    runnable.call(this, title, fn);\n    this.reset();\n  }\n\n  /**\n   * Inherit from `Runnable.prototype`.\n   */\n  utils.inherits(Test, runnable);\n\n  /**\n   * Resets the state initially or for a next run.\n   */\n  Test.prototype.reset = function() {\n    runnable.prototype.reset.call(this);\n    this.pending = !this.fn;\n    delete this.state;\n  };\n\n  /**\n   * Set or get retried test\n   *\n   * @private\n   */\n  Test.prototype.retriedTest = function(n) {\n    if (!arguments.length) {\n      return this._retriedTest;\n    }\n    this._retriedTest = n;\n  };\n\n  /**\n   * Add test to the list of tests marked `only`.\n   *\n   * @private\n   */\n  Test.prototype.markOnly = function() {\n    this.parent.appendOnlyTest(this);\n  };\n\n  Test.prototype.clone = function() {\n    var test = new Test(this.title, this.fn);\n    test.timeout(this.timeout());\n    test.slow(this.slow());\n    test.retries(this.retries());\n    test.currentRetry(this.currentRetry());\n    test.retriedTest(this.retriedTest() || this);\n    test.globals(this.globals());\n    test.parent = this.parent;\n    test.file = this.file;\n    test.ctx = this.ctx;\n    return test;\n  };\n\n  /**\n   * Returns an minimal object suitable for transmission over IPC.\n   * Functions are represented by keys beginning with `$$`.\n   * @private\n   * @returns {Object}\n   */\n  Test.prototype.serialize = function serialize() {\n    return {\n      $$currentRetry: this._currentRetry,\n      $$fullTitle: this.fullTitle(),\n      $$isPending: Boolean(this.pending),\n      $$retriedTest: this._retriedTest || null,\n      $$slow: this._slow,\n      $$titlePath: this.titlePath(),\n      body: this.body,\n      duration: this.duration,\n      err: this.err,\n      parent: {\n        $$fullTitle: this.parent.fullTitle(),\n        [MOCHA_ID_PROP_NAME]: this.parent.id\n      },\n      speed: this.speed,\n      state: this.state,\n      title: this.title,\n      type: this.type,\n      file: this.file,\n      [MOCHA_ID_PROP_NAME]: this.id\n    };\n  };\n\n  /**\n   @module interfaces/common\n  */\n\n\n\n  var createMissingArgumentError = errors.createMissingArgumentError;\n  var createUnsupportedError = errors.createUnsupportedError;\n  var createForbiddenExclusivityError = errors.createForbiddenExclusivityError;\n\n  /**\n   * Functions common to more than one interface.\n   *\n   * @private\n   * @param {Suite[]} suites\n   * @param {Context} context\n   * @param {Mocha} mocha\n   * @return {Object} An object containing common functions.\n   */\n  var common = function(suites, context, mocha) {\n    /**\n     * Check if the suite should be tested.\n     *\n     * @private\n     * @param {Suite} suite - suite to check\n     * @returns {boolean}\n     */\n    function shouldBeTested(suite) {\n      return (\n        !mocha.options.grep ||\n        (mocha.options.grep &&\n          mocha.options.grep.test(suite.fullTitle()) &&\n          !mocha.options.invert)\n      );\n    }\n\n    return {\n      /**\n       * This is only present if flag --delay is passed into Mocha. It triggers\n       * root suite execution.\n       *\n       * @param {Suite} suite The root suite.\n       * @return {Function} A function which runs the root suite\n       */\n      runWithSuite: function runWithSuite(suite) {\n        return function run() {\n          suite.run();\n        };\n      },\n\n      /**\n       * Execute before running tests.\n       *\n       * @param {string} name\n       * @param {Function} fn\n       */\n      before: function(name, fn) {\n        suites[0].beforeAll(name, fn);\n      },\n\n      /**\n       * Execute after running tests.\n       *\n       * @param {string} name\n       * @param {Function} fn\n       */\n      after: function(name, fn) {\n        suites[0].afterAll(name, fn);\n      },\n\n      /**\n       * Execute before each test case.\n       *\n       * @param {string} name\n       * @param {Function} fn\n       */\n      beforeEach: function(name, fn) {\n        suites[0].beforeEach(name, fn);\n      },\n\n      /**\n       * Execute after each test case.\n       *\n       * @param {string} name\n       * @param {Function} fn\n       */\n      afterEach: function(name, fn) {\n        suites[0].afterEach(name, fn);\n      },\n\n      suite: {\n        /**\n         * Create an exclusive Suite; convenience function\n         * See docstring for create() below.\n         *\n         * @param {Object} opts\n         * @returns {Suite}\n         */\n        only: function only(opts) {\n          if (mocha.options.forbidOnly) {\n            throw createForbiddenExclusivityError(mocha);\n          }\n          opts.isOnly = true;\n          return this.create(opts);\n        },\n\n        /**\n         * Create a Suite, but skip it; convenience function\n         * See docstring for create() below.\n         *\n         * @param {Object} opts\n         * @returns {Suite}\n         */\n        skip: function skip(opts) {\n          opts.pending = true;\n          return this.create(opts);\n        },\n\n        /**\n         * Creates a suite.\n         *\n         * @param {Object} opts Options\n         * @param {string} opts.title Title of Suite\n         * @param {Function} [opts.fn] Suite Function (not always applicable)\n         * @param {boolean} [opts.pending] Is Suite pending?\n         * @param {string} [opts.file] Filepath where this Suite resides\n         * @param {boolean} [opts.isOnly] Is Suite exclusive?\n         * @returns {Suite}\n         */\n        create: function create(opts) {\n          var suite$1 = suite.create(suites[0], opts.title);\n          suite$1.pending = Boolean(opts.pending);\n          suite$1.file = opts.file;\n          suites.unshift(suite$1);\n          if (opts.isOnly) {\n            suite$1.markOnly();\n          }\n          if (\n            suite$1.pending &&\n            mocha.options.forbidPending &&\n            shouldBeTested(suite$1)\n          ) {\n            throw createUnsupportedError('Pending test forbidden');\n          }\n          if (typeof opts.fn === 'function') {\n            opts.fn.call(suite$1);\n            suites.shift();\n          } else if (typeof opts.fn === 'undefined' && !suite$1.pending) {\n            throw createMissingArgumentError(\n              'Suite \"' +\n                suite$1.fullTitle() +\n                '\" was defined but no callback was supplied. ' +\n                'Supply a callback or explicitly skip the suite.',\n              'callback',\n              'function'\n            );\n          } else if (!opts.fn && suite$1.pending) {\n            suites.shift();\n          }\n\n          return suite$1;\n        }\n      },\n\n      test: {\n        /**\n         * Exclusive test-case.\n         *\n         * @param {Object} mocha\n         * @param {Function} test\n         * @returns {*}\n         */\n        only: function(mocha, test) {\n          if (mocha.options.forbidOnly) {\n            throw createForbiddenExclusivityError(mocha);\n          }\n          test.markOnly();\n          return test;\n        },\n\n        /**\n         * Pending test case.\n         *\n         * @param {string} title\n         */\n        skip: function(title) {\n          context.test(title);\n        }\n      }\n    };\n  };\n\n  var EVENT_FILE_PRE_REQUIRE$2 = suite.constants\n    .EVENT_FILE_PRE_REQUIRE;\n\n  /**\n   * BDD-style interface:\n   *\n   *      describe('Array', function() {\n   *        describe('#indexOf()', function() {\n   *          it('should return -1 when not present', function() {\n   *            // ...\n   *          });\n   *\n   *          it('should return the index when present', function() {\n   *            // ...\n   *          });\n   *        });\n   *      });\n   *\n   * @param {Suite} suite Root suite.\n   */\n  var bdd$1 = function bddInterface(suite) {\n    var suites = [suite];\n\n    suite.on(EVENT_FILE_PRE_REQUIRE$2, function(context, file, mocha) {\n      var common$1 = common(suites, context, mocha);\n\n      context.before = common$1.before;\n      context.after = common$1.after;\n      context.beforeEach = common$1.beforeEach;\n      context.afterEach = common$1.afterEach;\n      context.run = mocha.options.delay && common$1.runWithSuite(suite);\n      /**\n       * Describe a \"suite\" with the given `title`\n       * and callback `fn` containing nested suites\n       * and/or tests.\n       */\n\n      context.describe = context.context = function(title, fn) {\n        return common$1.suite.create({\n          title: title,\n          file: file,\n          fn: fn\n        });\n      };\n\n      /**\n       * Pending describe.\n       */\n\n      context.xdescribe = context.xcontext = context.describe.skip = function(\n        title,\n        fn\n      ) {\n        return common$1.suite.skip({\n          title: title,\n          file: file,\n          fn: fn\n        });\n      };\n\n      /**\n       * Exclusive suite.\n       */\n\n      context.describe.only = function(title, fn) {\n        return common$1.suite.only({\n          title: title,\n          file: file,\n          fn: fn\n        });\n      };\n\n      /**\n       * Describe a specification or test-case\n       * with the given `title` and callback `fn`\n       * acting as a thunk.\n       */\n\n      context.it = context.specify = function(title, fn) {\n        var suite = suites[0];\n        if (suite.isPending()) {\n          fn = null;\n        }\n        var test$1 = new test(title, fn);\n        test$1.file = file;\n        suite.addTest(test$1);\n        return test$1;\n      };\n\n      /**\n       * Exclusive test-case.\n       */\n\n      context.it.only = function(title, fn) {\n        return common$1.test.only(mocha, context.it(title, fn));\n      };\n\n      /**\n       * Pending test case.\n       */\n\n      context.xit = context.xspecify = context.it.skip = function(title) {\n        return context.it(title);\n      };\n    });\n  };\n\n  var description$3 = 'BDD or RSpec style [default]';\n  bdd$1.description = description$3;\n\n  var EVENT_FILE_PRE_REQUIRE$1 = suite.constants\n    .EVENT_FILE_PRE_REQUIRE;\n\n  /**\n   * TDD-style interface:\n   *\n   *      suite('Array', function() {\n   *        suite('#indexOf()', function() {\n   *          suiteSetup(function() {\n   *\n   *          });\n   *\n   *          test('should return -1 when not present', function() {\n   *\n   *          });\n   *\n   *          test('should return the index when present', function() {\n   *\n   *          });\n   *\n   *          suiteTeardown(function() {\n   *\n   *          });\n   *        });\n   *      });\n   *\n   * @param {Suite} suite Root suite.\n   */\n  var tdd$1 = function(suite) {\n    var suites = [suite];\n\n    suite.on(EVENT_FILE_PRE_REQUIRE$1, function(context, file, mocha) {\n      var common$1 = common(suites, context, mocha);\n\n      context.setup = common$1.beforeEach;\n      context.teardown = common$1.afterEach;\n      context.suiteSetup = common$1.before;\n      context.suiteTeardown = common$1.after;\n      context.run = mocha.options.delay && common$1.runWithSuite(suite);\n\n      /**\n       * Describe a \"suite\" with the given `title` and callback `fn` containing\n       * nested suites and/or tests.\n       */\n      context.suite = function(title, fn) {\n        return common$1.suite.create({\n          title: title,\n          file: file,\n          fn: fn\n        });\n      };\n\n      /**\n       * Pending suite.\n       */\n      context.suite.skip = function(title, fn) {\n        return common$1.suite.skip({\n          title: title,\n          file: file,\n          fn: fn\n        });\n      };\n\n      /**\n       * Exclusive test-case.\n       */\n      context.suite.only = function(title, fn) {\n        return common$1.suite.only({\n          title: title,\n          file: file,\n          fn: fn\n        });\n      };\n\n      /**\n       * Describe a specification or test-case with the given `title` and\n       * callback `fn` acting as a thunk.\n       */\n      context.test = function(title, fn) {\n        var suite = suites[0];\n        if (suite.isPending()) {\n          fn = null;\n        }\n        var test$1 = new test(title, fn);\n        test$1.file = file;\n        suite.addTest(test$1);\n        return test$1;\n      };\n\n      /**\n       * Exclusive test-case.\n       */\n\n      context.test.only = function(title, fn) {\n        return common$1.test.only(mocha, context.test(title, fn));\n      };\n\n      context.test.skip = common$1.test.skip;\n    });\n  };\n\n  var description$2 =\n    'traditional \"suite\"/\"test\" instead of BDD\\'s \"describe\"/\"it\"';\n  tdd$1.description = description$2;\n\n  var EVENT_FILE_PRE_REQUIRE = suite.constants\n    .EVENT_FILE_PRE_REQUIRE;\n\n  /**\n   * QUnit-style interface:\n   *\n   *     suite('Array');\n   *\n   *     test('#length', function() {\n   *       var arr = [1,2,3];\n   *       ok(arr.length == 3);\n   *     });\n   *\n   *     test('#indexOf()', function() {\n   *       var arr = [1,2,3];\n   *       ok(arr.indexOf(1) == 0);\n   *       ok(arr.indexOf(2) == 1);\n   *       ok(arr.indexOf(3) == 2);\n   *     });\n   *\n   *     suite('String');\n   *\n   *     test('#length', function() {\n   *       ok('foo'.length == 3);\n   *     });\n   *\n   * @param {Suite} suite Root suite.\n   */\n  var qunit$1 = function qUnitInterface(suite) {\n    var suites = [suite];\n\n    suite.on(EVENT_FILE_PRE_REQUIRE, function(context, file, mocha) {\n      var common$1 = common(suites, context, mocha);\n\n      context.before = common$1.before;\n      context.after = common$1.after;\n      context.beforeEach = common$1.beforeEach;\n      context.afterEach = common$1.afterEach;\n      context.run = mocha.options.delay && common$1.runWithSuite(suite);\n      /**\n       * Describe a \"suite\" with the given `title`.\n       */\n\n      context.suite = function(title) {\n        if (suites.length > 1) {\n          suites.shift();\n        }\n        return common$1.suite.create({\n          title: title,\n          file: file,\n          fn: false\n        });\n      };\n\n      /**\n       * Exclusive Suite.\n       */\n\n      context.suite.only = function(title) {\n        if (suites.length > 1) {\n          suites.shift();\n        }\n        return common$1.suite.only({\n          title: title,\n          file: file,\n          fn: false\n        });\n      };\n\n      /**\n       * Describe a specification or test-case\n       * with the given `title` and callback `fn`\n       * acting as a thunk.\n       */\n\n      context.test = function(title, fn) {\n        var test$1 = new test(title, fn);\n        test$1.file = file;\n        suites[0].addTest(test$1);\n        return test$1;\n      };\n\n      /**\n       * Exclusive test-case.\n       */\n\n      context.test.only = function(title, fn) {\n        return common$1.test.only(mocha, context.test(title, fn));\n      };\n\n      context.test.skip = common$1.test.skip;\n    });\n  };\n\n  var description$1 = 'QUnit style';\n  qunit$1.description = description$1;\n\n  /**\n   * Exports-style (as Node.js module) interface:\n   *\n   *     exports.Array = {\n   *       '#indexOf()': {\n   *         'should return -1 when the value is not present': function() {\n   *\n   *         },\n   *\n   *         'should return the correct index when the value is present': function() {\n   *\n   *         }\n   *       }\n   *     };\n   *\n   * @param {Suite} suite Root suite.\n   */\n  var exports$2 = function(suite$1) {\n    var suites = [suite$1];\n\n    suite$1.on(suite.constants.EVENT_FILE_REQUIRE, visit);\n\n    function visit(obj, file) {\n      var suite$1;\n      for (var key in obj) {\n        if (typeof obj[key] === 'function') {\n          var fn = obj[key];\n          switch (key) {\n            case 'before':\n              suites[0].beforeAll(fn);\n              break;\n            case 'after':\n              suites[0].afterAll(fn);\n              break;\n            case 'beforeEach':\n              suites[0].beforeEach(fn);\n              break;\n            case 'afterEach':\n              suites[0].afterEach(fn);\n              break;\n            default:\n              var test$1 = new test(key, fn);\n              test$1.file = file;\n              suites[0].addTest(test$1);\n          }\n        } else {\n          suite$1 = suite.create(suites[0], key);\n          suites.unshift(suite$1);\n          visit(obj[key], file);\n          suites.shift();\n        }\n      }\n    }\n  };\n\n  var description = 'Node.js module (\"exports\") style';\n  exports$2.description = description;\n\n  var bdd = bdd$1;\n  var tdd = tdd$1;\n  var qunit = qunit$1;\n  var exports$1 = exports$2;\n\n  var interfaces = {\n  \tbdd: bdd,\n  \ttdd: tdd,\n  \tqunit: qunit,\n  \texports: exports$1\n  };\n\n  /**\n   * @module Context\n   */\n  /**\n   * Expose `Context`.\n   */\n\n  var context = Context;\n\n  /**\n   * Initialize a new `Context`.\n   *\n   * @private\n   */\n  function Context() {}\n\n  /**\n   * Set or get the context `Runnable` to `runnable`.\n   *\n   * @private\n   * @param {Runnable} runnable\n   * @return {Context} context\n   */\n  Context.prototype.runnable = function(runnable) {\n    if (!arguments.length) {\n      return this._runnable;\n    }\n    this.test = this._runnable = runnable;\n    return this;\n  };\n\n  /**\n   * Set or get test timeout `ms`.\n   *\n   * @private\n   * @param {number} ms\n   * @return {Context} self\n   */\n  Context.prototype.timeout = function(ms) {\n    if (!arguments.length) {\n      return this.runnable().timeout();\n    }\n    this.runnable().timeout(ms);\n    return this;\n  };\n\n  /**\n   * Set or get test slowness threshold `ms`.\n   *\n   * @private\n   * @param {number} ms\n   * @return {Context} self\n   */\n  Context.prototype.slow = function(ms) {\n    if (!arguments.length) {\n      return this.runnable().slow();\n    }\n    this.runnable().slow(ms);\n    return this;\n  };\n\n  /**\n   * Mark a test as skipped.\n   *\n   * @private\n   * @throws Pending\n   */\n  Context.prototype.skip = function() {\n    this.runnable().skip();\n  };\n\n  /**\n   * Set or get a number of allowed retries on failed tests\n   *\n   * @private\n   * @param {number} n\n   * @return {Context} self\n   */\n  Context.prototype.retries = function(n) {\n    if (!arguments.length) {\n      return this.runnable().retries();\n    }\n    this.runnable().retries(n);\n    return this;\n  };\n\n  var mocharc = getCjsExportFromNamespace(mocharc$2);\n\n  var mocha$1 = createCommonjsModule(function (module, exports) {\n\n  /*!\n   * mocha\n   * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n   * MIT Licensed\n   */\n\n\n\n\n\n\n\n\n\n\n  const {\n    warn,\n    createInvalidReporterError,\n    createInvalidInterfaceError,\n    createMochaInstanceAlreadyDisposedError,\n    createMochaInstanceAlreadyRunningError,\n    createUnsupportedError\n  } = errors;\n  const {\n    EVENT_FILE_PRE_REQUIRE,\n    EVENT_FILE_POST_REQUIRE,\n    EVENT_FILE_REQUIRE\n  } = suite.constants;\n  var debug = browser('mocha:mocha');\n\n  exports = module.exports = Mocha;\n\n  /**\n   * A Mocha instance is a finite state machine.\n   * These are the states it can be in.\n   * @private\n   */\n  var mochaStates = utils.defineConstants({\n    /**\n     * Initial state of the mocha instance\n     * @private\n     */\n    INIT: 'init',\n    /**\n     * Mocha instance is running tests\n     * @private\n     */\n    RUNNING: 'running',\n    /**\n     * Mocha instance is done running tests and references to test functions and hooks are cleaned.\n     * You can reset this state by unloading the test files.\n     * @private\n     */\n    REFERENCES_CLEANED: 'referencesCleaned',\n    /**\n     * Mocha instance is disposed and can no longer be used.\n     * @private\n     */\n    DISPOSED: 'disposed'\n  });\n\n  /**\n   * To require local UIs and reporters when running in node.\n   */\n\n  if (!utils.isBrowser() && typeof module.paths !== 'undefined') {\n    var cwd = utils.cwd();\n    module.paths.push(cwd, path.join(cwd, 'node_modules'));\n  }\n\n  /**\n   * Expose internals.\n   * @private\n   */\n\n  exports.utils = utils;\n  exports.interfaces = interfaces;\n  /**\n   * @public\n   * @memberof Mocha\n   */\n  exports.reporters = reporters;\n  exports.Runnable = runnable;\n  exports.Context = context;\n  /**\n   *\n   * @memberof Mocha\n   */\n  exports.Runner = runner;\n  exports.Suite = suite;\n  exports.Hook = hook;\n  exports.Test = test;\n\n  let currentContext;\n  exports.afterEach = function(...args) {\n    return (currentContext.afterEach || currentContext.teardown).apply(\n      this,\n      args\n    );\n  };\n  exports.after = function(...args) {\n    return (currentContext.after || currentContext.suiteTeardown).apply(\n      this,\n      args\n    );\n  };\n  exports.beforeEach = function(...args) {\n    return (currentContext.beforeEach || currentContext.setup).apply(this, args);\n  };\n  exports.before = function(...args) {\n    return (currentContext.before || currentContext.suiteSetup).apply(this, args);\n  };\n  exports.describe = function(...args) {\n    return (currentContext.describe || currentContext.suite).apply(this, args);\n  };\n  exports.describe.only = function(...args) {\n    return (currentContext.describe || currentContext.suite).only.apply(\n      this,\n      args\n    );\n  };\n  exports.describe.skip = function(...args) {\n    return (currentContext.describe || currentContext.suite).skip.apply(\n      this,\n      args\n    );\n  };\n  exports.it = function(...args) {\n    return (currentContext.it || currentContext.test).apply(this, args);\n  };\n  exports.it.only = function(...args) {\n    return (currentContext.it || currentContext.test).only.apply(this, args);\n  };\n  exports.it.skip = function(...args) {\n    return (currentContext.it || currentContext.test).skip.apply(this, args);\n  };\n  exports.xdescribe = exports.describe.skip;\n  exports.xit = exports.it.skip;\n  exports.setup = exports.beforeEach;\n  exports.suiteSetup = exports.before;\n  exports.suiteTeardown = exports.after;\n  exports.suite = exports.describe;\n  exports.teardown = exports.afterEach;\n  exports.test = exports.it;\n  exports.run = function(...args) {\n    return currentContext.run.apply(this, args);\n  };\n\n  /**\n   * Constructs a new Mocha instance with `options`.\n   *\n   * @public\n   * @class Mocha\n   * @param {Object} [options] - Settings object.\n   * @param {boolean} [options.allowUncaught] - Propagate uncaught errors?\n   * @param {boolean} [options.asyncOnly] - Force `done` callback or promise?\n   * @param {boolean} [options.bail] - Bail after first test failure?\n   * @param {boolean} [options.checkLeaks] - Check for global variable leaks?\n   * @param {boolean} [options.color] - Color TTY output from reporter?\n   * @param {boolean} [options.delay] - Delay root suite execution?\n   * @param {boolean} [options.diff] - Show diff on failure?\n   * @param {boolean} [options.dryRun] - Report tests without running them?\n   * @param {boolean} [options.failZero] - Fail test run if zero tests?\n   * @param {string} [options.fgrep] - Test filter given string.\n   * @param {boolean} [options.forbidOnly] - Tests marked `only` fail the suite?\n   * @param {boolean} [options.forbidPending] - Pending tests fail the suite?\n   * @param {boolean} [options.fullTrace] - Full stacktrace upon failure?\n   * @param {string[]} [options.global] - Variables expected in global scope.\n   * @param {RegExp|string} [options.grep] - Test filter given regular expression.\n   * @param {boolean} [options.growl] - Enable desktop notifications?\n   * @param {boolean} [options.inlineDiffs] - Display inline diffs?\n   * @param {boolean} [options.invert] - Invert test filter matches?\n   * @param {boolean} [options.noHighlighting] - Disable syntax highlighting?\n   * @param {string|constructor} [options.reporter] - Reporter name or constructor.\n   * @param {Object} [options.reporterOption] - Reporter settings object.\n   * @param {number} [options.retries] - Number of times to retry failed tests.\n   * @param {number} [options.slow] - Slow threshold value.\n   * @param {number|string} [options.timeout] - Timeout threshold value.\n   * @param {string} [options.ui] - Interface name.\n   * @param {boolean} [options.parallel] - Run jobs in parallel.\n   * @param {number} [options.jobs] - Max number of worker processes for parallel runs.\n   * @param {MochaRootHookObject} [options.rootHooks] - Hooks to bootstrap the root suite with.\n   * @param {string[]} [options.require] - Pathname of `rootHooks` plugin for parallel runs.\n   * @param {boolean} [options.isWorker] - Should be `true` if `Mocha` process is running in a worker process.\n   */\n  function Mocha(options = {}) {\n    options = {...mocharc, ...options};\n    this.files = [];\n    this.options = options;\n    // root suite\n    this.suite = new exports.Suite('', new exports.Context(), true);\n    this._cleanReferencesAfterRun = true;\n    this._state = mochaStates.INIT;\n\n    this.grep(options.grep)\n      .fgrep(options.fgrep)\n      .ui(options.ui)\n      .reporter(\n        options.reporter,\n        options.reporterOption || options.reporterOptions // for backwards compability\n      )\n      .slow(options.slow)\n      .global(options.global);\n\n    // this guard exists because Suite#timeout does not consider `undefined` to be valid input\n    if (typeof options.timeout !== 'undefined') {\n      this.timeout(options.timeout === false ? 0 : options.timeout);\n    }\n\n    if ('retries' in options) {\n      this.retries(options.retries);\n    }\n\n    [\n      'allowUncaught',\n      'asyncOnly',\n      'bail',\n      'checkLeaks',\n      'color',\n      'delay',\n      'diff',\n      'dryRun',\n      'failZero',\n      'forbidOnly',\n      'forbidPending',\n      'fullTrace',\n      'growl',\n      'inlineDiffs',\n      'invert'\n    ].forEach(function(opt) {\n      if (options[opt]) {\n        this[opt]();\n      }\n    }, this);\n\n    if (options.rootHooks) {\n      this.rootHooks(options.rootHooks);\n    }\n\n    /**\n     * The class which we'll instantiate in {@link Mocha#run}.  Defaults to\n     * {@link Runner} in serial mode; changes in parallel mode.\n     * @memberof Mocha\n     * @private\n     */\n    this._runnerClass = exports.Runner;\n\n    /**\n     * Whether or not to call {@link Mocha#loadFiles} implicitly when calling\n     * {@link Mocha#run}.  If this is `true`, then it's up to the consumer to call\n     * {@link Mocha#loadFiles} _or_ {@link Mocha#loadFilesAsync}.\n     * @private\n     * @memberof Mocha\n     */\n    this._lazyLoadFiles = false;\n\n    /**\n     * It's useful for a Mocha instance to know if it's running in a worker process.\n     * We could derive this via other means, but it's helpful to have a flag to refer to.\n     * @memberof Mocha\n     * @private\n     */\n    this.isWorker = Boolean(options.isWorker);\n\n    this.globalSetup(options.globalSetup)\n      .globalTeardown(options.globalTeardown)\n      .enableGlobalSetup(options.enableGlobalSetup)\n      .enableGlobalTeardown(options.enableGlobalTeardown);\n\n    if (\n      options.parallel &&\n      (typeof options.jobs === 'undefined' || options.jobs > 1)\n    ) {\n      debug('attempting to enable parallel mode');\n      this.parallelMode(true);\n    }\n  }\n\n  /**\n   * Enables or disables bailing on the first failure.\n   *\n   * @public\n   * @see [CLI option](../#-bail-b)\n   * @param {boolean} [bail=true] - Whether to bail on first error.\n   * @returns {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.bail = function(bail) {\n    this.suite.bail(bail !== false);\n    return this;\n  };\n\n  /**\n   * @summary\n   * Adds `file` to be loaded for execution.\n   *\n   * @description\n   * Useful for generic setup code that must be included within test suite.\n   *\n   * @public\n   * @see [CLI option](../#-file-filedirectoryglob)\n   * @param {string} file - Pathname of file to be loaded.\n   * @returns {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.addFile = function(file) {\n    this.files.push(file);\n    return this;\n  };\n\n  /**\n   * Sets reporter to `reporter`, defaults to \"spec\".\n   *\n   * @public\n   * @see [CLI option](../#-reporter-name-r-name)\n   * @see [Reporters](../#reporters)\n   * @param {String|Function} reporterName - Reporter name or constructor.\n   * @param {Object} [reporterOptions] - Options used to configure the reporter.\n   * @returns {Mocha} this\n   * @chainable\n   * @throws {Error} if requested reporter cannot be loaded\n   * @example\n   *\n   * // Use XUnit reporter and direct its output to file\n   * mocha.reporter('xunit', { output: '/path/to/testspec.xunit.xml' });\n   */\n  Mocha.prototype.reporter = function(reporterName, reporterOptions) {\n    if (typeof reporterName === 'function') {\n      this._reporter = reporterName;\n    } else {\n      reporterName = reporterName || 'spec';\n      var reporter;\n      // Try to load a built-in reporter.\n      if (reporters[reporterName]) {\n        reporter = reporters[reporterName];\n      }\n      // Try to load reporters from process.cwd() and node_modules\n      if (!reporter) {\n        try {\n          reporter = commonjsRequire(reporterName);\n        } catch (err) {\n          if (err.code === 'MODULE_NOT_FOUND') {\n            // Try to load reporters from a path (absolute or relative)\n            try {\n              reporter = commonjsRequire(path.resolve(utils.cwd(), reporterName));\n            } catch (_err) {\n              _err.code === 'MODULE_NOT_FOUND'\n                ? warn(`'${reporterName}' reporter not found`)\n                : warn(\n                    `'${reporterName}' reporter blew up with error:\\n ${err.stack}`\n                  );\n            }\n          } else {\n            warn(`'${reporterName}' reporter blew up with error:\\n ${err.stack}`);\n          }\n        }\n      }\n      if (!reporter) {\n        throw createInvalidReporterError(\n          `invalid reporter '${reporterName}'`,\n          reporterName\n        );\n      }\n      this._reporter = reporter;\n    }\n    this.options.reporterOption = reporterOptions;\n    // alias option name is used in public reporters xunit/tap/progress\n    this.options.reporterOptions = reporterOptions;\n    return this;\n  };\n\n  /**\n   * Sets test UI `name`, defaults to \"bdd\".\n   *\n   * @public\n   * @see [CLI option](../#-ui-name-u-name)\n   * @see [Interface DSLs](../#interfaces)\n   * @param {string|Function} [ui=bdd] - Interface name or class.\n   * @returns {Mocha} this\n   * @chainable\n   * @throws {Error} if requested interface cannot be loaded\n   */\n  Mocha.prototype.ui = function(ui) {\n    var bindInterface;\n    if (typeof ui === 'function') {\n      bindInterface = ui;\n    } else {\n      ui = ui || 'bdd';\n      bindInterface = exports.interfaces[ui];\n      if (!bindInterface) {\n        try {\n          bindInterface = commonjsRequire(ui);\n        } catch (err) {\n          throw createInvalidInterfaceError(`invalid interface '${ui}'`, ui);\n        }\n      }\n    }\n    bindInterface(this.suite);\n\n    this.suite.on(EVENT_FILE_PRE_REQUIRE, function(context) {\n      currentContext = context;\n    });\n\n    return this;\n  };\n\n  /**\n   * Loads `files` prior to execution. Does not support ES Modules.\n   *\n   * @description\n   * The implementation relies on Node's `require` to execute\n   * the test interface functions and will be subject to its cache.\n   * Supports only CommonJS modules. To load ES modules, use Mocha#loadFilesAsync.\n   *\n   * @private\n   * @see {@link Mocha#addFile}\n   * @see {@link Mocha#run}\n   * @see {@link Mocha#unloadFiles}\n   * @see {@link Mocha#loadFilesAsync}\n   * @param {Function} [fn] - Callback invoked upon completion.\n   */\n  Mocha.prototype.loadFiles = function(fn) {\n    var self = this;\n    var suite = this.suite;\n    this.files.forEach(function(file) {\n      file = path.resolve(file);\n      suite.emit(EVENT_FILE_PRE_REQUIRE, commonjsGlobal, file, self);\n      suite.emit(EVENT_FILE_REQUIRE, commonjsRequire(), file, self);\n      suite.emit(EVENT_FILE_POST_REQUIRE, commonjsGlobal, file, self);\n    });\n    fn && fn();\n  };\n\n  /**\n   * Loads `files` prior to execution. Supports Node ES Modules.\n   *\n   * @description\n   * The implementation relies on Node's `require` and `import` to execute\n   * the test interface functions and will be subject to its cache.\n   * Supports both CJS and ESM modules.\n   *\n   * @public\n   * @see {@link Mocha#addFile}\n   * @see {@link Mocha#run}\n   * @see {@link Mocha#unloadFiles}\n   * @returns {Promise}\n   * @example\n   *\n   * // loads ESM (and CJS) test files asynchronously, then runs root suite\n   * mocha.loadFilesAsync()\n   *   .then(() => mocha.run(failures => process.exitCode = failures ? 1 : 0))\n   *   .catch(() => process.exitCode = 1);\n   */\n  Mocha.prototype.loadFilesAsync = function() {\n    var self = this;\n    var suite = this.suite;\n    this.lazyLoadFiles(true);\n\n    return require$$10.loadFilesAsync(\n      this.files,\n      function(file) {\n        suite.emit(EVENT_FILE_PRE_REQUIRE, commonjsGlobal, file, self);\n      },\n      function(file, resultModule) {\n        suite.emit(EVENT_FILE_REQUIRE, resultModule, file, self);\n        suite.emit(EVENT_FILE_POST_REQUIRE, commonjsGlobal, file, self);\n      }\n    );\n  };\n\n  /**\n   * Removes a previously loaded file from Node's `require` cache.\n   *\n   * @private\n   * @static\n   * @see {@link Mocha#unloadFiles}\n   * @param {string} file - Pathname of file to be unloaded.\n   */\n  Mocha.unloadFile = function(file) {\n    if (utils.isBrowser()) {\n      throw createUnsupportedError(\n        'unloadFile() is only suported in a Node.js environment'\n      );\n    }\n    return require$$10.unloadFile(file);\n  };\n\n  /**\n   * Unloads `files` from Node's `require` cache.\n   *\n   * @description\n   * This allows required files to be \"freshly\" reloaded, providing the ability\n   * to reuse a Mocha instance programmatically.\n   * Note: does not clear ESM module files from the cache\n   *\n   * <strong>Intended for consumers &mdash; not used internally</strong>\n   *\n   * @public\n   * @see {@link Mocha#run}\n   * @returns {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.unloadFiles = function() {\n    if (this._state === mochaStates.DISPOSED) {\n      throw createMochaInstanceAlreadyDisposedError(\n        'Mocha instance is already disposed, it cannot be used again.',\n        this._cleanReferencesAfterRun,\n        this\n      );\n    }\n\n    this.files.forEach(function(file) {\n      Mocha.unloadFile(file);\n    });\n    this._state = mochaStates.INIT;\n    return this;\n  };\n\n  /**\n   * Sets `grep` filter after escaping RegExp special characters.\n   *\n   * @public\n   * @see {@link Mocha#grep}\n   * @param {string} str - Value to be converted to a regexp.\n   * @returns {Mocha} this\n   * @chainable\n   * @example\n   *\n   * // Select tests whose full title begins with `\"foo\"` followed by a period\n   * mocha.fgrep('foo.');\n   */\n  Mocha.prototype.fgrep = function(str) {\n    if (!str) {\n      return this;\n    }\n    return this.grep(new RegExp(escapeStringRegexp(str)));\n  };\n\n  /**\n   * @summary\n   * Sets `grep` filter used to select specific tests for execution.\n   *\n   * @description\n   * If `re` is a regexp-like string, it will be converted to regexp.\n   * The regexp is tested against the full title of each test (i.e., the\n   * name of the test preceded by titles of each its ancestral suites).\n   * As such, using an <em>exact-match</em> fixed pattern against the\n   * test name itself will not yield any matches.\n   * <br>\n   * <strong>Previous filter value will be overwritten on each call!</strong>\n   *\n   * @public\n   * @see [CLI option](../#-grep-regexp-g-regexp)\n   * @see {@link Mocha#fgrep}\n   * @see {@link Mocha#invert}\n   * @param {RegExp|String} re - Regular expression used to select tests.\n   * @return {Mocha} this\n   * @chainable\n   * @example\n   *\n   * // Select tests whose full title contains `\"match\"`, ignoring case\n   * mocha.grep(/match/i);\n   * @example\n   *\n   * // Same as above but with regexp-like string argument\n   * mocha.grep('/match/i');\n   * @example\n   *\n   * // ## Anti-example\n   * // Given embedded test `it('only-this-test')`...\n   * mocha.grep('/^only-this-test$/');    // NO! Use `.only()` to do this!\n   */\n  Mocha.prototype.grep = function(re) {\n    if (utils.isString(re)) {\n      // extract args if it's regex-like, i.e: [string, pattern, flag]\n      var arg = re.match(/^\\/(.*)\\/([gimy]{0,4})$|.*/);\n      this.options.grep = new RegExp(arg[1] || arg[0], arg[2]);\n    } else {\n      this.options.grep = re;\n    }\n    return this;\n  };\n\n  /**\n   * Inverts `grep` matches.\n   *\n   * @public\n   * @see {@link Mocha#grep}\n   * @return {Mocha} this\n   * @chainable\n   * @example\n   *\n   * // Select tests whose full title does *not* contain `\"match\"`, ignoring case\n   * mocha.grep(/match/i).invert();\n   */\n  Mocha.prototype.invert = function() {\n    this.options.invert = true;\n    return this;\n  };\n\n  /**\n   * Enables or disables checking for global variables leaked while running tests.\n   *\n   * @public\n   * @see [CLI option](../#-check-leaks)\n   * @param {boolean} [checkLeaks=true] - Whether to check for global variable leaks.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.checkLeaks = function(checkLeaks) {\n    this.options.checkLeaks = checkLeaks !== false;\n    return this;\n  };\n\n  /**\n   * Enables or disables whether or not to dispose after each test run.\n   * Disable this to ensure you can run the test suite multiple times.\n   * If disabled, be sure to dispose mocha when you're done to prevent memory leaks.\n   * @public\n   * @see {@link Mocha#dispose}\n   * @param {boolean} cleanReferencesAfterRun\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.cleanReferencesAfterRun = function(cleanReferencesAfterRun) {\n    this._cleanReferencesAfterRun = cleanReferencesAfterRun !== false;\n    return this;\n  };\n\n  /**\n   * Manually dispose this mocha instance. Mark this instance as `disposed` and unable to run more tests.\n   * It also removes function references to tests functions and hooks, so variables trapped in closures can be cleaned by the garbage collector.\n   * @public\n   */\n  Mocha.prototype.dispose = function() {\n    if (this._state === mochaStates.RUNNING) {\n      throw createMochaInstanceAlreadyRunningError(\n        'Cannot dispose while the mocha instance is still running tests.'\n      );\n    }\n    this.unloadFiles();\n    this._previousRunner && this._previousRunner.dispose();\n    this.suite.dispose();\n    this._state = mochaStates.DISPOSED;\n  };\n\n  /**\n   * Displays full stack trace upon test failure.\n   *\n   * @public\n   * @see [CLI option](../#-full-trace)\n   * @param {boolean} [fullTrace=true] - Whether to print full stacktrace upon failure.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.fullTrace = function(fullTrace) {\n    this.options.fullTrace = fullTrace !== false;\n    return this;\n  };\n\n  /**\n   * Enables desktop notification support if prerequisite software installed.\n   *\n   * @public\n   * @see [CLI option](../#-growl-g)\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.growl = function() {\n    this.options.growl = this.isGrowlCapable();\n    if (!this.options.growl) {\n      var detail = utils.isBrowser()\n        ? 'notification support not available in this browser...'\n        : 'notification support prerequisites not installed...';\n      console.error(detail + ' cannot enable!');\n    }\n    return this;\n  };\n\n  /**\n   * @summary\n   * Determines if Growl support seems likely.\n   *\n   * @description\n   * <strong>Not available when run in browser.</strong>\n   *\n   * @private\n   * @see {@link Growl#isCapable}\n   * @see {@link Mocha#growl}\n   * @return {boolean} whether Growl support can be expected\n   */\n  Mocha.prototype.isGrowlCapable = growl.isCapable;\n\n  /**\n   * Implements desktop notifications using a pseudo-reporter.\n   *\n   * @private\n   * @see {@link Mocha#growl}\n   * @see {@link Growl#notify}\n   * @param {Runner} runner - Runner instance.\n   */\n  Mocha.prototype._growl = growl.notify;\n\n  /**\n   * Specifies whitelist of variable names to be expected in global scope.\n   *\n   * @public\n   * @see [CLI option](../#-global-variable-name)\n   * @see {@link Mocha#checkLeaks}\n   * @param {String[]|String} global - Accepted global variable name(s).\n   * @return {Mocha} this\n   * @chainable\n   * @example\n   *\n   * // Specify variables to be expected in global scope\n   * mocha.global(['jQuery', 'MyLib']);\n   */\n  Mocha.prototype.global = function(global) {\n    this.options.global = (this.options.global || [])\n      .concat(global)\n      .filter(Boolean)\n      .filter(function(elt, idx, arr) {\n        return arr.indexOf(elt) === idx;\n      });\n    return this;\n  };\n  // for backwards compability, 'globals' is an alias of 'global'\n  Mocha.prototype.globals = Mocha.prototype.global;\n\n  /**\n   * Enables or disables TTY color output by screen-oriented reporters.\n   *\n   * @public\n   * @see [CLI option](../#-color-c-colors)\n   * @param {boolean} [color=true] - Whether to enable color output.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.color = function(color) {\n    this.options.color = color !== false;\n    return this;\n  };\n\n  /**\n   * Enables or disables reporter to use inline diffs (rather than +/-)\n   * in test failure output.\n   *\n   * @public\n   * @see [CLI option](../#-inline-diffs)\n   * @param {boolean} [inlineDiffs=true] - Whether to use inline diffs.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.inlineDiffs = function(inlineDiffs) {\n    this.options.inlineDiffs = inlineDiffs !== false;\n    return this;\n  };\n\n  /**\n   * Enables or disables reporter to include diff in test failure output.\n   *\n   * @public\n   * @see [CLI option](../#-diff)\n   * @param {boolean} [diff=true] - Whether to show diff on failure.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.diff = function(diff) {\n    this.options.diff = diff !== false;\n    return this;\n  };\n\n  /**\n   * @summary\n   * Sets timeout threshold value.\n   *\n   * @description\n   * A string argument can use shorthand (such as \"2s\") and will be converted.\n   * If the value is `0`, timeouts will be disabled.\n   *\n   * @public\n   * @see [CLI option](../#-timeout-ms-t-ms)\n   * @see [Timeouts](../#timeouts)\n   * @param {number|string} msecs - Timeout threshold value.\n   * @return {Mocha} this\n   * @chainable\n   * @example\n   *\n   * // Sets timeout to one second\n   * mocha.timeout(1000);\n   * @example\n   *\n   * // Same as above but using string argument\n   * mocha.timeout('1s');\n   */\n  Mocha.prototype.timeout = function(msecs) {\n    this.suite.timeout(msecs);\n    return this;\n  };\n\n  /**\n   * Sets the number of times to retry failed tests.\n   *\n   * @public\n   * @see [CLI option](../#-retries-n)\n   * @see [Retry Tests](../#retry-tests)\n   * @param {number} retry - Number of times to retry failed tests.\n   * @return {Mocha} this\n   * @chainable\n   * @example\n   *\n   * // Allow any failed test to retry one more time\n   * mocha.retries(1);\n   */\n  Mocha.prototype.retries = function(retry) {\n    this.suite.retries(retry);\n    return this;\n  };\n\n  /**\n   * Sets slowness threshold value.\n   *\n   * @public\n   * @see [CLI option](../#-slow-ms-s-ms)\n   * @param {number} msecs - Slowness threshold value.\n   * @return {Mocha} this\n   * @chainable\n   * @example\n   *\n   * // Sets \"slow\" threshold to half a second\n   * mocha.slow(500);\n   * @example\n   *\n   * // Same as above but using string argument\n   * mocha.slow('0.5s');\n   */\n  Mocha.prototype.slow = function(msecs) {\n    this.suite.slow(msecs);\n    return this;\n  };\n\n  /**\n   * Forces all tests to either accept a `done` callback or return a promise.\n   *\n   * @public\n   * @see [CLI option](../#-async-only-a)\n   * @param {boolean} [asyncOnly=true] - Whether to force `done` callback or promise.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.asyncOnly = function(asyncOnly) {\n    this.options.asyncOnly = asyncOnly !== false;\n    return this;\n  };\n\n  /**\n   * Disables syntax highlighting (in browser).\n   *\n   * @public\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.noHighlighting = function() {\n    this.options.noHighlighting = true;\n    return this;\n  };\n\n  /**\n   * Enables or disables uncaught errors to propagate.\n   *\n   * @public\n   * @see [CLI option](../#-allow-uncaught)\n   * @param {boolean} [allowUncaught=true] - Whether to propagate uncaught errors.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.allowUncaught = function(allowUncaught) {\n    this.options.allowUncaught = allowUncaught !== false;\n    return this;\n  };\n\n  /**\n   * @summary\n   * Delays root suite execution.\n   *\n   * @description\n   * Used to perform async operations before any suites are run.\n   *\n   * @public\n   * @see [delayed root suite](../#delayed-root-suite)\n   * @returns {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.delay = function delay() {\n    this.options.delay = true;\n    return this;\n  };\n\n  /**\n   * Enables or disables running tests in dry-run mode.\n   *\n   * @public\n   * @see [CLI option](../#-dry-run)\n   * @param {boolean} [dryRun=true] - Whether to activate dry-run mode.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.dryRun = function(dryRun) {\n    this.options.dryRun = dryRun !== false;\n    return this;\n  };\n\n  /**\n   * Fails test run if no tests encountered with exit-code 1.\n   *\n   * @public\n   * @see [CLI option](../#-fail-zero)\n   * @param {boolean} [failZero=true] - Whether to fail test run.\n   * @return {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.failZero = function(failZero) {\n    this.options.failZero = failZero !== false;\n    return this;\n  };\n\n  /**\n   * Causes tests marked `only` to fail the suite.\n   *\n   * @public\n   * @see [CLI option](../#-forbid-only)\n   * @param {boolean} [forbidOnly=true] - Whether tests marked `only` fail the suite.\n   * @returns {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.forbidOnly = function(forbidOnly) {\n    this.options.forbidOnly = forbidOnly !== false;\n    return this;\n  };\n\n  /**\n   * Causes pending tests and tests marked `skip` to fail the suite.\n   *\n   * @public\n   * @see [CLI option](../#-forbid-pending)\n   * @param {boolean} [forbidPending=true] - Whether pending tests fail the suite.\n   * @returns {Mocha} this\n   * @chainable\n   */\n  Mocha.prototype.forbidPending = function(forbidPending) {\n    this.options.forbidPending = forbidPending !== false;\n    return this;\n  };\n\n  /**\n   * Throws an error if mocha is in the wrong state to be able to transition to a \"running\" state.\n   * @private\n   */\n  Mocha.prototype._guardRunningStateTransition = function() {\n    if (this._state === mochaStates.RUNNING) {\n      throw createMochaInstanceAlreadyRunningError(\n        'Mocha instance is currently running tests, cannot start a next test run until this one is done',\n        this\n      );\n    }\n    if (\n      this._state === mochaStates.DISPOSED ||\n      this._state === mochaStates.REFERENCES_CLEANED\n    ) {\n      throw createMochaInstanceAlreadyDisposedError(\n        'Mocha instance is already disposed, cannot start a new test run. Please create a new mocha instance. Be sure to set disable `cleanReferencesAfterRun` when you want to reuse the same mocha instance for multiple test runs.',\n        this._cleanReferencesAfterRun,\n        this\n      );\n    }\n  };\n\n  /**\n   * Mocha version as specified by \"package.json\".\n   *\n   * @name Mocha#version\n   * @type string\n   * @readonly\n   */\n  Object.defineProperty(Mocha.prototype, 'version', {\n    value: require$$9.version,\n    configurable: false,\n    enumerable: true,\n    writable: false\n  });\n\n  /**\n   * Callback to be invoked when test execution is complete.\n   *\n   * @private\n   * @callback DoneCB\n   * @param {number} failures - Number of failures that occurred.\n   */\n\n  /**\n   * Runs root suite and invokes `fn()` when complete.\n   *\n   * @description\n   * To run tests multiple times (or to run tests in files that are\n   * already in the `require` cache), make sure to clear them from\n   * the cache first!\n   *\n   * @public\n   * @see {@link Mocha#unloadFiles}\n   * @see {@link Runner#run}\n   * @param {DoneCB} [fn] - Callback invoked when test execution completed.\n   * @returns {Runner} runner instance\n   * @example\n   *\n   * // exit with non-zero status if there were test failures\n   * mocha.run(failures => process.exitCode = failures ? 1 : 0);\n   */\n  Mocha.prototype.run = function(fn) {\n    this._guardRunningStateTransition();\n    this._state = mochaStates.RUNNING;\n    if (this._previousRunner) {\n      this._previousRunner.dispose();\n      this.suite.reset();\n    }\n    if (this.files.length && !this._lazyLoadFiles) {\n      this.loadFiles();\n    }\n    var suite = this.suite;\n    var options = this.options;\n    options.files = this.files;\n    const runner = new this._runnerClass(suite, {\n      cleanReferencesAfterRun: this._cleanReferencesAfterRun,\n      delay: options.delay,\n      dryRun: options.dryRun,\n      failZero: options.failZero\n    });\n    statsCollector(runner);\n    var reporter = new this._reporter(runner, options);\n    runner.checkLeaks = options.checkLeaks === true;\n    runner.fullStackTrace = options.fullTrace;\n    runner.asyncOnly = options.asyncOnly;\n    runner.allowUncaught = options.allowUncaught;\n    runner.forbidOnly = options.forbidOnly;\n    runner.forbidPending = options.forbidPending;\n    if (options.grep) {\n      runner.grep(options.grep, options.invert);\n    }\n    if (options.global) {\n      runner.globals(options.global);\n    }\n    if (options.growl) {\n      this._growl(runner);\n    }\n    if (options.color !== undefined) {\n      exports.reporters.Base.useColors = options.color;\n    }\n    exports.reporters.Base.inlineDiffs = options.inlineDiffs;\n    exports.reporters.Base.hideDiff = !options.diff;\n\n    const done = failures => {\n      this._previousRunner = runner;\n      this._state = this._cleanReferencesAfterRun\n        ? mochaStates.REFERENCES_CLEANED\n        : mochaStates.INIT;\n      fn = fn || utils.noop;\n      if (typeof reporter.done === 'function') {\n        reporter.done(failures, fn);\n      } else {\n        fn(failures);\n      }\n    };\n\n    const runAsync = async runner => {\n      const context =\n        this.options.enableGlobalSetup && this.hasGlobalSetupFixtures()\n          ? await this.runGlobalSetup(runner)\n          : {};\n      const failureCount = await runner.runAsync({\n        files: this.files,\n        options\n      });\n      if (this.options.enableGlobalTeardown && this.hasGlobalTeardownFixtures()) {\n        await this.runGlobalTeardown(runner, {context});\n      }\n      return failureCount;\n    };\n\n    // no \"catch\" here is intentional. errors coming out of\n    // Runner#run are considered uncaught/unhandled and caught\n    // by the `process` event listeners.\n    // also: returning anything other than `runner` would be a breaking\n    // change\n    runAsync(runner).then(done);\n\n    return runner;\n  };\n\n  /**\n   * Assigns hooks to the root suite\n   * @param {MochaRootHookObject} [hooks] - Hooks to assign to root suite\n   * @chainable\n   */\n  Mocha.prototype.rootHooks = function rootHooks({\n    beforeAll = [],\n    beforeEach = [],\n    afterAll = [],\n    afterEach = []\n  } = {}) {\n    beforeAll = utils.castArray(beforeAll);\n    beforeEach = utils.castArray(beforeEach);\n    afterAll = utils.castArray(afterAll);\n    afterEach = utils.castArray(afterEach);\n    beforeAll.forEach(hook => {\n      this.suite.beforeAll(hook);\n    });\n    beforeEach.forEach(hook => {\n      this.suite.beforeEach(hook);\n    });\n    afterAll.forEach(hook => {\n      this.suite.afterAll(hook);\n    });\n    afterEach.forEach(hook => {\n      this.suite.afterEach(hook);\n    });\n    return this;\n  };\n\n  /**\n   * Toggles parallel mode.\n   *\n   * Must be run before calling {@link Mocha#run}. Changes the `Runner` class to\n   * use; also enables lazy file loading if not already done so.\n   *\n   * Warning: when passed `false` and lazy loading has been enabled _via any means_ (including calling `parallelMode(true)`), this method will _not_ disable lazy loading. Lazy loading is a prerequisite for parallel\n   * mode, but parallel mode is _not_ a prerequisite for lazy loading!\n   * @param {boolean} [enable] - If `true`, enable; otherwise disable.\n   * @throws If run in browser\n   * @throws If Mocha not in `INIT` state\n   * @returns {Mocha}\n   * @chainable\n   * @public\n   */\n  Mocha.prototype.parallelMode = function parallelMode(enable = true) {\n    if (utils.isBrowser()) {\n      throw createUnsupportedError('parallel mode is only supported in Node.js');\n    }\n    const parallel = Boolean(enable);\n    if (\n      parallel === this.options.parallel &&\n      this._lazyLoadFiles &&\n      this._runnerClass !== exports.Runner\n    ) {\n      return this;\n    }\n    if (this._state !== mochaStates.INIT) {\n      throw createUnsupportedError(\n        'cannot change parallel mode after having called run()'\n      );\n    }\n    this.options.parallel = parallel;\n\n    // swap Runner class\n    this._runnerClass = parallel\n      ? require$$10\n      : exports.Runner;\n\n    // lazyLoadFiles may have been set `true` otherwise (for ESM loading),\n    // so keep `true` if so.\n    return this.lazyLoadFiles(this._lazyLoadFiles || parallel);\n  };\n\n  /**\n   * Disables implicit call to {@link Mocha#loadFiles} in {@link Mocha#run}. This\n   * setting is used by watch mode, parallel mode, and for loading ESM files.\n   * @todo This should throw if we've already loaded files; such behavior\n   * necessitates adding a new state.\n   * @param {boolean} [enable] - If `true`, disable eager loading of files in\n   * {@link Mocha#run}\n   * @chainable\n   * @public\n   */\n  Mocha.prototype.lazyLoadFiles = function lazyLoadFiles(enable) {\n    this._lazyLoadFiles = enable === true;\n    debug('set lazy load to %s', enable);\n    return this;\n  };\n\n  /**\n   * Configures one or more global setup fixtures.\n   *\n   * If given no parameters, _unsets_ any previously-set fixtures.\n   * @chainable\n   * @public\n   * @param {MochaGlobalFixture|MochaGlobalFixture[]} [setupFns] - Global setup fixture(s)\n   * @returns {Mocha}\n   */\n  Mocha.prototype.globalSetup = function globalSetup(setupFns = []) {\n    setupFns = utils.castArray(setupFns);\n    this.options.globalSetup = setupFns;\n    debug('configured %d global setup functions', setupFns.length);\n    return this;\n  };\n\n  /**\n   * Configures one or more global teardown fixtures.\n   *\n   * If given no parameters, _unsets_ any previously-set fixtures.\n   * @chainable\n   * @public\n   * @param {MochaGlobalFixture|MochaGlobalFixture[]} [teardownFns] - Global teardown fixture(s)\n   * @returns {Mocha}\n   */\n  Mocha.prototype.globalTeardown = function globalTeardown(teardownFns = []) {\n    teardownFns = utils.castArray(teardownFns);\n    this.options.globalTeardown = teardownFns;\n    debug('configured %d global teardown functions', teardownFns.length);\n    return this;\n  };\n\n  /**\n   * Run any global setup fixtures sequentially, if any.\n   *\n   * This is _automatically called_ by {@link Mocha#run} _unless_ the `runGlobalSetup` option is `false`; see {@link Mocha#enableGlobalSetup}.\n   *\n   * The context object this function resolves with should be consumed by {@link Mocha#runGlobalTeardown}.\n   * @param {object} [context] - Context object if already have one\n   * @public\n   * @returns {Promise<object>} Context object\n   */\n  Mocha.prototype.runGlobalSetup = async function runGlobalSetup(context = {}) {\n    const {globalSetup} = this.options;\n    if (globalSetup && globalSetup.length) {\n      debug('run(): global setup starting');\n      await this._runGlobalFixtures(globalSetup, context);\n      debug('run(): global setup complete');\n    }\n    return context;\n  };\n\n  /**\n   * Run any global teardown fixtures sequentially, if any.\n   *\n   * This is _automatically called_ by {@link Mocha#run} _unless_ the `runGlobalTeardown` option is `false`; see {@link Mocha#enableGlobalTeardown}.\n   *\n   * Should be called with context object returned by {@link Mocha#runGlobalSetup}, if applicable.\n   * @param {object} [context] - Context object if already have one\n   * @public\n   * @returns {Promise<object>} Context object\n   */\n  Mocha.prototype.runGlobalTeardown = async function runGlobalTeardown(\n    context = {}\n  ) {\n    const {globalTeardown} = this.options;\n    if (globalTeardown && globalTeardown.length) {\n      debug('run(): global teardown starting');\n      await this._runGlobalFixtures(globalTeardown, context);\n    }\n    debug('run(): global teardown complete');\n    return context;\n  };\n\n  /**\n   * Run global fixtures sequentially with context `context`\n   * @private\n   * @param {MochaGlobalFixture[]} [fixtureFns] - Fixtures to run\n   * @param {object} [context] - context object\n   * @returns {Promise<object>} context object\n   */\n  Mocha.prototype._runGlobalFixtures = async function _runGlobalFixtures(\n    fixtureFns = [],\n    context = {}\n  ) {\n    for await (const fixtureFn of fixtureFns) {\n      await fixtureFn.call(context);\n    }\n    return context;\n  };\n\n  /**\n   * Toggle execution of any global setup fixture(s)\n   *\n   * @chainable\n   * @public\n   * @param {boolean } [enabled=true] - If `false`, do not run global setup fixture\n   * @returns {Mocha}\n   */\n  Mocha.prototype.enableGlobalSetup = function enableGlobalSetup(enabled = true) {\n    this.options.enableGlobalSetup = Boolean(enabled);\n    return this;\n  };\n\n  /**\n   * Toggle execution of any global teardown fixture(s)\n   *\n   * @chainable\n   * @public\n   * @param {boolean } [enabled=true] - If `false`, do not run global teardown fixture\n   * @returns {Mocha}\n   */\n  Mocha.prototype.enableGlobalTeardown = function enableGlobalTeardown(\n    enabled = true\n  ) {\n    this.options.enableGlobalTeardown = Boolean(enabled);\n    return this;\n  };\n\n  /**\n   * Returns `true` if one or more global setup fixtures have been supplied.\n   * @public\n   * @returns {boolean}\n   */\n  Mocha.prototype.hasGlobalSetupFixtures = function hasGlobalSetupFixtures() {\n    return Boolean(this.options.globalSetup.length);\n  };\n\n  /**\n   * Returns `true` if one or more global teardown fixtures have been supplied.\n   * @public\n   * @returns {boolean}\n   */\n  Mocha.prototype.hasGlobalTeardownFixtures = function hasGlobalTeardownFixtures() {\n    return Boolean(this.options.globalTeardown.length);\n  };\n\n  /**\n   * An alternative way to define root hooks that works with parallel runs.\n   * @typedef {Object} MochaRootHookObject\n   * @property {Function|Function[]} [beforeAll] - \"Before all\" hook(s)\n   * @property {Function|Function[]} [beforeEach] - \"Before each\" hook(s)\n   * @property {Function|Function[]} [afterAll] - \"After all\" hook(s)\n   * @property {Function|Function[]} [afterEach] - \"After each\" hook(s)\n   */\n\n  /**\n   * An function that returns a {@link MochaRootHookObject}, either sync or async.\n     @callback MochaRootHookFunction\n   * @returns {MochaRootHookObject|Promise<MochaRootHookObject>}\n   */\n\n  /**\n   * A function that's invoked _once_ which is either sync or async.\n   * Can be a \"teardown\" or \"setup\".  These will all share the same context.\n   * @callback MochaGlobalFixture\n   * @returns {void|Promise<void>}\n   */\n\n  /**\n   * An object making up all necessary parts of a plugin loader and aggregator\n   * @typedef {Object} PluginDefinition\n   * @property {string} exportName - Named export to use\n   * @property {string} [optionName] - Option name for Mocha constructor (use `exportName` if omitted)\n   * @property {PluginValidator} [validate] - Validator function\n   * @property {PluginFinalizer} [finalize] - Finalizer/aggregator function\n   */\n\n  /**\n   * A (sync) function to assert a user-supplied plugin implementation is valid.\n   *\n   * Defined in a {@link PluginDefinition}.\n\n   * @callback PluginValidator\n   * @param {*} value - Value to check\n   * @this {PluginDefinition}\n   * @returns {void}\n   */\n\n  /**\n   * A function to finalize plugins impls of a particular ilk\n   * @callback PluginFinalizer\n   * @param {Array<*>} impls - User-supplied implementations\n   * @returns {Promise<*>|*}\n   */\n  });\n\n  /* eslint no-unused-vars: off */\n  /* eslint-env commonjs */\n\n  /**\n   * Shim process.stdout.\n   */\n\n  process$1.stdout = browserStdout({label: false});\n\n\n\n\n\n  /**\n   * Create a Mocha instance.\n   *\n   * @return {undefined}\n   */\n\n  var mocha = new mocha$1({reporter: 'html'});\n\n  /**\n   * Save timer references to avoid Sinon interfering (see GH-237).\n   */\n\n  var Date$1 = commonjsGlobal.Date;\n  var setTimeout$1 = commonjsGlobal.setTimeout;\n  commonjsGlobal.setInterval;\n  commonjsGlobal.clearTimeout;\n  commonjsGlobal.clearInterval;\n\n  var uncaughtExceptionHandlers = [];\n\n  var originalOnerrorHandler = commonjsGlobal.onerror;\n\n  /**\n   * Remove uncaughtException listener.\n   * Revert to original onerror handler if previously defined.\n   */\n\n  process$1.removeListener = function(e, fn) {\n    if (e === 'uncaughtException') {\n      if (originalOnerrorHandler) {\n        commonjsGlobal.onerror = originalOnerrorHandler;\n      } else {\n        commonjsGlobal.onerror = function() {};\n      }\n      var i = uncaughtExceptionHandlers.indexOf(fn);\n      if (i !== -1) {\n        uncaughtExceptionHandlers.splice(i, 1);\n      }\n    }\n  };\n\n  /**\n   * Implements listenerCount for 'uncaughtException'.\n   */\n\n  process$1.listenerCount = function(name) {\n    if (name === 'uncaughtException') {\n      return uncaughtExceptionHandlers.length;\n    }\n    return 0;\n  };\n\n  /**\n   * Implements uncaughtException listener.\n   */\n\n  process$1.on = function(e, fn) {\n    if (e === 'uncaughtException') {\n      commonjsGlobal.onerror = function(err, url, line) {\n        fn(new Error(err + ' (' + url + ':' + line + ')'));\n        return !mocha.options.allowUncaught;\n      };\n      uncaughtExceptionHandlers.push(fn);\n    }\n  };\n\n  process$1.listeners = function(e) {\n    if (e === 'uncaughtException') {\n      return uncaughtExceptionHandlers;\n    }\n    return [];\n  };\n\n  // The BDD UI is registered by default, but no UI will be functional in the\n  // browser without an explicit call to the overridden `mocha.ui` (see below).\n  // Ensure that this default UI does not expose its methods to the global scope.\n  mocha.suite.removeAllListeners('pre-require');\n\n  var immediateQueue = [];\n  var immediateTimeout;\n\n  function timeslice() {\n    var immediateStart = new Date$1().getTime();\n    while (immediateQueue.length && new Date$1().getTime() - immediateStart < 100) {\n      immediateQueue.shift()();\n    }\n    if (immediateQueue.length) {\n      immediateTimeout = setTimeout$1(timeslice, 0);\n    } else {\n      immediateTimeout = null;\n    }\n  }\n\n  /**\n   * High-performance override of Runner.immediately.\n   */\n\n  mocha$1.Runner.immediately = function(callback) {\n    immediateQueue.push(callback);\n    if (!immediateTimeout) {\n      immediateTimeout = setTimeout$1(timeslice, 0);\n    }\n  };\n\n  /**\n   * Function to allow assertion libraries to throw errors directly into mocha.\n   * This is useful when running tests in a browser because window.onerror will\n   * only receive the 'message' attribute of the Error.\n   */\n  mocha.throwError = function(err) {\n    uncaughtExceptionHandlers.forEach(function(fn) {\n      fn(err);\n    });\n    throw err;\n  };\n\n  /**\n   * Override ui to ensure that the ui functions are initialized.\n   * Normally this would happen in Mocha.prototype.loadFiles.\n   */\n\n  mocha.ui = function(ui) {\n    mocha$1.prototype.ui.call(this, ui);\n    this.suite.emit('pre-require', commonjsGlobal, null, this);\n    return this;\n  };\n\n  /**\n   * Setup mocha with the given setting options.\n   */\n\n  mocha.setup = function(opts) {\n    if (typeof opts === 'string') {\n      opts = {ui: opts};\n    }\n    if (opts.delay === true) {\n      this.delay();\n    }\n    var self = this;\n    Object.keys(opts)\n      .filter(function(opt) {\n        return opt !== 'delay';\n      })\n      .forEach(function(opt) {\n        if (Object.prototype.hasOwnProperty.call(opts, opt)) {\n          self[opt](opts[opt]);\n        }\n      });\n    return this;\n  };\n\n  /**\n   * Run mocha, returning the Runner.\n   */\n\n  mocha.run = function(fn) {\n    var options = mocha.options;\n    mocha.globals('location');\n\n    var query = parseQuery(commonjsGlobal.location.search || '');\n    if (query.grep) {\n      mocha.grep(query.grep);\n    }\n    if (query.fgrep) {\n      mocha.fgrep(query.fgrep);\n    }\n    if (query.invert) {\n      mocha.invert();\n    }\n\n    return mocha$1.prototype.run.call(mocha, function(err) {\n      // The DOM Document is not available in Web Workers.\n      var document = commonjsGlobal.document;\n      if (\n        document &&\n        document.getElementById('mocha') &&\n        options.noHighlighting !== true\n      ) {\n        highlightTags('code');\n      }\n      if (fn) {\n        fn(err);\n      }\n    });\n  };\n\n  /**\n   * Expose the process shim.\n   * https://github.com/mochajs/mocha/pull/916\n   */\n\n  mocha$1.process = process$1;\n\n  /**\n   * Expose mocha.\n   */\n  commonjsGlobal.Mocha = mocha$1;\n  commonjsGlobal.mocha = mocha;\n\n  // for bundlers: enable `import {describe, it} from 'mocha'`\n  // `bdd` interface only\n  // prettier-ignore\n  [ \n    'describe', 'context', 'it', 'specify',\n    'xdescribe', 'xcontext', 'xit', 'xspecify',\n    'before', 'beforeEach', 'afterEach', 'after'\n  ].forEach(function(key) {\n    mocha[key] = commonjsGlobal[key];\n  });\n\n  var browserEntry = mocha;\n\n  return browserEntry;\n\n}));\n","'use strict';\n\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  }\n\n  // The `in` operator does not work with primitives.\n  return name in Object(obj);\n}\n\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    if (\n      value === 'constructor' ||\n      value === '__proto__' ||\n      value === 'prototype'\n    ) {\n      return {};\n    }\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.[\\]])/g, '$1') };\n    }\n\n    return parsed;\n  });\n}\n\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = typeof pathDepth === 'undefined' ? parsed.length : pathDepth;\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === pathDepth - 1) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null;\n  // Here we iterate through every part of the path\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i];\n\n    // If it's the last part of the path, we set the 'propName' value with the property name\n    if (i === pathDepth - 1) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Now we set the property with the name held by 'propName' on object with the desired val\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1];\n      // Here we set the name of the property which will be defined\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Here we decide if this property will be an array or a new object\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent:\n      parsed.length > 1 ?\n        internalGetPathValue(obj, parsed, parsed.length - 1) :\n        obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed),\n  };\n  info.exists = hasProperty(info.parent, info.name);\n\n  return info;\n}\n\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue,\n};\n","\n      import API from \"!../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../css-loader/dist/cjs.js!./mocha.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../css-loader/dist/cjs.js!./mocha.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","import \"./style.css\";\n\nimport {doTests} from './test.js'\n\n\nexport {obtenerNumeros,validarGrupo}\n\n// La funció autoinvocada ja no és necessària perquè estem en mòdul i aquests ja són privats\n//(() => {\n\n// prettier-ignore\nlet numeros = [\n    2, 9, 5, 6, 7, 8, 1, 4, 3,\n    6, 4, 3, 9, 5, 1, 8, 7, 2,\n    8, 7, 1, 3, 4, 2, 5, 9, 6,\n    7, 1, 2, 5, 6, 9, 3, 8, 4,\n    3, 6, 8, 7, 1, 4, 9, 2, 5,\n    4, 5, 9, 8, 2, 3, 6, 1, 7,\n    9, 2, 7, 1, 3, 6, 4, 5, 0, //falten els 8\n    5, 8, 6, 4, 9, 7, 2, 3, 0, // falta el 1\n    1, 3, 4, 2, 0, 5, 7, 6, 9,\n];\nlet item = 0;\n\nasync function descargarSudokus() {\n  let response = await fetch(\"static/coleccionsudokus.json\");\n  let s = await response.json();\n  let keys = Object.keys(s.sudokus);\n  let existingKeys = [];\n  if (localStorage.getItem(\"solucionades\")) {\n    existingKeys = localStorage.getItem(\"solucionades\").split(\" \");\n  }\n  keys = keys.filter((k) => existingKeys.indexOf(k) == -1);\n  item = keys[Math.floor(Math.random() * keys.length)];\n  numeros = s.sudokus[item];\n  generar(numeros);   \n}\n\nfunction generar(numeros) {\n  let divSudoku = document.getElementById(\"sudoku\");\n  let tablaSudoku = document.createElement(\"table\");\n  for (let i = 0; i < 9; i++) {\n    // files\n    let fila = document.createElement(\"tr\");\n    if ((i == 2) | (i == 5)) fila.className = \"separador\";\n    tablaSudoku.append(fila);\n    for (let j = 0; j < 9; j++) {\n      // columnes\n      let numero = numeros[i * 9 + j];\n      let celda = document.createElement(\"td\");\n      celda.id = `celda-${i}-${j}`;\n      if ((j == 2) | (j == 5)) {\n        celda.className = \"separador\";\n      }\n      celda.innerHTML = `<span>${numero > 0 ? numero : \"\"}</span>`;\n      if (numero == 0) {\n        // Es pot editar\n        let span = celda.querySelector(\"span\");\n        span.classList.add(\"editable\");\n      }\n      fila.append(celda);\n    }\n  }\n  divSudoku.append(tablaSudoku);\n}\n\nfunction obtenerNumeros() {\n  let numeros = [];\n  document.querySelectorAll(\"td\").forEach((e) => (e.className = \"\")); //reset\n  // Se pot fer un map\n  let files = document.querySelectorAll(\"tr\");\n  for (let i = 0; i < files.length; i++) {\n    let columnes = files[i].querySelectorAll(\"span\");\n    for (let j = 0; j < columnes.length; j++) {\n        let numero = parseInt(columnes[j].innerText);\n        if (!isNaN(numero)){numeros.push(numero);}\n        else {numeros.push(0);}\n      \n    }\n  }\n  //console.log(numeros);\n  return numeros;\n}\n\nfunction validarGrupo(grupo){\n    return grupo.size == 9;\n}\n\nfunction validar(actual) {\n  // Versió molt imperativa\n\n  let posicionActual = actual.parentElement.id\n    .split(\"-\")\n    .filter((e) => e != \"celda\")\n    .map((e) => parseInt(e));\n\n  let valid = true;\n  let numeros = obtenerNumeros();\n      console.log(numeros);\n  // Comprovar files\n  for (let i = 0; i < 9; i++) {\n    // cada fila\n    let fila = new Set();\n    for (let j = 0; j < 9; j++) {\n      const element = numeros[i * 9 + j];\n      element > 0 && fila.add(element);\n    }\n    let valida = validarGrupo(fila);\n\n    if (!valida) {\n      console.warn(\"Fila no vàlida\", { fila });\n      valid = false;\n      if (i == posicionActual[0]) {\n        // si es la fila correspondiente\n        actual.parentElement.parentElement\n          .querySelectorAll(\"td\")\n          .forEach((e) => e.classList.add(\"mal\"));\n      }\n    }\n  }\n\n  // Comprovar columnes\n  for (let i = 0; i < 9; i++) {\n    // cada columna\n    let columna = new Set();\n    for (let j = 0; j < 9; j++) {\n      const element = numeros[j * 9 + i];\n      element > 0  && columna.add(element);\n    }\n    let valida = validarGrupo(columna);\n\n    if (!valida) {\n      console.warn(\"columna no vàlida\", { columna });\n      valid = false;\n      if (i == posicionActual[1]) {\n        // si es la fila correspondiente\n        let expresion = new RegExp(`celda-[0-9]-${i}`);\n        let mismaColumna = [...document.querySelectorAll(\"td\")].filter((e) =>\n          expresion.test(e.id)\n        );\n        //console.log(mismaColumna);\n        mismaColumna.forEach((e) => e.classList.add(\"mal\"));\n      }\n    }\n  }\n\n  // Comprovar quadrats\n  for (let i = 0; i < 3; i++) {\n    // cada fila de quadrats\n    for (let j = 0; j < 3; j++) {\n      //cada columna de quadrats\n      let quadrat = new Set();\n      for (let l = 0; l < 3; l++) {\n        //dins del quadrat\n        for (let m = 0; m < 3; m++) {\n          const element = numeros[i * 27 + j * 3 + l * 9 + m];\n          // i és el desplaçament de files de quadrats 3*9\n          // j és el desplaçament en eixa fila per columnes que són de 3\n          // l és el desplaçament en files dins de la fila de quadrats, files de 9\n          // m és el desplaçament dins del quadrat\n          element > 0  && quadrat.add(element);\n        }\n      }\n      let valida = validarGrupo(quadrat);\n\n      if (!valida) {\n        console.warn(\"quadrat no vàlid\", { quadrat });\n        valid = false;\n        if (\n          i == Math.floor(posicionActual[0] / 3) &&\n          j == Math.floor(posicionActual[1] / 3)\n        ) {\n          // si es la fila correspondiente\n          //console.log({posicionActual});\n          let ii = i * 3,\n            jj = j * 3;\n          let mismoCuadrado = [\n            [ii, jj],\n            [ii + 1, jj],\n            [ii + 2, jj],\n            [ii, jj + 1],\n            [ii + 1, jj + 1],\n            [ii + 2, jj + 1],\n            [ii, jj + 2],\n            [ii + 1, jj + 2],\n            [ii + 2, jj + 2],\n          ];\n          mismoCuadrado = mismoCuadrado.map((e) =>\n            document.querySelector(`#celda-${e[0]}-${e[1]}`)\n          );\n          // console.log({mismoCuadrado});\n          mismoCuadrado.forEach((e) => e.classList.add(\"mal\"));\n        }\n      }\n    }\n  }\n\n  if (valid == false) {\n    document.querySelector(\"#sudoku table\").classList.add(\"mal\");\n  } else {\n    // solucionat\n    document.querySelector(\"#sudoku table\").classList.add(\"bien\");\n    if (localStorage.getItem(\"solucionades\")) {\n      let solucionades = localStorage.getItem(\"solucionades\");\n      solucionades = `${solucionades} ${item}`;\n      localStorage.setItem(\"solucionades\", solucionades);\n    } else {\n      localStorage.setItem(\"solucionades\", `${item}`);\n    }  \n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", async function () {\n  await descargarSudokus(); // És asíncrono\n      doTests();\n\n  document.querySelector(\"#sudoku\").addEventListener(\"click\", (event) => {\n    //console.log(event.target);\n    let celda = event.target;\n    if (celda.tagName == \"TD\") {\n      celda = celda.querySelector(\"span\");\n    }\n    // console.log({celda});\n\n    if (celda.classList.contains(\"editable\")) {\n      let teclado = document.createElement(\"div\");\n      teclado.innerHTML = `<span>1</span>\n        <span>2</span>\n        <span>3</span>\n        <span>4</span>\n        <span>5</span>\n        <span>6</span>\n        <span>7</span>\n        <span>8</span>\n        <span>9</span>\n        `;\n      teclado.classList.add(\"teclado\");\n      celda.parentElement.append(teclado);\n      teclado.addEventListener(\"click\", (e) => {\n        celda.innerText = e.target.innerText;\n        teclado.remove();\n        validar(celda);\n      });\n    }\n  });\n});\n\n//})();\n","import \"mocha/mocha.css\";\nimport mocha from \"mocha/mocha-es2018\";\nimport chai from \"chai\";\nimport { obtenerNumeros, validarGrupo } from \"./sudoku.js\";\n\nvar expect = chai.expect;\n\nexport function doTests() {\n  console.log(\"TESTS!!!!!!!!!!\");\n\n  mocha.setup(\"bdd\");\n\n  // DESCRIBES\n  describe(\"Sudoku\", function () {\n    describe(\"Obtener números\", function () {\n      it(\"Debe ser un array de 81 elementos\", () => {\n        expect(obtenerNumeros().length).to.eql(81);\n      });\n      it(\"Los elementos serán numéricos de 0 a 9\", () => {\n        expect(obtenerNumeros()).to.satisfy((nums) =>\n          nums.every(\n            (n) => !isNaN(n) && [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].includes(n)\n          )\n        );\n      });\n    });\n    describe(\"Validaciones\", function () {\n      it(\"Validar un set bueno\", () => {\n        expect(validarGrupo(new Set([1, 2, 3, 4, 5, 6, 7, 8, 9]))).to.equal(\n          true\n        );\n      });\n      it(\"Validar un set incompleto\", () => {\n        expect(validarGrupo(new Set([1, 2, 3, 4, 5, 6, 7, 9]))).to.equal(false);\n      });\n      it(\"Validar un set de más de 9\", () => {\n        expect(validarGrupo(new Set([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]))).to.equal(\n          false\n        );\n      });\n    });\n  });\n\n  mocha.run();\n}\n","import chai from './index.js';\n\nexport const expect = chai.expect;\nexport const version = chai.version;\nexport const Assertion = chai.Assertion;\nexport const AssertionError = chai.AssertionError;\nexport const util = chai.util;\nexport const config = chai.config;\nexport const use = chai.use;\nexport const should = chai.should;\nexport const assert = chai.assert;\nexport const core = chai.core;\n\nexport default chai;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/sudoku.js\");\n",""],"names":[],"sourceRoot":""}